(undo-tree-save-format-version . 1)
"9f725dc0f331b7231fa15010d6b7a57bea0906d2"
[nil nil nil nil (26130 30332 604843 705000) 0 nil]
([nil nil ((142 . 143) (t 26130 30334 189008 615000)) nil (26130 30344 65786 395000) 0 nil] [nil nil ((142 . 143) (t 26130 30321 475670 258000)) ((#("}" 0 1 (jsx-depth 1 part-side jsx)) . 142)) (26130 30331 866338 257000) 0 nil])
([nil nil ((122 . 123) (t 26130 30346 122346 665000)) nil (26130 30349 622234 26000) 0 nil] [nil nil ((nil rear-nonsticky nil 144 . 145) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -196) (143 . 197) 142) ((#("
	<MatrixRainingLetters custom_class=\"absolute z-0\"/>
" 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx rear-nonsticky nil) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 3 23 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 23 24 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 24 25 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 25 36 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 36 37 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 37 50 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 50 51 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 51 52 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 52 53 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 53 54 (jsx-depth 1 part-side jsx)) . 143) (undo-tree-id765 . -53) (undo-tree-id766 . -53) (undo-tree-id767 . -53) (undo-tree-id768 . -2) (undo-tree-id769 . -2) (196 . 197) (nil rear-nonsticky t 144 . 145)) (26130 30343 977165 594000) 0 nil])
([nil nil ((122 . 123) (#("[" 0 1 (jsx-depth 1 part-side jsx)) . 122) (122 . 123)) ((#("[" 0 1 (jsx-depth 1 part-side jsx)) . 122) (122 . 123) (#("{" 0 1 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx)) . 122)) (26130 30331 393892 785000) 0 nil])
([nil nil ((#("[" 0 1 (jsx-depth 1 part-side jsx)) . -122) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) 123) nil (26130 30349 622233 576000) 0 nil])
([nil nil ((nil rear-nonsticky nil 197 . 198) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -249) (196 . 250) 145) ((#("
	<MatrixRainingLetters custom_class=\"absolute z-0\"/>
" 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx rear-nonsticky nil) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 3 23 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 23 24 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 24 25 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 25 36 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 36 37 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 37 50 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 50 51 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 51 52 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 52 53 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 53 54 (jsx-depth 1 part-side jsx)) . 196) (undo-tree-id760 . -53) (undo-tree-id761 . -1) (undo-tree-id762 . -53) (undo-tree-id763 . -2) (undo-tree-id764 . -2) (249 . 250) (nil rear-nonsticky t 197 . 198)) (26130 30343 975267 82000) 0 nil])
([nil nil ((#("// Layout.js

import React from 'react';

const Layout = ({ children }) => {
  return (
    <div>
      <header>
        {/* Header content */}
        <h1>Welcome to My App</h1>
      </header>
      <main className='lg:px-[15%]'>
        {/* Main content */}
        {children}
      </main>
      <footer>
        {/* Footer content */}
        <p>Copyright Â© 2024 My App</p>
      </footer>
    </div>
  );
};

export default Layout;
" 0 1 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 1 12 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 12 13 (syntax-table (12) part-side jsx) 13 14 (part-side jsx) 14 20 (face web-mode-keyword-face part-side jsx) 20 21 (part-side jsx) 21 26 (face web-mode-type-face part-side jsx) 26 27 (part-side jsx) 27 31 (face web-mode-keyword-face part-side jsx) 31 32 (part-side jsx) 32 33 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 33 38 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 38 39 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 39 42 (part-side jsx) 42 47 (face web-mode-keyword-face part-side jsx) 47 48 (part-side jsx) 48 54 (face web-mode-function-name-face part-side jsx) 54 60 (part-side jsx) 60 68 (face web-mode-variable-name-face part-side jsx) 68 77 (part-side jsx) 77 79 (part-side jsx) 79 85 (face web-mode-keyword-face part-side jsx) 85 88 (part-side jsx) 88 92 (part-side jsx) 92 93 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 93 96 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 96 97 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 97 98 (jsx-depth 1 part-side jsx) 98 104 (jsx-depth 1 part-side jsx) 104 105 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "header" jsx-depth 1 part-side jsx) 105 111 (font-lock-face web-mode-html-tag-face tag-type start tag-name "header" jsx-depth 1 part-side jsx) 111 112 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "header" jsx-depth 1 part-side jsx) 112 113 (jsx-depth 1 part-side jsx) 113 121 (jsx-depth 1 part-side jsx) 121 122 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 122 123 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 123 141 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 141 142 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 142 143 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 143 144 (jsx-depth 1 part-side jsx) 144 152 (jsx-depth 1 part-side jsx) 152 153 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 153 155 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 155 156 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 156 173 (jsx-depth 1 part-side jsx) 173 174 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 174 175 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 175 177 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 177 178 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 178 179 (jsx-depth 1 part-side jsx) 179 185 (jsx-depth 1 part-side jsx) 185 186 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "header" jsx-depth 1 part-side jsx) 186 187 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 187 193 (font-lock-face web-mode-html-tag-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 193 194 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "header" jsx-depth 1 part-side jsx) 194 195 (jsx-depth 1 part-side jsx) 195 201 (jsx-depth 1 part-side jsx) 201 202 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "main" jsx-depth 1 part-side jsx) 202 206 (font-lock-face web-mode-html-tag-face tag-type start tag-name "main" jsx-depth 1 part-side jsx) 206 207 (tag-type start tag-name "main" jsx-depth 1 part-side jsx) 207 208 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 208 216 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 216 217 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 217 218 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 218 220 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 220 229 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 229 230 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 230 231 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "main" jsx-depth 1 part-side jsx) 231 232 (jsx-depth 1 part-side jsx) 232 240 (jsx-depth 1 part-side jsx) 240 241 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 241 242 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 242 258 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 258 259 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 259 260 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 260 261 (jsx-depth 1 part-side jsx) 261 269 (jsx-depth 1 part-side jsx) 269 270 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 270 278 (jsx-depth 2 part-side jsx) 278 279 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 279 280 (jsx-depth 1 part-side jsx) 280 286 (jsx-depth 1 part-side jsx) 286 287 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "main" jsx-depth 1 part-side jsx) 287 288 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 288 292 (font-lock-face web-mode-html-tag-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 292 293 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "main" jsx-depth 1 part-side jsx) 293 294 (jsx-depth 1 part-side jsx) 294 300 (jsx-depth 1 part-side jsx) 300 301 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 301 307 (font-lock-face web-mode-html-tag-face tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 307 308 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 308 309 (jsx-depth 1 part-side jsx) 309 317 (jsx-depth 1 part-side jsx) 317 318 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 318 319 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 319 337 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 337 338 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 338 339 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 339 340 (jsx-depth 1 part-side jsx) 340 348 (jsx-depth 1 part-side jsx) 348 349 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p" jsx-depth 1 part-side jsx) 349 350 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 1 part-side jsx) 350 351 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 1 part-side jsx) 351 374 (jsx-depth 1 part-side jsx) 374 375 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 1 part-side jsx) 375 376 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 376 377 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 377 378 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 1 part-side jsx) 378 379 (jsx-depth 1 part-side jsx) 379 385 (jsx-depth 1 part-side jsx) 385 386 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 386 387 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 387 393 (font-lock-face web-mode-html-tag-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 393 394 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 394 395 (jsx-depth 1 part-side jsx) 395 399 (jsx-depth 1 part-side jsx) 399 400 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 400 401 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 401 404 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 404 405 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx) 405 411 (part-side jsx) 411 415 (part-side jsx) 415 421 (face web-mode-keyword-face part-side jsx) 421 422 (part-side jsx) 422 429 (face web-mode-keyword-face part-side jsx) 429 438 (part-side jsx)) . 1) (undo-tree-id746 . -437) (undo-tree-id747 . 243) (undo-tree-id748 . -438) (undo-tree-id749 . -437) (undo-tree-id750 . -437) (undo-tree-id751 . -121) (undo-tree-id752 . -121)) ((1 . 439)) (26130 30330 926155 628000) 0 nil] [nil nil ((#("// Layout.js

import React from 'react';

const Layout = ({ children }) => {
  return (
    <div>
      <header>
        {/* Header content */}
        <h1>Welcome to My App</h1>
      </header>
      <main className='lg:px-[15%]'>
        {/* Main content */}
        {children}
      </main>
      <footer>
        {/* Footer content */}
        <p>Copyright Â© 2024 My App</p>
      </footer>
    </div>
  );
};

export default Layout;
" 0 1 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 1 12 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 12 13 (syntax-table (12) part-side jsx) 13 14 (part-side jsx) 14 20 (face web-mode-keyword-face part-side jsx) 20 21 (part-side jsx) 21 26 (face web-mode-type-face part-side jsx) 26 27 (part-side jsx) 27 31 (face web-mode-keyword-face part-side jsx) 31 32 (part-side jsx) 32 33 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 33 38 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 38 39 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 39 42 (part-side jsx) 42 47 (face web-mode-keyword-face part-side jsx) 47 48 (part-side jsx) 48 54 (face web-mode-function-name-face part-side jsx) 54 60 (part-side jsx) 60 68 (face web-mode-variable-name-face part-side jsx) 68 77 (part-side jsx) 77 79 (part-side jsx) 79 85 (face web-mode-keyword-face part-side jsx) 85 88 (part-side jsx) 88 92 (part-side jsx) 92 93 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 93 96 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 96 97 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 97 98 (jsx-depth 1 part-side jsx) 98 104 (jsx-depth 1 part-side jsx) 104 105 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "header" jsx-depth 1 part-side jsx) 105 111 (font-lock-face web-mode-html-tag-face tag-type start tag-name "header" jsx-depth 1 part-side jsx) 111 112 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "header" jsx-depth 1 part-side jsx) 112 113 (jsx-depth 1 part-side jsx) 113 121 (jsx-depth 1 part-side jsx) 121 122 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 122 123 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 123 141 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 141 142 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 142 143 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 143 144 (jsx-depth 1 part-side jsx) 144 152 (jsx-depth 1 part-side jsx) 152 153 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 153 155 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 155 156 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 156 173 (jsx-depth 1 part-side jsx) 173 174 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 174 175 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 175 177 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 177 178 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 178 179 (jsx-depth 1 part-side jsx) 179 185 (jsx-depth 1 part-side jsx) 185 186 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "header" jsx-depth 1 part-side jsx) 186 187 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 187 193 (font-lock-face web-mode-html-tag-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 193 194 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "header" jsx-depth 1 part-side jsx) 194 195 (jsx-depth 1 part-side jsx) 195 201 (jsx-depth 1 part-side jsx) 201 202 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "main" jsx-depth 1 part-side jsx) 202 206 (font-lock-face web-mode-html-tag-face tag-type start tag-name "main" jsx-depth 1 part-side jsx) 206 207 (tag-type start tag-name "main" jsx-depth 1 part-side jsx) 207 208 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 208 216 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 216 217 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 217 218 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 218 220 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 220 229 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 229 230 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 230 231 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "main" jsx-depth 1 part-side jsx) 231 232 (jsx-depth 1 part-side jsx) 232 240 (jsx-depth 1 part-side jsx) 240 241 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 241 242 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 242 258 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 258 259 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 259 260 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 260 261 (jsx-depth 1 part-side jsx) 261 269 (jsx-depth 1 part-side jsx) 269 270 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 270 278 (jsx-depth 2 part-side jsx) 278 279 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 279 280 (jsx-depth 1 part-side jsx) 280 286 (jsx-depth 1 part-side jsx) 286 287 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "main" jsx-depth 1 part-side jsx) 287 288 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 288 292 (font-lock-face web-mode-html-tag-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 292 293 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "main" jsx-depth 1 part-side jsx) 293 294 (jsx-depth 1 part-side jsx) 294 300 (jsx-depth 1 part-side jsx) 300 301 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 301 307 (font-lock-face web-mode-html-tag-face tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 307 308 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 308 309 (jsx-depth 1 part-side jsx) 309 317 (jsx-depth 1 part-side jsx) 317 318 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 318 319 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 319 337 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 337 338 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 338 339 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 339 340 (jsx-depth 1 part-side jsx) 340 348 (jsx-depth 1 part-side jsx) 348 349 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p" jsx-depth 1 part-side jsx) 349 350 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 1 part-side jsx) 350 351 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 1 part-side jsx) 351 374 (jsx-depth 1 part-side jsx) 374 375 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 1 part-side jsx) 375 376 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 376 377 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 377 378 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 1 part-side jsx) 378 379 (jsx-depth 1 part-side jsx) 379 385 (jsx-depth 1 part-side jsx) 385 386 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 386 387 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 387 393 (font-lock-face web-mode-html-tag-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 393 394 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 394 395 (jsx-depth 1 part-side jsx) 395 399 (jsx-depth 1 part-side jsx) 399 400 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 400 401 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 401 404 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 404 405 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx) 405 411 (part-side jsx) 411 415 (part-side jsx) 415 421 (face web-mode-keyword-face part-side jsx) 421 422 (part-side jsx) 422 429 (face web-mode-keyword-face part-side jsx) 429 438 (part-side jsx)) . 1) (undo-tree-id96 . -293) (undo-tree-id97 . 243) (undo-tree-id98 . -438) (undo-tree-id99 . -438) (undo-tree-id100 . -437) (undo-tree-id101 . -438) (undo-tree-id102 . -438) (undo-tree-id104 . -293) (undo-tree-id106 . -292) (undo-tree-id107 . -195) (undo-tree-id108 . -292) (undo-tree-id110 . -292) (t 26130 28668 744932 577000)) ((1 . 439)) (26130 28694 573786 103000) 0 nil] [nil nil ((196 . 295) 226 (t 26130 27948 364195 612000)) ((#("      <main className='lg:px-[15%]'>
        {/* Main content */}
        {children}
      </main>
" 0 6 (jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "main" jsx-depth 1 part-side jsx) 7 11 (font-lock-face web-mode-html-tag-face tag-type start tag-name "main" jsx-depth 1 part-side jsx) 11 12 (tag-type start tag-name "main" jsx-depth 1 part-side jsx) 12 13 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 13 21 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 21 22 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 22 23 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 23 25 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 25 34 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 34 35 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 35 36 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "main" jsx-depth 1 part-side jsx) 36 37 (jsx-depth 1 part-side jsx) 37 45 (jsx-depth 1 part-side jsx) 45 46 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 46 47 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 47 63 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 63 64 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 64 65 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 65 66 (jsx-depth 1 part-side jsx) 66 74 (jsx-depth 1 part-side jsx) 74 75 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 75 83 (jsx-depth 2 part-side jsx) 83 84 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 84 85 (jsx-depth 1 part-side jsx) 85 91 (jsx-depth 1 part-side jsx) 91 92 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "main" jsx-depth 1 part-side jsx) 92 93 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 93 97 (font-lock-face web-mode-html-tag-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 97 98 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "main" jsx-depth 1 part-side jsx) 98 99 (jsx-depth 1 part-side jsx)) . 196) (undo-tree-id27 . 65) (undo-tree-id28 . -25) (undo-tree-id29 . -33) (undo-tree-id30 . -84) (undo-tree-id31 . -84) (undo-tree-id32 . -84) (undo-tree-id33 . -84) (undo-tree-id34 . -84) (undo-tree-id35 . -84) (undo-tree-id36 . -84) (undo-tree-id37 . -84) (undo-tree-id38 . -24) (undo-tree-id39 . -91) (undo-tree-id40 . -24) (undo-tree-id41 . -91)) (26130 28490 838551 47000) 0 nil])
([nil nil ((122 . 123)) nil (26130 30349 622231 476000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 544 . 545) (nil tag-name "div" 511 . 512) (nil tag-name "div" 508 . 511) (nil tag-name "div" 507 . 508) (nil tag-name "div" 506 . 507) (nil tag-name "footer" 500 . 501) (nil tag-name "footer" 494 . 500) (nil tag-name "footer" 493 . 494) (nil tag-name "footer" 492 . 493) (nil tag-name "p" 484 . 485) (nil tag-name "p" 483 . 484) (nil tag-name "p" 482 . 483) (nil tag-name "p" 481 . 482) (nil tag-name "p" 457 . 458) (nil tag-name "p" 456 . 457) (nil tag-name "p" 455 . 456) (nil tag-name "footer" 414 . 415) (nil tag-name "footer" 413 . 414) (nil tag-name "footer" 383 . 413) (nil tag-name "footer" 382 . 383) (nil tag-name "footer" 374 . 382) (nil tag-name "footer" 373 . 374) (nil tag-name "footer" 372 . 373) (nil tag-name "footer" 366 . 372) (nil tag-name "footer" 365 . 366) (nil tag-name "main" 357 . 358) (nil tag-name "main" 353 . 357) (nil tag-name "main" 352 . 353) (nil tag-name "main" 351 . 352) (nil tag-name "main" 295 . 296) (nil tag-name "main" 294 . 295) (nil tag-name "main" 271 . 294) (nil tag-name "main" 269 . 271) (nil tag-name "main" 268 . 269) (nil tag-name "main" 267 . 268) (nil tag-name "main" 259 . 267) (nil tag-name "main" 258 . 259) (nil tag-name "main" 257 . 258) (nil tag-name "main" 253 . 257) (nil tag-name "main" 252 . 253) (nil tag-name "header" 244 . 245) (nil tag-name "header" 238 . 244) (nil tag-name "header" 237 . 238) (nil tag-name "header" 236 . 237) (nil tag-name "h1" 228 . 229) (nil tag-name "h1" 226 . 228) (nil tag-name "h1" 225 . 226) (nil tag-name "h1" 224 . 225) (nil tag-name "h1" 206 . 207) (nil tag-name "h1" 204 . 206) (nil tag-name "h1" 203 . 204) (nil tag-name "header" 162 . 163) (nil tag-name "header" 161 . 162) (nil tag-name "header" 156 . 161) (nil tag-name "header" 155 . 156) (nil tag-name "header" 147 . 155) (nil tag-name "header" 146 . 147) (nil tag-name "header" 145 . 146) (nil tag-name "header" 139 . 145) (nil tag-name "header" 138 . 139) (nil tag-name "div" 130 . 131) (nil tag-name "div" 129 . 130) (nil tag-name "div" 94 . 110) (nil tag-name "div" 110 . 120) (nil tag-name "div" 120 . 129) (nil tag-name "div" 93 . 94) (nil tag-name "div" 85 . 93) (nil tag-name "div" 84 . 85) (nil tag-name "div" 83 . 84) (nil tag-name "div" 80 . 83) (nil tag-name "div" 79 . 80) (1 . 545)) ((#("import React from 'react';

const Layout = ({ children }) => {
  return (
    <div className=\"full-height bg-background relative\">
      <header className=\"z-10\">
        {/* Header content */}
        <h1>Welcome to My App</h1>
      </header>
      <main className=\"lg:px-[15%] relative z-10\">
        {/* Main content */}
        {children}
      </main>
      <footer className=\"absolute bottom-0 w-full z-10\">
        {/* Footer content */}
        <p>Copyright Â© 2024 My App</p>
      </footer>
    </div>
  );
};

export default Layout;
" 0 6 (face web-mode-keyword-face part-side jsx) 6 7 (part-side jsx) 7 12 (face web-mode-type-face part-side jsx) 12 13 (part-side jsx) 13 17 (face web-mode-keyword-face part-side jsx) 17 18 (part-side jsx) 18 19 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 19 24 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 24 25 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 25 27 (part-side jsx) 27 28 (part-side jsx) 28 33 (face web-mode-keyword-face part-side jsx) 33 34 (part-side jsx) 34 40 (face web-mode-function-name-face part-side jsx) 40 46 (part-side jsx) 46 54 (face web-mode-variable-name-face part-side jsx) 54 63 (part-side jsx) 63 65 (part-side jsx) 65 71 (face web-mode-keyword-face part-side jsx) 71 74 (part-side jsx) 74 78 (part-side jsx) 78 79 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 79 82 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 82 83 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 83 84 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 84 92 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 92 93 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 93 109 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 109 119 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 119 128 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 128 129 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 129 130 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 130 137 (jsx-depth 1 part-side jsx) 137 138 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "header" jsx-depth 1 part-side jsx) 138 144 (font-lock-face web-mode-html-tag-face tag-type start tag-name "header" jsx-depth 1 part-side jsx) 144 145 (tag-type start tag-name "header" jsx-depth 1 part-side jsx) 145 146 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 146 154 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 154 155 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 155 160 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 160 161 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 161 162 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "header" jsx-depth 1 part-side jsx) 162 171 (jsx-depth 1 part-side jsx) 171 172 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 172 173 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 173 191 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 191 192 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 192 193 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 193 202 (jsx-depth 1 part-side jsx) 202 203 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 203 205 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 205 206 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 206 223 (jsx-depth 1 part-side jsx) 223 224 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 224 225 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 225 227 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 227 228 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 228 235 (jsx-depth 1 part-side jsx) 235 236 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "header" jsx-depth 1 part-side jsx) 236 237 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 237 243 (font-lock-face web-mode-html-tag-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 243 244 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "header" jsx-depth 1 part-side jsx) 244 251 (jsx-depth 1 part-side jsx) 251 252 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "main" jsx-depth 1 part-side jsx) 252 256 (font-lock-face web-mode-html-tag-face tag-type start tag-name "main" jsx-depth 1 part-side jsx) 256 257 (tag-type start tag-name "main" jsx-depth 1 part-side jsx) 257 258 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 258 266 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 266 267 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 267 268 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 268 270 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 270 293 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 293 294 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 294 295 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "main" jsx-depth 1 part-side jsx) 295 304 (jsx-depth 1 part-side jsx) 304 305 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 305 306 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 306 322 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 322 323 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 323 324 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 324 333 (jsx-depth 1 part-side jsx) 333 334 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 334 342 (jsx-depth 2 part-side jsx) 342 343 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 343 350 (jsx-depth 1 part-side jsx) 350 351 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "main" jsx-depth 1 part-side jsx) 351 352 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 352 356 (font-lock-face web-mode-html-tag-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 356 357 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "main" jsx-depth 1 part-side jsx) 357 364 (jsx-depth 1 part-side jsx) 364 365 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 365 371 (font-lock-face web-mode-html-tag-face tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 371 372 (tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 372 373 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "footer" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 373 381 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "footer" tag-attr t jsx-depth 1 part-side jsx) 381 382 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "footer" tag-attr t jsx-depth 1 part-side jsx) 382 412 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t jsx-depth 1 part-side jsx) 412 413 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 413 414 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 414 423 (jsx-depth 1 part-side jsx) 423 424 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 424 425 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 425 443 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 443 444 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 444 445 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 445 454 (jsx-depth 1 part-side jsx) 454 455 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p" jsx-depth 1 part-side jsx) 455 456 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 1 part-side jsx) 456 457 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 1 part-side jsx) 457 480 (jsx-depth 1 part-side jsx) 480 481 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 1 part-side jsx) 481 482 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 482 483 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 483 484 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 1 part-side jsx) 484 491 (jsx-depth 1 part-side jsx) 491 492 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 492 493 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 493 499 (font-lock-face web-mode-html-tag-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 499 500 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 500 505 (jsx-depth 1 part-side jsx) 505 506 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 506 507 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 507 510 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 510 511 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx) 511 517 (part-side jsx) 517 520 (part-side jsx) 520 521 (part-side jsx) 521 527 (face web-mode-keyword-face part-side jsx) 527 528 (part-side jsx) 528 535 (face web-mode-keyword-face part-side jsx) 535 543 (part-side jsx) 543 544 (part-side jsx rear-nonsticky nil)) . 1) (undo-tree-id753 . -544) (undo-tree-id754 . 99) (undo-tree-id755 . -544) (undo-tree-id756 . -543) (undo-tree-id757 . -544) (undo-tree-id758 . -544) (undo-tree-id759 . -544) (nil tag-name "div" 79 . 80) (nil tag-name "div" 80 . 83) (nil tag-name "div" 83 . 84) (nil tag-name "div" 84 . 85) (nil tag-name "div" 85 . 93) (nil tag-name "div" 93 . 94) (nil tag-name "div" 120 . 129) (nil tag-name "div" 110 . 120) (nil tag-name "div" 94 . 110) (nil tag-name "div" 129 . 130) (nil tag-name "div" 130 . 131) (nil tag-name "header" 138 . 139) (nil tag-name "header" 139 . 145) (nil tag-name "header" 145 . 146) (nil tag-name "header" 146 . 147) (nil tag-name "header" 147 . 155) (nil tag-name "header" 155 . 156) (nil tag-name "header" 156 . 161) (nil tag-name "header" 161 . 162) (nil tag-name "header" 162 . 163) (nil tag-name "h1" 203 . 204) (nil tag-name "h1" 204 . 206) (nil tag-name "h1" 206 . 207) (nil tag-name "h1" 224 . 225) (nil tag-name "h1" 225 . 226) (nil tag-name "h1" 226 . 228) (nil tag-name "h1" 228 . 229) (nil tag-name "header" 236 . 237) (nil tag-name "header" 237 . 238) (nil tag-name "header" 238 . 244) (nil tag-name "header" 244 . 245) (nil tag-name "main" 252 . 253) (nil tag-name "main" 253 . 257) (nil tag-name "main" 257 . 258) (nil tag-name "main" 258 . 259) (nil tag-name "main" 259 . 267) (nil tag-name "main" 267 . 268) (nil tag-name "main" 268 . 269) (nil tag-name "main" 269 . 271) (nil tag-name "main" 271 . 294) (nil tag-name "main" 294 . 295) (nil tag-name "main" 295 . 296) (nil tag-name "main" 351 . 352) (nil tag-name "main" 352 . 353) (nil tag-name "main" 353 . 357) (nil tag-name "main" 357 . 358) (nil tag-name "footer" 365 . 366) (nil tag-name "footer" 366 . 372) (nil tag-name "footer" 372 . 373) (nil tag-name "footer" 373 . 374) (nil tag-name "footer" 374 . 382) (nil tag-name "footer" 382 . 383) (nil tag-name "footer" 383 . 413) (nil tag-name "footer" 413 . 414) (nil tag-name "footer" 414 . 415) (nil tag-name "p" 455 . 456) (nil tag-name "p" 456 . 457) (nil tag-name "p" 457 . 458) (nil tag-name "p" 481 . 482) (nil tag-name "p" 482 . 483) (nil tag-name "p" 483 . 484) (nil tag-name "p" 484 . 485) (nil tag-name "footer" 492 . 493) (nil tag-name "footer" 493 . 494) (nil tag-name "footer" 494 . 500) (nil tag-name "footer" 500 . 501) (nil tag-name "div" 506 . 507) (nil tag-name "div" 507 . 508) (nil tag-name "div" 508 . 511) (nil tag-name "div" 511 . 512) (nil rear-nonsticky t 544 . 545) (t 26130 30326 95672 83000)) (26130 30325 32045 383000) 0 nil])
([nil nil ((nil rear-nonsticky nil 544 . 545) (nil tag-name "div" 511 . 512) (nil tag-name "div" 508 . 511) (nil tag-name "div" 507 . 508) (nil tag-name "div" 506 . 507) (nil tag-name "footer" 500 . 501) (nil tag-name "footer" 494 . 500) (nil tag-name "footer" 493 . 494) (nil tag-name "footer" 492 . 493) (nil tag-name "p" 484 . 485) (nil tag-name "p" 483 . 484) (nil tag-name "p" 482 . 483) (nil tag-name "p" 481 . 482) (nil tag-name "p" 457 . 458) (nil tag-name "p" 456 . 457) (nil tag-name "p" 455 . 456) (nil tag-name "footer" 414 . 415) (nil tag-name "footer" 413 . 414) (nil tag-name "footer" 383 . 413) (nil tag-name "footer" 382 . 383) (nil tag-name "footer" 374 . 382) (nil tag-name "footer" 373 . 374) (nil tag-name "footer" 372 . 373) (nil tag-name "footer" 366 . 372) (nil tag-name "footer" 365 . 366) (nil tag-name "main" 357 . 358) (nil tag-name "main" 353 . 357) (nil tag-name "main" 352 . 353) (nil tag-name "main" 351 . 352) (nil tag-name "main" 295 . 296) (nil tag-name "main" 294 . 295) (nil tag-name "main" 271 . 294) (nil tag-name "main" 269 . 271) (nil tag-name "main" 268 . 269) (nil tag-name "main" 267 . 268) (nil tag-name "main" 259 . 267) (nil tag-name "main" 258 . 259) (nil tag-name "main" 257 . 258) (nil tag-name "main" 253 . 257) (nil tag-name "main" 252 . 253) (nil tag-name "header" 244 . 245) (nil tag-name "header" 238 . 244) (nil tag-name "header" 237 . 238) (nil tag-name "header" 236 . 237) (nil tag-name "h1" 228 . 229) (nil tag-name "h1" 226 . 228) (nil tag-name "h1" 225 . 226) (nil tag-name "h1" 224 . 225) (nil tag-name "h1" 206 . 207) (nil tag-name "h1" 204 . 206) (nil tag-name "h1" 203 . 204) (nil tag-name "header" 162 . 163) (nil tag-name "header" 161 . 162) (nil tag-name "header" 147 . 161) (nil tag-name "header" 146 . 147) (nil tag-name "header" 138 . 146) (nil tag-name "header" 137 . 138) (nil tag-name "header" 136 . 137) (nil tag-name "header" 130 . 136) (nil tag-name "header" 129 . 130) (nil tag-name "div" 121 . 122) (nil tag-name "div" 120 . 121) (nil tag-name "div" 94 . 120) (nil tag-name "div" 93 . 94) (nil tag-name "div" 85 . 93) (nil tag-name "div" 84 . 85) (nil tag-name "div" 83 . 84) (nil tag-name "div" 80 . 83) (nil tag-name "div" 79 . 80) (1 . 545)) ((#("import React from 'react';

const Layout = ({ children }) => {
  return (
    <div className=\"full-height bg-background\">
      <header className=\"relative z-10\">
        {/* Header content */}
        <h1>Welcome to My App</h1>
      </header>
      <main className=\"lg:px-[15%] relative z-10\">
        {/* Main content */}
        {children}
      </main>
      <footer className=\"absolute bottom-0 w-full z-10\">
        {/* Footer content */}
        <p>Copyright Â© 2024 My App</p>
      </footer>
    </div>
  );
};

export default Layout;
" 0 6 (face web-mode-keyword-face part-side jsx) 6 7 (part-side jsx) 7 12 (face web-mode-type-face part-side jsx) 12 13 (part-side jsx) 13 17 (face web-mode-keyword-face part-side jsx) 17 18 (part-side jsx) 18 19 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 19 24 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 24 25 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 25 27 (part-side jsx) 27 28 (part-side jsx) 28 33 (face web-mode-keyword-face part-side jsx) 33 34 (part-side jsx) 34 40 (face web-mode-function-name-face part-side jsx) 40 46 (part-side jsx) 46 54 (face web-mode-variable-name-face part-side jsx) 54 63 (part-side jsx) 63 65 (part-side jsx) 65 71 (face web-mode-keyword-face part-side jsx) 71 74 (part-side jsx) 74 78 (part-side jsx) 78 79 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 79 82 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 82 83 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 83 84 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 84 92 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 92 93 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 93 119 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 119 120 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 120 121 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 121 128 (jsx-depth 1 part-side jsx) 128 129 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "header" jsx-depth 1 part-side jsx) 129 135 (font-lock-face web-mode-html-tag-face tag-type start tag-name "header" jsx-depth 1 part-side jsx) 135 136 (tag-type start tag-name "header" jsx-depth 1 part-side jsx) 136 137 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 137 145 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 145 146 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 146 160 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 160 161 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 161 162 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "header" jsx-depth 1 part-side jsx) 162 171 (jsx-depth 1 part-side jsx) 171 172 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 172 173 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 173 191 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 191 192 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 192 193 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 193 202 (jsx-depth 1 part-side jsx) 202 203 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 203 205 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 205 206 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 206 223 (jsx-depth 1 part-side jsx) 223 224 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 224 225 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 225 227 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 227 228 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 228 235 (jsx-depth 1 part-side jsx) 235 236 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "header" jsx-depth 1 part-side jsx) 236 237 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 237 243 (font-lock-face web-mode-html-tag-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 243 244 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "header" jsx-depth 1 part-side jsx) 244 251 (jsx-depth 1 part-side jsx) 251 252 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "main" jsx-depth 1 part-side jsx) 252 256 (font-lock-face web-mode-html-tag-face tag-type start tag-name "main" jsx-depth 1 part-side jsx) 256 257 (tag-type start tag-name "main" jsx-depth 1 part-side jsx) 257 258 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 258 266 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 266 267 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 267 268 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 268 270 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 270 293 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 293 294 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 294 295 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "main" jsx-depth 1 part-side jsx) 295 304 (jsx-depth 1 part-side jsx) 304 305 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 305 306 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 306 322 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 322 323 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 323 324 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 324 333 (jsx-depth 1 part-side jsx) 333 334 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 334 342 (jsx-depth 2 part-side jsx) 342 343 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 343 350 (jsx-depth 1 part-side jsx) 350 351 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "main" jsx-depth 1 part-side jsx) 351 352 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 352 356 (font-lock-face web-mode-html-tag-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 356 357 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "main" jsx-depth 1 part-side jsx) 357 364 (jsx-depth 1 part-side jsx) 364 365 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 365 371 (font-lock-face web-mode-html-tag-face tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 371 372 (tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 372 373 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "footer" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 373 381 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "footer" tag-attr t jsx-depth 1 part-side jsx) 381 382 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "footer" tag-attr t jsx-depth 1 part-side jsx) 382 412 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t jsx-depth 1 part-side jsx) 412 413 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 413 414 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 414 423 (jsx-depth 1 part-side jsx) 423 424 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 424 425 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 425 443 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 443 444 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 444 445 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 445 454 (jsx-depth 1 part-side jsx) 454 455 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p" jsx-depth 1 part-side jsx) 455 456 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 1 part-side jsx) 456 457 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 1 part-side jsx) 457 480 (jsx-depth 1 part-side jsx) 480 481 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 1 part-side jsx) 481 482 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 482 483 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 483 484 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 1 part-side jsx) 484 491 (jsx-depth 1 part-side jsx) 491 492 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 492 493 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 493 499 (font-lock-face web-mode-html-tag-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 499 500 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 500 505 (jsx-depth 1 part-side jsx) 505 506 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 506 507 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 507 510 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 510 511 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx) 511 517 (part-side jsx) 517 520 (part-side jsx) 520 521 (part-side jsx) 521 527 (face web-mode-keyword-face part-side jsx) 527 528 (part-side jsx) 528 535 (face web-mode-keyword-face part-side jsx) 535 543 (part-side jsx) 543 544 (part-side jsx rear-nonsticky nil)) . 1) (undo-tree-id111 . -520) (undo-tree-id112 . -520) (undo-tree-id113 . 23) (undo-tree-id114 . -520) (undo-tree-id115 . -520) (undo-tree-id116 . -544) (undo-tree-id117 . -544) (undo-tree-id118 . -544) (undo-tree-id119 . -544) (undo-tree-id120 . -544) (undo-tree-id121 . -544) (undo-tree-id122 . -511) (undo-tree-id123 . -511) (undo-tree-id124 . -511) (undo-tree-id125 . -511) (undo-tree-id126 . -511) (undo-tree-id127 . -511) (undo-tree-id128 . -511) (undo-tree-id129 . -511) (undo-tree-id130 . -511) (undo-tree-id131 . -511) (undo-tree-id132 . -510) (undo-tree-id133 . -510) (undo-tree-id134 . -520) (undo-tree-id135 . -520) (undo-tree-id136 . -520) (undo-tree-id137 . -520) (undo-tree-id138 . -520) (undo-tree-id139 . -520) (undo-tree-id140 . -520) (undo-tree-id141 . -520) (nil tag-name "div" 79 . 80) (nil tag-name "div" 80 . 83) (nil tag-name "div" 83 . 84) (nil tag-name "div" 84 . 85) (nil tag-name "div" 85 . 93) (nil tag-name "div" 93 . 94) (nil tag-name "div" 94 . 120) (nil tag-name "div" 120 . 121) (nil tag-name "div" 121 . 122) (nil tag-name "header" 129 . 130) (nil tag-name "header" 130 . 136) (nil tag-name "header" 136 . 137) (nil tag-name "header" 137 . 138) (nil tag-name "header" 138 . 146) (nil tag-name "header" 146 . 147) (nil tag-name "header" 147 . 161) (nil tag-name "header" 161 . 162) (nil tag-name "header" 162 . 163) (nil tag-name "h1" 203 . 204) (nil tag-name "h1" 204 . 206) (nil tag-name "h1" 206 . 207) (nil tag-name "h1" 224 . 225) (nil tag-name "h1" 225 . 226) (nil tag-name "h1" 226 . 228) (nil tag-name "h1" 228 . 229) (nil tag-name "header" 236 . 237) (nil tag-name "header" 237 . 238) (nil tag-name "header" 238 . 244) (nil tag-name "header" 244 . 245) (nil tag-name "main" 252 . 253) (nil tag-name "main" 253 . 257) (nil tag-name "main" 257 . 258) (nil tag-name "main" 258 . 259) (nil tag-name "main" 259 . 267) (nil tag-name "main" 267 . 268) (nil tag-name "main" 268 . 269) (nil tag-name "main" 269 . 271) (nil tag-name "main" 271 . 294) (nil tag-name "main" 294 . 295) (nil tag-name "main" 295 . 296) (nil tag-name "main" 351 . 352) (nil tag-name "main" 352 . 353) (nil tag-name "main" 353 . 357) (nil tag-name "main" 357 . 358) (nil tag-name "footer" 365 . 366) (nil tag-name "footer" 366 . 372) (nil tag-name "footer" 372 . 373) (nil tag-name "footer" 373 . 374) (nil tag-name "footer" 374 . 382) (nil tag-name "footer" 382 . 383) (nil tag-name "footer" 383 . 413) (nil tag-name "footer" 413 . 414) (nil tag-name "footer" 414 . 415) (nil tag-name "p" 455 . 456) (nil tag-name "p" 456 . 457) (nil tag-name "p" 457 . 458) (nil tag-name "p" 481 . 482) (nil tag-name "p" 482 . 483) (nil tag-name "p" 483 . 484) (nil tag-name "p" 484 . 485) (nil tag-name "footer" 492 . 493) (nil tag-name "footer" 493 . 494) (nil tag-name "footer" 494 . 500) (nil tag-name "footer" 500 . 501) (nil tag-name "div" 506 . 507) (nil tag-name "div" 507 . 508) (nil tag-name "div" 508 . 511) (nil tag-name "div" 511 . 512) (nil rear-nonsticky t 544 . 545) (t 26130 28674 191601 858000)) (26130 28673 184808 460000) 0 nil])
([nil nil ((#("      </main>
" 0 6 (jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "main" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 8 12 (font-lock-face web-mode-html-tag-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 12 13 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "main" jsx-depth 1 part-side jsx) 13 14 (jsx-depth 1 part-side jsx)) . 281) (undo-tree-id9 . -14) (undo-tree-id10 . -13) (undo-tree-id12 . -6) (undo-tree-id13 . -6) (undo-tree-id15 . -14) 287 (t 26130 28403 364673 297000)) ((281 . 295)) (26130 28490 223831 747000) 0 nil])
([nil nil ((#("|" 0 1 (part-side jsx)) . -122) (undo-tree-id770 . -1) (undo-tree-id771 . -1) 123) nil (26130 30349 622230 776000) 0 nil])
([nil nil ((#("background" 0 10 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 110) (undo-tree-id176 . -9) (undo-tree-id178 . -10) (t 26130 28729 14961 529000)) ((110 . 120)) (26130 30318 165918 456000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 385 . 386) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -393) (379 . 394) 372) ((#("
      </main>
" 0 1 (jsx-depth 1 part-side jsx) 1 6 (jsx-depth 1 part-side jsx) 6 7 (jsx-depth 1 part-side jsx rear-nonsticky nil) 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "main" jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 9 13 (font-lock-face web-mode-html-tag-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 13 14 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "main" jsx-depth 1 part-side jsx) 14 15 (jsx-depth 1 part-side jsx)) . 379) (undo-tree-id25 . -9) (undo-tree-id26 . -9) (393 . 394) (nil rear-nonsticky t 385 . 386)) (26130 28490 19206 921000) 0 nil])
([nil nil ((122 . 123)) nil (26130 33246 750821 108000) 0 nil])
([nil nil ((110 . 118)) ((#("gray-200" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 6 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 110) (t 26130 30307 208997 959000)) (26130 30306 199088 170000) 0 nil])
([nil nil ((388 . 395) (#("main" 0 4 (font-lock-face web-mode-html-tag-face tag-type end tag-name "main" jsx-depth 1 part-side jsx)) . 388) (undo-tree-id6 . -3) (undo-tree-id8 . -4)) ((388 . 392) (#("wrapper" 0 7 (font-lock-face web-mode-html-tag-face tag-type end tag-name "wrapper" jsx-depth 1 part-side jsx)) . 388)) (26130 28489 827914 110000) 0 nil])
([nil nil ((nil rear-nonsticky nil 548 . 549) (nil part-side jsx 533 . 549) (nil part-side jsx 532 . 533) (nil part-token string 532 . 533) (nil syntax-table (15) 532 . 533) (nil font-lock-face web-mode-javascript-string-face 532 . 533) (nil part-side jsx 520 . 532) (nil part-token string 520 . 532) (nil font-lock-face web-mode-javascript-string-face 520 . 532) (nil part-side jsx 519 . 520) (nil part-token string 519 . 520) (nil syntax-table (15) 519 . 520) (nil font-lock-face web-mode-javascript-string-face 519 . 520) (nil part-side jsx 480 . 519) (nil part-side jsx 479 . 480) (nil part-token string 479 . 480) (nil syntax-table (15) 479 . 480) (nil font-lock-face web-mode-javascript-string-face 479 . 480) (nil part-side jsx 460 . 479) (nil part-token string 460 . 479) (nil font-lock-face web-mode-javascript-string-face 460 . 479) (nil part-side jsx 459 . 460) (nil part-token string 459 . 460) (nil syntax-table (15) 459 . 460) (nil font-lock-face web-mode-javascript-string-face 459 . 460) (nil part-side jsx 439 . 459) (439 . 549) (t 26130 33247 761905 548000)) nil (26130 33855 74838 879000) 0 nil] [nil nil ((122 . 123) (#("\"" 0 1 (tag-type start tag-name "div" jsx-depth 1 part-side jsx)) . 122) (114 . 122) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -114) (undo-tree-id107 . -1) (#("y" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -115) (undo-tree-id108 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -116) (undo-tree-id109 . -1) 117 (114 . 117) (109 . 114) (103 . 110) (#("n" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr-end 0 tag-attr t jsx-depth 1 part-side jsx)) . -103) (undo-tree-id110 . -1) 104 (97 . 104) (t 26130 33217 825184 35000)) ((#(" classn" 0 1 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr-end 0 tag-attr t jsx-depth 1 part-side jsx)) . 97) (undo-tree-id111 . -6) (undo-tree-id112 . -7) (undo-tree-id113 . -6) (undo-tree-id114 . -6) (undo-tree-id115 . -6) (103 . 104) (#("Name=\"\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx)) . 103) (undo-tree-id116 . -6) (undo-tree-id117 . -6) (undo-tree-id118 . -6) (undo-tree-id119 . -6) (undo-tree-id120 . -6) (#("bg-gr" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 109) (undo-tree-id121 . -5) (undo-tree-id122 . -5) (undo-tree-id123 . -5) (undo-tree-id124 . -5) (undo-tree-id125 . -5) (#("ey-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 114) (undo-tree-id126 . -3) (114 . 117) (#("een-600\"" 0 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx)) . 114) (undo-tree-id127 . -8) (undo-tree-id128 . -8) (undo-tree-id129 . -8) (undo-tree-id130 . -8) (undo-tree-id131 . -8) (122 . 123) (#(" " 0 1 (tag-type start tag-name "div" jsx-depth 1 part-side jsx)) . 122) (t 26130 33231 721876 166000)) (26130 33231 716162 919000) 0 nil] [nil nil ((230 . 238) (t 26130 33102 191638 959000)) ((#(" bg-grey" 0 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 230) (undo-tree-id88 . -8) (undo-tree-id89 . -8) (undo-tree-id90 . -8) (undo-tree-id91 . -8) (undo-tree-id92 . -8) (undo-tree-id93 . -8) (undo-tree-id94 . -8) (undo-tree-id95 . -8) (undo-tree-id96 . -8) (undo-tree-id97 . -8) (undo-tree-id98 . -8) (undo-tree-id99 . -8) (undo-tree-id100 . -8) (undo-tree-id101 . -8) (undo-tree-id102 . -8) (undo-tree-id103 . -8) (undo-tree-id104 . -8) (undo-tree-id105 . -8) (undo-tree-id106 . -8)) (26130 33216 520913 188000) 0 nil] [nil nil ((89 . 95) (89 . 90) 97 (t 26130 30349 622348 50000)) ((#("
" 0 1 (part-side jsx)) . 89) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("      " 0 6 (part-side jsx)) . 89) (undo-tree-id66 . -5) (undo-tree-id67 . -5)) (26130 33100 742733 117000) 0 nil])
([nil nil ((#("import React from 'react';

const Layout = ({ children }) => {
  return (
    <div className=\"full-height bg-gray-200 relative\">
      <header className=\"z-10\">
        {/* Header content */}
        <h1>Welcome to My App</h1>
      </header>
      <main className=\"lg:px-[15%] relative z-10\">
        {/* Main content */}
        {children}
      </main>
      <footer className=\"absolute bottom-0 w-full z-10\">
        {/* Footer content */}
        <p>Copyright Â© 2024 My App</p>
      </footer>
    </div>
  );
};

export default Layout;
" 0 6 (face web-mode-keyword-face part-side jsx) 6 7 (part-side jsx) 7 12 (face web-mode-type-face part-side jsx) 12 13 (part-side jsx) 13 17 (face web-mode-keyword-face part-side jsx) 17 18 (part-side jsx) 18 19 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 19 24 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 24 25 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 25 27 (part-side jsx) 27 28 (part-side jsx) 28 33 (face web-mode-keyword-face part-side jsx) 33 34 (part-side jsx) 34 40 (face web-mode-function-name-face part-side jsx) 40 46 (part-side jsx) 46 54 (face web-mode-variable-name-face part-side jsx) 54 63 (part-side jsx) 63 65 (part-side jsx) 65 71 (face web-mode-keyword-face part-side jsx) 71 74 (part-side jsx) 74 78 (part-side jsx) 78 79 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 79 82 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 82 83 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 83 84 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 84 92 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 92 93 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 93 114 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 114 115 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 115 126 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 126 127 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 127 128 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 128 135 (jsx-depth 1 part-side jsx) 135 136 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "header" jsx-depth 1 part-side jsx) 136 142 (font-lock-face web-mode-html-tag-face tag-type start tag-name "header" jsx-depth 1 part-side jsx) 142 143 (tag-type start tag-name "header" jsx-depth 1 part-side jsx) 143 144 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 144 152 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 152 153 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 153 158 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 158 159 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 159 160 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "header" jsx-depth 1 part-side jsx) 160 169 (jsx-depth 1 part-side jsx) 169 170 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 170 171 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 171 189 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 189 190 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 190 191 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 191 200 (jsx-depth 1 part-side jsx) 200 201 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 201 203 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 203 204 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 204 221 (jsx-depth 1 part-side jsx) 221 222 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 222 223 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 223 225 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 225 226 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 226 233 (jsx-depth 1 part-side jsx) 233 234 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "header" jsx-depth 1 part-side jsx) 234 235 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 235 241 (font-lock-face web-mode-html-tag-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 241 242 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "header" jsx-depth 1 part-side jsx) 242 249 (jsx-depth 1 part-side jsx) 249 250 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "main" jsx-depth 1 part-side jsx) 250 254 (font-lock-face web-mode-html-tag-face tag-type start tag-name "main" jsx-depth 1 part-side jsx) 254 255 (tag-type start tag-name "main" jsx-depth 1 part-side jsx) 255 256 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 256 264 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 264 265 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 265 266 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 266 268 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 268 291 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 291 292 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 292 293 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "main" jsx-depth 1 part-side jsx) 293 302 (jsx-depth 1 part-side jsx) 302 303 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 303 304 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 304 320 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 320 321 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 321 322 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 322 331 (jsx-depth 1 part-side jsx) 331 332 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 332 340 (jsx-depth 2 part-side jsx) 340 341 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 341 348 (jsx-depth 1 part-side jsx) 348 349 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "main" jsx-depth 1 part-side jsx) 349 350 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 350 354 (font-lock-face web-mode-html-tag-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 354 355 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "main" jsx-depth 1 part-side jsx) 355 362 (jsx-depth 1 part-side jsx) 362 363 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 363 369 (font-lock-face web-mode-html-tag-face tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 369 370 (tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 370 371 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "footer" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 371 379 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "footer" tag-attr t jsx-depth 1 part-side jsx) 379 380 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "footer" tag-attr t jsx-depth 1 part-side jsx) 380 410 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t jsx-depth 1 part-side jsx) 410 411 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 411 412 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 412 421 (jsx-depth 1 part-side jsx) 421 422 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 422 423 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 423 441 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 441 442 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 442 443 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 443 452 (jsx-depth 1 part-side jsx) 452 453 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p" jsx-depth 1 part-side jsx) 453 454 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 1 part-side jsx) 454 455 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 1 part-side jsx) 455 478 (jsx-depth 1 part-side jsx) 478 479 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 1 part-side jsx) 479 480 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 480 481 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 481 482 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 1 part-side jsx) 482 489 (jsx-depth 1 part-side jsx) 489 490 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 490 491 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 491 497 (font-lock-face web-mode-html-tag-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 497 498 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 498 503 (jsx-depth 1 part-side jsx) 503 504 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 504 505 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 505 508 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 508 509 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx) 509 515 (part-side jsx) 515 518 (part-side jsx) 518 519 (part-side jsx) 519 525 (face web-mode-keyword-face part-side jsx) 525 526 (part-side jsx) 526 533 (face web-mode-keyword-face part-side jsx) 533 541 (part-side jsx) 541 542 (part-side jsx rear-nonsticky t)) . 1) (undo-tree-id225 . -542) (undo-tree-id226 . 99) (undo-tree-id227 . -542) (undo-tree-id228 . -541) (undo-tree-id230 . -443) (undo-tree-id231 . -114) (undo-tree-id233 . -542) (t 26130 29130 175154 238000)) ((1 . 543)) (26130 30305 574604 589000) 0 nil] [nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -115) (undo-tree-id179 . -1) (undo-tree-id180 . -1) 116 (t 26130 28821 48339 70000)) ((115 . 116) (t 26130 29129 128487 68000)) (26130 29128 122457 297000) 0 nil])
([nil nil ((204 . 210) (203 . 204) (#("main" 0 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "main" jsx-depth 1 part-side jsx)) . 203) (undo-tree-id3 . -3) (undo-tree-id5 . -4)) ((203 . 207) (#("w" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "w" jsx-depth 1 part-side jsx)) . 203) (#("rapper" 0 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "wrapper" jsx-depth 1 part-side jsx)) . 204)) (26130 28489 682490 975000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14 . 15) (#("
" 0 1 (part-side jsx)) . -64) (14 . 65) (t 26130 33855 89607 789000)) nil (26130 33862 203762 717000) 0 nil])
nil
([nil nil ((238 . 239) (t 26130 33158 471742 19000)) ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 238) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1)) (26130 33216 264869 525000) 0 nil])
([nil nil ((95 . 98)) ((#("div" 0 3 (part-side jsx)) . 95) (undo-tree-id62 . -2) (undo-tree-id63 . -2)) (26130 33100 407194 912000) 0 nil])
([nil nil ((nil rear-nonsticky nil 635 . 636) (nil part-side jsx 627 . 636) (nil part-side jsx 620 . 627) (nil face web-mode-keyword-face 620 . 627) (nil part-side jsx 619 . 620) (nil part-side jsx 613 . 619) (nil face web-mode-keyword-face 613 . 619) (nil part-side jsx 603 . 613) (nil part-side jsx 602 . 603) (nil jsx-end 1 602 . 603) (nil jsx-depth 1 602 . 603) (nil tag-name "div" 602 . 603) (nil tag-type end 602 . 603) (nil tag-end t 602 . 603) (nil font-lock-face web-mode-html-tag-bracket-face 602 . 603) (nil part-side jsx 599 . 602) (nil jsx-depth 1 599 . 602) (nil tag-name "div" 599 . 602) (nil tag-type end 599 . 602) (nil font-lock-face web-mode-html-tag-face 599 . 602) (nil part-side jsx 598 . 599) (nil jsx-depth 1 598 . 599) (nil tag-name "div" 598 . 599) (nil tag-type end 598 . 599) (nil font-lock-face web-mode-html-tag-bracket-face 598 . 599) (nil part-side jsx 597 . 598) (nil jsx-depth 1 597 . 598) (nil tag-name "div" 597 . 598) (nil tag-type end 597 . 598) (nil tag-beg 20 597 . 598) (nil font-lock-face web-mode-html-tag-bracket-face 597 . 598) (nil part-side jsx 592 . 597) (nil jsx-depth 1 592 . 597) (nil part-side jsx 591 . 592) (nil jsx-depth 1 591 . 592) (nil tag-name "footer" 591 . 592) (nil tag-type end 591 . 592) (nil tag-end t 591 . 592) (nil font-lock-face web-mode-html-tag-bracket-face 591 . 592) (nil part-side jsx 585 . 591) (nil jsx-depth 1 585 . 591) (nil tag-name "footer" 585 . 591) (nil tag-type end 585 . 591) (nil font-lock-face web-mode-html-tag-face 585 . 591) (nil part-side jsx 584 . 585) (nil jsx-depth 1 584 . 585) (nil tag-name "footer" 584 . 585) (nil tag-type end 584 . 585) (nil font-lock-face web-mode-html-tag-bracket-face 584 . 585) (nil part-side jsx 583 . 584) (nil jsx-depth 1 583 . 584) (nil tag-name "footer" 583 . 584) (nil tag-type end 583 . 584) (nil tag-beg 20 583 . 584) (nil font-lock-face web-mode-html-tag-bracket-face 583 . 584) (nil part-side jsx 576 . 583) (nil jsx-depth 1 576 . 583) (nil part-side jsx 575 . 576) (nil jsx-depth 1 575 . 576) (nil tag-name "p" 575 . 576) (nil tag-type end 575 . 576) (nil tag-end t 575 . 576) (nil font-lock-face web-mode-html-tag-bracket-face 575 . 576) (nil part-side jsx 574 . 575) (nil jsx-depth 1 574 . 575) (nil tag-name "p" 574 . 575) (nil tag-type end 574 . 575) (nil font-lock-face web-mode-html-tag-face 574 . 575) (nil part-side jsx 573 . 574) (nil jsx-depth 1 573 . 574) (nil tag-name "p" 573 . 574) (nil tag-type end 573 . 574) (nil font-lock-face web-mode-html-tag-bracket-face 573 . 574) (nil part-side jsx 572 . 573) (nil jsx-depth 1 572 . 573) (nil tag-name "p" 572 . 573) (nil tag-type end 572 . 573) (nil tag-beg 20 572 . 573) (nil font-lock-face web-mode-html-tag-bracket-face 572 . 573) (nil part-side jsx 549 . 572) (nil jsx-depth 1 549 . 572) (nil part-side jsx 548 . 549) (nil jsx-depth 1 548 . 549) (nil tag-name "p" 548 . 549) (nil tag-type start 548 . 549) (nil tag-end t 548 . 549) (nil font-lock-face web-mode-html-tag-bracket-face 548 . 549) (nil part-side jsx 547 . 548) (nil jsx-depth 1 547 . 548) (nil tag-name "p" 547 . 548) (nil tag-type start 547 . 548) (nil font-lock-face web-mode-html-tag-face 547 . 548) (nil part-side jsx 546 . 547) (nil jsx-depth 1 546 . 547) (nil tag-name "p" 546 . 547) (nil tag-type start 546 . 547) (nil tag-beg 16 546 . 547) (nil font-lock-face web-mode-html-tag-bracket-face 546 . 547) (nil part-side jsx 537 . 546) (nil jsx-depth 1 537 . 546) (nil part-side jsx 536 . 537) (nil jsx-depth 2 536 . 537) (nil jsx-end 2 536 . 537) (nil font-lock-face web-mode-block-delimiter-face 536 . 537) (nil part-side jsx 535 . 536) (nil jsx-depth 2 535 . 536) (nil part-token comment 535 . 536) (nil syntax-table (12) 535 . 536) (nil font-lock-face web-mode-javascript-comment-face 535 . 536) (nil part-side jsx 517 . 535) (nil jsx-depth 2 517 . 535) (nil part-token comment 517 . 535) (nil font-lock-face web-mode-javascript-comment-face 517 . 535) (nil part-side jsx 516 . 517) (nil jsx-depth 2 516 . 517) (nil part-token comment 516 . 517) (nil syntax-table (11) 516 . 517) (nil font-lock-face web-mode-javascript-comment-face 516 . 517) (nil part-side jsx 515 . 516) (nil jsx-depth 2 515 . 516) (nil jsx-beg 2 515 . 516) (nil font-lock-face web-mode-block-delimiter-face 515 . 516) (nil part-side jsx 506 . 515) (nil jsx-depth 1 506 . 515) (nil part-side jsx 505 . 506) (nil jsx-depth 1 505 . 506) (nil tag-name "footer" 505 . 506) (nil tag-type start 505 . 506) (nil tag-end t 505 . 506) (nil font-lock-face web-mode-html-tag-bracket-face 505 . 506) (nil part-side jsx 504 . 505) (nil jsx-depth 1 504 . 505) (nil tag-attr t 504 . 505) (nil tag-attr-end 9 504 . 505) (nil tag-name "footer" 504 . 505) (nil tag-type start 504 . 505) (nil font-lock-face web-mode-html-attr-value-face 504 . 505) (nil part-side jsx 474 . 504) (nil jsx-depth 1 474 . 504) (nil tag-attr t 474 . 504) (nil tag-name "footer" 474 . 504) (nil tag-type start 474 . 504) (nil font-lock-face web-mode-html-attr-value-face 474 . 504) (nil part-side jsx 473 . 474) (nil jsx-depth 1 473 . 474) (nil tag-attr t 473 . 474) (nil tag-name "footer" 473 . 474) (nil tag-type start 473 . 474) (nil font-lock-face web-mode-html-attr-equal-face 473 . 474) (nil part-side jsx 465 . 473) (nil jsx-depth 1 465 . 473) (nil tag-attr t 465 . 473) (nil tag-name "footer" 465 . 473) (nil tag-type start 465 . 473) (nil font-lock-face web-mode-html-attr-name-face 465 . 473) (nil part-side jsx 464 . 465) (nil jsx-depth 1 464 . 465) (nil tag-attr-beg 0 464 . 465) (nil tag-attr t 464 . 465) (nil tag-name "footer" 464 . 465) (nil tag-type start 464 . 465) (nil font-lock-face web-mode-html-attr-name-face 464 . 465) (nil part-side jsx 463 . 464) (nil jsx-depth 1 463 . 464) (nil tag-name "footer" 463 . 464) (nil tag-type start 463 . 464) (nil part-side jsx 457 . 463) (nil jsx-depth 1 457 . 463) (nil tag-name "footer" 457 . 463) (nil tag-type start 457 . 463) (nil font-lock-face web-mode-html-tag-face 457 . 463) (nil part-side jsx 456 . 457) (nil jsx-depth 1 456 . 457) (nil tag-name "footer" 456 . 457) (nil tag-type start 456 . 457) (nil tag-beg 17 456 . 457) (nil font-lock-face web-mode-html-tag-bracket-face 456 . 457) (nil part-side jsx 449 . 456) (nil jsx-depth 1 449 . 456) (nil part-side jsx 448 . 449) (nil jsx-depth 1 448 . 449) (nil tag-name "main" 448 . 449) (nil tag-type end 448 . 449) (nil tag-end t 448 . 449) (nil font-lock-face web-mode-html-tag-bracket-face 448 . 449) (nil part-side jsx 444 . 448) (nil jsx-depth 1 444 . 448) (nil tag-name "main" 444 . 448) (nil tag-type end 444 . 448) (nil font-lock-face web-mode-html-tag-face 444 . 448) (nil part-side jsx 443 . 444) (nil jsx-depth 1 443 . 444) (nil tag-name "main" 443 . 444) (nil tag-type end 443 . 444) (nil font-lock-face web-mode-html-tag-bracket-face 443 . 444) (nil part-side jsx 442 . 443) (nil jsx-depth 1 442 . 443) (nil tag-name "main" 442 . 443) (nil tag-type end 442 . 443) (nil tag-beg 20 442 . 443) (nil font-lock-face web-mode-html-tag-bracket-face 442 . 443) (nil part-side jsx 435 . 442) (nil jsx-depth 1 435 . 442) (nil part-side jsx 434 . 435) (nil jsx-depth 2 434 . 435) (nil jsx-end 2 434 . 435) (nil font-lock-face web-mode-block-delimiter-face 434 . 435) (nil part-side jsx 426 . 434) (nil jsx-depth 2 426 . 434) (nil part-side jsx 425 . 426) (nil jsx-depth 2 425 . 426) (nil jsx-beg 2 425 . 426) (nil font-lock-face web-mode-block-delimiter-face 425 . 426) (nil part-side jsx 416 . 425) (nil jsx-depth 1 416 . 425) (nil part-side jsx 415 . 416) (nil jsx-depth 2 415 . 416) (nil jsx-end 2 415 . 416) (nil font-lock-face web-mode-block-delimiter-face 415 . 416) (nil part-side jsx 414 . 415) (nil jsx-depth 2 414 . 415) (nil part-token comment 414 . 415) (nil syntax-table (12) 414 . 415) (nil font-lock-face web-mode-javascript-comment-face 414 . 415) (nil part-side jsx 398 . 414) (nil jsx-depth 2 398 . 414) (nil part-token comment 398 . 414) (nil font-lock-face web-mode-javascript-comment-face 398 . 414) (nil part-side jsx 397 . 398) (nil jsx-depth 2 397 . 398) (nil part-token comment 397 . 398) (nil syntax-table (11) 397 . 398) (nil font-lock-face web-mode-javascript-comment-face 397 . 398) (nil part-side jsx 396 . 397) (nil jsx-depth 2 396 . 397) (nil jsx-beg 2 396 . 397) (nil font-lock-face web-mode-block-delimiter-face 396 . 397) (nil part-side jsx 387 . 396) (nil jsx-depth 1 387 . 396) (nil part-side jsx 386 . 387) (nil jsx-depth 1 386 . 387) (nil tag-name "main" 386 . 387) (nil tag-type start 386 . 387) (nil tag-end t 386 . 387) (nil font-lock-face web-mode-html-tag-bracket-face 386 . 387) (nil part-side jsx 385 . 386) (nil jsx-depth 1 385 . 386) (nil tag-attr t 385 . 386) (nil tag-attr-end 9 385 . 386) (nil tag-name "main" 385 . 386) (nil tag-type start 385 . 386) (nil font-lock-face web-mode-html-attr-value-face 385 . 386) (nil part-side jsx 362 . 385) (nil jsx-depth 1 362 . 385) (nil tag-attr t 362 . 385) (nil tag-name "main" 362 . 385) (nil tag-type start 362 . 385) (nil font-lock-face web-mode-html-attr-value-face 362 . 385) (nil part-side jsx 360 . 362) (nil jsx-depth 1 360 . 362) (nil tag-attr t 360 . 362) (nil tag-name "main" 360 . 362) (nil tag-type start 360 . 362) (nil font-lock-face web-mode-html-attr-value-face 360 . 362) (nil part-side jsx 359 . 360) (nil jsx-depth 1 359 . 360) (nil tag-attr t 359 . 360) (nil tag-name "main" 359 . 360) (nil tag-type start 359 . 360) (nil font-lock-face web-mode-html-attr-value-face 359 . 360) (nil part-side jsx 358 . 359) (nil jsx-depth 1 358 . 359) (nil tag-attr t 358 . 359) (nil tag-name "main" 358 . 359) (nil tag-type start 358 . 359) (nil font-lock-face web-mode-html-attr-equal-face 358 . 359) (nil part-side jsx 350 . 358) (nil jsx-depth 1 350 . 358) (nil tag-attr t 350 . 358) (nil tag-name "main" 350 . 358) (nil tag-type start 350 . 358) (nil font-lock-face web-mode-html-attr-name-face 350 . 358) (nil part-side jsx 349 . 350) (nil jsx-depth 1 349 . 350) (nil tag-attr-beg 0 349 . 350) (nil tag-attr t 349 . 350) (nil tag-name "main" 349 . 350) (nil tag-type start 349 . 350) (nil font-lock-face web-mode-html-attr-name-face 349 . 350) (nil part-side jsx 348 . 349) (nil jsx-depth 1 348 . 349) (nil tag-name "main" 348 . 349) (nil tag-type start 348 . 349) (nil part-side jsx 344 . 348) (nil jsx-depth 1 344 . 348) (nil tag-name "main" 344 . 348) (nil tag-type start 344 . 348) (nil font-lock-face web-mode-html-tag-face 344 . 348) (nil part-side jsx 343 . 344) (nil jsx-depth 1 343 . 344) (nil tag-name "main" 343 . 344) (nil tag-type start 343 . 344) (nil tag-beg 17 343 . 344) (nil font-lock-face web-mode-html-tag-bracket-face 343 . 344) (nil part-side jsx 336 . 343) (nil jsx-depth 1 336 . 343) (nil part-side jsx 335 . 336) (nil jsx-depth 1 335 . 336) (nil tag-name "header" 335 . 336) (nil tag-type end 335 . 336) (nil tag-end t 335 . 336) (nil font-lock-face web-mode-html-tag-bracket-face 335 . 336) (nil part-side jsx 329 . 335) (nil jsx-depth 1 329 . 335) (nil tag-name "header" 329 . 335) (nil tag-type end 329 . 335) (nil font-lock-face web-mode-html-tag-face 329 . 335) (nil part-side jsx 328 . 329) (nil jsx-depth 1 328 . 329) (nil tag-name "header" 328 . 329) (nil tag-type end 328 . 329) (nil font-lock-face web-mode-html-tag-bracket-face 328 . 329) (nil part-side jsx 327 . 328) (nil jsx-depth 1 327 . 328) (nil tag-name "header" 327 . 328) (nil tag-type end 327 . 328) (nil tag-beg 20 327 . 328) (nil font-lock-face web-mode-html-tag-bracket-face 327 . 328) (nil part-side jsx 320 . 327) (nil jsx-depth 1 320 . 327) (nil part-side jsx 319 . 320) (nil jsx-depth 1 319 . 320) (nil tag-name "h1" 319 . 320) (nil tag-type end 319 . 320) (nil tag-end t 319 . 320) (nil font-lock-face web-mode-html-tag-bracket-face 319 . 320) (nil part-side jsx 317 . 319) (nil jsx-depth 1 317 . 319) (nil tag-name "h1" 317 . 319) (nil tag-type end 317 . 319) (nil font-lock-face web-mode-html-tag-face 317 . 319) (nil part-side jsx 316 . 317) (nil jsx-depth 1 316 . 317) (nil tag-name "h1" 316 . 317) (nil tag-type end 316 . 317) (nil font-lock-face web-mode-html-tag-bracket-face 316 . 317) (nil part-side jsx 315 . 316) (nil jsx-depth 1 315 . 316) (nil tag-name "h1" 315 . 316) (nil tag-type end 315 . 316) (nil tag-beg 20 315 . 316) (nil font-lock-face web-mode-html-tag-bracket-face 315 . 316) (nil part-side jsx 298 . 315) (nil jsx-depth 1 298 . 315) (nil part-side jsx 297 . 298) (nil jsx-depth 1 297 . 298) (nil tag-name "h1" 297 . 298) (nil tag-type start 297 . 298) (nil tag-end t 297 . 298) (nil font-lock-face web-mode-html-tag-bracket-face 297 . 298) (nil part-side jsx 295 . 297) (nil jsx-depth 1 295 . 297) (nil tag-name "h1" 295 . 297) (nil tag-type start 295 . 297) (nil font-lock-face web-mode-html-tag-face 295 . 297) (nil part-side jsx 294 . 295) (nil jsx-depth 1 294 . 295) (nil tag-name "h1" 294 . 295) (nil tag-type start 294 . 295) (nil tag-beg 16 294 . 295) (nil font-lock-face web-mode-html-tag-bracket-face 294 . 295) (nil part-side jsx 285 . 294) (nil jsx-depth 1 285 . 294) (nil part-side jsx 284 . 285) (nil jsx-depth 2 284 . 285) (nil jsx-end 2 284 . 285) (nil font-lock-face web-mode-block-delimiter-face 284 . 285) (nil part-side jsx 283 . 284) (nil jsx-depth 2 283 . 284) (nil part-token comment 283 . 284) (nil syntax-table (12) 283 . 284) (nil font-lock-face web-mode-javascript-comment-face 283 . 284) (nil part-side jsx 265 . 283) (nil jsx-depth 2 265 . 283) (nil part-token comment 265 . 283) (nil font-lock-face web-mode-javascript-comment-face 265 . 283) (nil part-side jsx 264 . 265) (nil jsx-depth 2 264 . 265) (nil part-token comment 264 . 265) (nil syntax-table (11) 264 . 265) (nil font-lock-face web-mode-javascript-comment-face 264 . 265) (nil part-side jsx 263 . 264) (nil jsx-depth 2 263 . 264) (nil jsx-beg 2 263 . 264) (nil font-lock-face web-mode-block-delimiter-face 263 . 264) (nil part-side jsx 254 . 263) (nil jsx-depth 1 254 . 263) (nil part-side jsx 253 . 254) (nil jsx-depth 1 253 . 254) (nil tag-name "header" 253 . 254) (nil tag-type start 253 . 254) (nil tag-end t 253 . 254) (nil font-lock-face web-mode-html-tag-bracket-face 253 . 254) (nil part-side jsx 252 . 253) (nil jsx-depth 1 252 . 253) (nil tag-attr t 252 . 253) (nil tag-attr-end 9 252 . 253) (nil tag-name "header" 252 . 253) (nil tag-type start 252 . 253) (nil font-lock-face web-mode-html-attr-value-face 252 . 253) (nil part-side jsx 247 . 252) (nil jsx-depth 1 247 . 252) (nil tag-attr t 247 . 252) (nil tag-name "header" 247 . 252) (nil tag-type start 247 . 252) (nil font-lock-face web-mode-html-attr-value-face 247 . 252) (nil part-side jsx 246 . 247) (nil jsx-depth 1 246 . 247) (nil tag-attr t 246 . 247) (nil tag-name "header" 246 . 247) (nil tag-type start 246 . 247) (nil font-lock-face web-mode-html-attr-equal-face 246 . 247) (nil part-side jsx 238 . 246) (nil jsx-depth 1 238 . 246) (nil tag-attr t 238 . 246) (nil tag-name "header" 238 . 246) (nil tag-type start 238 . 246) (nil font-lock-face web-mode-html-attr-name-face 238 . 246) (nil part-side jsx 237 . 238) (nil jsx-depth 1 237 . 238) (nil tag-attr-beg 0 237 . 238) (nil tag-attr t 237 . 238) (nil tag-name "header" 237 . 238) (nil tag-type start 237 . 238) (nil font-lock-face web-mode-html-attr-name-face 237 . 238) (nil part-side jsx 236 . 237) (nil jsx-depth 1 236 . 237) (nil tag-name "header" 236 . 237) (nil tag-type start 236 . 237) (nil part-side jsx 230 . 236) (nil jsx-depth 1 230 . 236) (nil tag-name "header" 230 . 236) (nil tag-type start 230 . 236) (nil font-lock-face web-mode-html-tag-face 230 . 236) (nil part-side jsx 229 . 230) (nil jsx-depth 1 229 . 230) (nil tag-name "header" 229 . 230) (nil tag-type start 229 . 230) (nil tag-beg 17 229 . 230) (nil font-lock-face web-mode-html-tag-bracket-face 229 . 230) (nil part-side jsx 222 . 229) (nil jsx-depth 1 222 . 229) (nil part-side jsx 221 . 222) (nil jsx-depth 1 221 . 222) (nil tag-name "matrixrainingletters" 221 . 222) (nil tag-type void 221 . 222) (nil tag-end t 221 . 222) (nil font-lock-face web-mode-html-tag-bracket-face 221 . 222) (nil part-side jsx 220 . 221) (nil jsx-depth 1 220 . 221) (nil tag-name "matrixrainingletters" 220 . 221) (nil tag-type void 220 . 221) (nil font-lock-face web-mode-html-tag-bracket-face 220 . 221) (nil part-side jsx 219 . 220) (nil jsx-depth 1 219 . 220) (nil tag-name "matrixrainingletters" 219 . 220) (nil tag-type void 219 . 220) (nil part-side jsx 218 . 219) (nil jsx-depth 1 218 . 219) (nil tag-attr t 218 . 219) (nil tag-attr-end 12 218 . 219) (nil tag-name "matrixrainingletters" 218 . 219) (nil tag-type void 218 . 219) (nil font-lock-face web-mode-html-attr-value-face 218 . 219) (nil part-side jsx 197 . 218) (nil jsx-depth 1 197 . 218) (nil tag-attr t 197 . 218) (nil tag-name "matrixrainingletters" 197 . 218) (nil tag-type void 197 . 218) (nil font-lock-face web-mode-html-attr-value-face 197 . 218) (nil part-side jsx 196 . 197) (nil jsx-depth 1 196 . 197) (nil tag-attr t 196 . 197) (nil tag-name "matrixrainingletters" 196 . 197) (nil tag-type void 196 . 197) (nil font-lock-face web-mode-html-attr-equal-face 196 . 197) (nil part-side jsx 185 . 196) (nil jsx-depth 1 185 . 196) (nil tag-attr t 185 . 196) (nil tag-name "matrixrainingletters" 185 . 196) (nil tag-type void 185 . 196) (nil font-lock-face web-mode-html-attr-name-face 185 . 196) (nil part-side jsx 184 . 185) (nil jsx-depth 1 184 . 185) (nil tag-attr-beg 0 184 . 185) (nil tag-attr t 184 . 185) (nil tag-name "matrixrainingletters" 184 . 185) (nil tag-type void 184 . 185) (nil font-lock-face web-mode-html-attr-name-face 184 . 185) (nil part-side jsx 183 . 184) (nil jsx-depth 1 183 . 184) (nil tag-name "matrixrainingletters" 183 . 184) (nil tag-type void 183 . 184) (nil part-side jsx 163 . 183) (nil jsx-depth 1 163 . 183) (nil tag-name "matrixrainingletters" 163 . 183) (nil tag-type void 163 . 183) (nil font-lock-face web-mode-html-tag-face 163 . 183) (nil part-side jsx 162 . 163) (nil jsx-depth 1 162 . 163) (nil tag-name "matrixrainingletters" 162 . 163) (nil tag-type void 162 . 163) (nil tag-beg 25 162 . 163) (nil font-lock-face web-mode-html-tag-bracket-face 162 . 163) (nil part-side jsx 155 . 162) (nil jsx-depth 1 155 . 162) (nil part-side jsx 154 . 155) (nil jsx-depth 1 154 . 155) (nil tag-name "div" 154 . 155) (nil tag-type start 154 . 155) (nil tag-end t 154 . 155) (nil font-lock-face web-mode-html-tag-bracket-face 154 . 155) (nil part-side jsx 153 . 154) (nil jsx-depth 1 153 . 154) (nil tag-attr t 153 . 154) (nil tag-attr-end 9 153 . 154) (nil tag-name "div" 153 . 154) (nil tag-type start 153 . 154) (nil font-lock-face web-mode-html-attr-value-face 153 . 154) (nil part-side jsx 144 . 153) (nil jsx-depth 1 144 . 153) (nil tag-attr t 144 . 153) (nil tag-name "div" 144 . 153) (nil tag-type start 144 . 153) (nil font-lock-face web-mode-html-attr-value-face 144 . 153) (nil part-side jsx 143 . 144) (nil jsx-depth 1 143 . 144) (nil tag-attr t 143 . 144) (nil tag-name "div" 143 . 144) (nil tag-type start 143 . 144) (nil font-lock-face web-mode-html-attr-equal-face 143 . 144) (nil part-side jsx 135 . 143) (nil jsx-depth 1 135 . 143) (nil tag-attr t 135 . 143) (nil tag-name "div" 135 . 143) (nil tag-type start 135 . 143) (nil font-lock-face web-mode-html-attr-name-face 135 . 143) (nil part-side jsx 134 . 135) (nil jsx-depth 1 134 . 135) (nil tag-attr-beg 0 134 . 135) (nil tag-attr t 134 . 135) (nil tag-name "div" 134 . 135) (nil tag-type start 134 . 135) (nil font-lock-face web-mode-html-attr-name-face 134 . 135) (nil part-side jsx 133 . 134) (nil jsx-depth 1 133 . 134) (nil tag-name "div" 133 . 134) (nil tag-type start 133 . 134) (nil part-side jsx 130 . 133) (nil jsx-depth 1 130 . 133) (nil tag-name "div" 130 . 133) (nil tag-type start 130 . 133) (nil font-lock-face web-mode-html-tag-face 130 . 133) (nil part-side jsx 129 . 130) (nil jsx-beg 1 129 . 130) (nil jsx-depth 1 129 . 130) (nil tag-name "div" 129 . 130) (nil tag-type start 129 . 130) (nil tag-beg 17 129 . 130) (nil font-lock-face web-mode-html-tag-bracket-face 129 . 130) (nil part-side jsx 122 . 129) (nil part-side jsx 116 . 122) (nil face web-mode-keyword-face 116 . 122) (nil part-side jsx 105 . 116) (nil part-side jsx 97 . 105) (nil face web-mode-variable-name-face 97 . 105) (nil part-side jsx 91 . 97) (nil part-side jsx 85 . 91) (nil face web-mode-function-name-face 85 . 91) (nil part-side jsx 84 . 85) (nil part-side jsx 79 . 84) (nil face web-mode-keyword-face 79 . 84) (nil part-side jsx 76 . 79) (nil part-side jsx 75 . 76) (nil part-token string 75 . 76) (nil syntax-table (15) 75 . 76) (nil font-lock-face web-mode-javascript-string-face 75 . 76) (nil part-side jsx 66 . 75) (nil part-token string 66 . 75) (nil font-lock-face web-mode-javascript-string-face 66 . 75) (nil part-side jsx 65 . 66) (nil part-token string 65 . 66) (nil syntax-table (15) 65 . 66) (nil font-lock-face web-mode-javascript-string-face 65 . 66) (nil part-side jsx 64 . 65) (nil part-side jsx 60 . 64) (nil face web-mode-keyword-face 60 . 64) (nil part-side jsx 34 . 60) (nil part-side jsx 28 . 34) (nil face web-mode-keyword-face 28 . 34) (nil part-side jsx 26 . 28) (nil part-side jsx 25 . 26) (nil part-token string 25 . 26) (nil syntax-table (15) 25 . 26) (nil font-lock-face web-mode-javascript-string-face 25 . 26) (nil part-side jsx 20 . 25) (nil part-token string 20 . 25) (nil font-lock-face web-mode-javascript-string-face 20 . 25) (nil part-side jsx 19 . 20) (nil part-token string 19 . 20) (nil syntax-table (15) 19 . 20) (nil font-lock-face web-mode-javascript-string-face 19 . 20) (nil part-side jsx 18 . 19) (nil part-side jsx 14 . 18) (nil face web-mode-keyword-face 14 . 18) (nil part-side jsx 13 . 14) (nil part-side jsx 8 . 13) (nil face web-mode-type-face 8 . 13) (nil part-side jsx 7 . 8) (nil part-side jsx 1 . 7) (nil face web-mode-keyword-face 1 . 7) (1 . 636) (t 26130 29148 35162 821000)) ((#("import React from 'react';
import { MatrixRainingLetters } from 'react-mdr';

const Layout = ({ children }) => {
  return (
    <div className=\"relative\">
      <MatrixRainingLetters custom_class=\"absolute inset-0 z-0\" />
      <header className=\"z-10\">
        {/* Header content */}
        <h1>Welcome to My App</h1>
      </header>
      <main className=\"lg:px-[15%] relative z-10\">
        {/* Main content */}
        {children}
      </main>
      <footer className=\"absolute bottom-0 w-full z-10\">
        {/* Footer content */}
        <p>Copyright Â© 2024 My App</p>
      </footer>
    </div>
  );
};

export default Layout;
" 0 1 (face web-mode-keyword-face part-side jsx) 1 6 (face web-mode-keyword-face part-side jsx) 6 7 (part-side jsx) 7 12 (face web-mode-type-face part-side jsx) 12 13 (part-side jsx) 13 17 (face web-mode-keyword-face part-side jsx) 17 18 (part-side jsx) 18 19 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 19 24 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 24 25 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 25 27 (part-side jsx) 27 33 (face web-mode-keyword-face part-side jsx) 33 59 (part-side jsx) 59 63 (face web-mode-keyword-face part-side jsx) 63 64 (part-side jsx) 64 65 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 65 74 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 74 75 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 75 77 (part-side jsx) 77 78 (part-side jsx) 78 83 (face web-mode-keyword-face part-side jsx) 83 84 (part-side jsx) 84 90 (face web-mode-function-name-face part-side jsx) 90 96 (part-side jsx) 96 104 (face web-mode-variable-name-face part-side jsx) 104 113 (part-side jsx) 113 115 (part-side jsx) 115 121 (face web-mode-keyword-face part-side jsx) 121 124 (part-side jsx) 124 128 (part-side jsx) 128 129 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 129 132 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 132 133 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 133 134 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 134 142 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 142 143 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 143 152 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 152 153 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 153 154 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 154 161 (jsx-depth 1 part-side jsx) 161 162 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 162 182 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 182 183 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 183 184 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 184 195 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 195 196 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 196 217 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 217 218 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 218 219 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 219 220 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 220 221 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 221 228 (jsx-depth 1 part-side jsx) 228 229 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "header" jsx-depth 1 part-side jsx) 229 235 (font-lock-face web-mode-html-tag-face tag-type start tag-name "header" jsx-depth 1 part-side jsx) 235 236 (tag-type start tag-name "header" jsx-depth 1 part-side jsx) 236 237 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 237 245 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 245 246 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 246 251 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 251 252 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 252 253 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "header" jsx-depth 1 part-side jsx) 253 262 (jsx-depth 1 part-side jsx) 262 263 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 263 264 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 264 282 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 282 283 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 283 284 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 284 293 (jsx-depth 1 part-side jsx) 293 294 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 294 296 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 296 297 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 297 314 (jsx-depth 1 part-side jsx) 314 315 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 315 316 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 316 318 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 318 319 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 319 326 (jsx-depth 1 part-side jsx) 326 327 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "header" jsx-depth 1 part-side jsx) 327 328 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 328 334 (font-lock-face web-mode-html-tag-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 334 335 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "header" jsx-depth 1 part-side jsx) 335 342 (jsx-depth 1 part-side jsx) 342 343 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "main" jsx-depth 1 part-side jsx) 343 347 (font-lock-face web-mode-html-tag-face tag-type start tag-name "main" jsx-depth 1 part-side jsx) 347 348 (tag-type start tag-name "main" jsx-depth 1 part-side jsx) 348 349 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 349 357 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 357 358 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 358 359 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 359 361 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 361 384 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 384 385 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 385 386 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "main" jsx-depth 1 part-side jsx) 386 395 (jsx-depth 1 part-side jsx) 395 396 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 396 397 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 397 413 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 413 414 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 414 415 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 415 424 (jsx-depth 1 part-side jsx) 424 425 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 425 433 (jsx-depth 2 part-side jsx) 433 434 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 434 441 (jsx-depth 1 part-side jsx) 441 442 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "main" jsx-depth 1 part-side jsx) 442 443 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 443 447 (font-lock-face web-mode-html-tag-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 447 448 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "main" jsx-depth 1 part-side jsx) 448 455 (jsx-depth 1 part-side jsx) 455 456 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 456 462 (font-lock-face web-mode-html-tag-face tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 462 463 (tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 463 464 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "footer" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 464 472 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "footer" tag-attr t jsx-depth 1 part-side jsx) 472 473 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "footer" tag-attr t jsx-depth 1 part-side jsx) 473 503 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t jsx-depth 1 part-side jsx) 503 504 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 504 505 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 505 514 (jsx-depth 1 part-side jsx) 514 515 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 515 516 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 516 534 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 534 535 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 535 536 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 536 545 (jsx-depth 1 part-side jsx) 545 546 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p" jsx-depth 1 part-side jsx) 546 547 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 1 part-side jsx) 547 548 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 1 part-side jsx) 548 571 (jsx-depth 1 part-side jsx) 571 572 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 1 part-side jsx) 572 573 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 573 574 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 574 575 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 1 part-side jsx) 575 582 (jsx-depth 1 part-side jsx) 582 583 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 583 584 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 584 590 (font-lock-face web-mode-html-tag-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 590 591 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 591 596 (jsx-depth 1 part-side jsx) 596 597 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 597 598 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 598 601 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 601 602 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx) 602 608 (part-side jsx) 608 611 (part-side jsx) 611 612 (part-side jsx) 612 618 (face web-mode-keyword-face part-side jsx) 618 619 (part-side jsx) 619 626 (face web-mode-keyword-face part-side jsx) 626 634 (part-side jsx) 634 635 (part-side jsx rear-nonsticky nil)) . 1) (undo-tree-id704 . -448) (undo-tree-id705 . -635) (undo-tree-id706 . -635) (undo-tree-id707 . -635) (undo-tree-id708 . -635) (undo-tree-id709 . -635) (undo-tree-id710 . -635) (undo-tree-id711 . -635) (undo-tree-id712 . -635) (undo-tree-id713 . -635) (undo-tree-id714 . -635) (undo-tree-id715 . -635) (undo-tree-id716 . -635) (undo-tree-id717 . -635) (undo-tree-id718 . -635) (undo-tree-id719 . -635) (undo-tree-id720 . -635) (undo-tree-id721 . -635) (undo-tree-id722 . -635) (undo-tree-id723 . -635) (undo-tree-id724 . -635) (undo-tree-id725 . -635) (undo-tree-id726 . -635) (undo-tree-id727 . -152) (undo-tree-id728 . -152) (undo-tree-id729 . -152) (undo-tree-id730 . -448) (undo-tree-id731 . -448) (undo-tree-id732 . -447) (undo-tree-id733 . -635) (undo-tree-id734 . -447) (undo-tree-id735 . -447) (undo-tree-id736 . -447) (nil syntax-table (15) 19 . 20) (nil syntax-table (15) 25 . 26) (nil syntax-table (15) 65 . 66) (nil syntax-table (15) 75 . 76) (nil tag-name "div" 129 . 130) (nil tag-name "div" 130 . 133) (nil tag-name "div" 133 . 134) (nil tag-name "div" 134 . 135) (nil tag-name "div" 135 . 143) (nil tag-name "div" 143 . 144) (nil tag-name "div" 144 . 153) (nil tag-name "div" 153 . 154) (nil tag-name "div" 154 . 155) (nil tag-name "matrixrainingletters" 162 . 163) (nil tag-name "matrixrainingletters" 163 . 183) (nil tag-name "matrixrainingletters" 183 . 184) (nil tag-name "matrixrainingletters" 184 . 185) (nil tag-name "matrixrainingletters" 185 . 196) (nil tag-name "matrixrainingletters" 196 . 197) (nil tag-name "matrixrainingletters" 197 . 218) (nil tag-name "matrixrainingletters" 218 . 219) (nil tag-name "matrixrainingletters" 219 . 220) (nil tag-name "matrixrainingletters" 220 . 221) (nil tag-name "matrixrainingletters" 221 . 222) (nil tag-name "header" 229 . 230) (nil tag-name "header" 230 . 236) (nil tag-name "header" 236 . 237) (nil tag-name "header" 237 . 238) (nil tag-name "header" 238 . 246) (nil tag-name "header" 246 . 247) (nil tag-name "header" 247 . 252) (nil tag-name "header" 252 . 253) (nil tag-name "header" 253 . 254) (nil syntax-table (11) 264 . 265) (nil syntax-table (12) 283 . 284) (nil tag-name "h1" 294 . 295) (nil tag-name "h1" 295 . 297) (nil tag-name "h1" 297 . 298) (nil tag-name "h1" 315 . 316) (nil tag-name "h1" 316 . 317) (nil tag-name "h1" 317 . 319) (nil tag-name "h1" 319 . 320) (nil tag-name "header" 327 . 328) (nil tag-name "header" 328 . 329) (nil tag-name "header" 329 . 335) (nil tag-name "header" 335 . 336) (nil tag-name "main" 343 . 344) (nil tag-name "main" 344 . 348) (nil tag-name "main" 348 . 349) (nil tag-name "main" 349 . 350) (nil tag-name "main" 350 . 358) (nil tag-name "main" 358 . 359) (nil tag-name "main" 359 . 360) (nil tag-name "main" 360 . 362) (nil tag-name "main" 362 . 385) (nil tag-name "main" 385 . 386) (nil tag-name "main" 386 . 387) (nil syntax-table (11) 397 . 398) (nil syntax-table (12) 414 . 415) (nil tag-name "main" 442 . 443) (nil tag-name "main" 443 . 444) (nil tag-name "main" 444 . 448) (nil tag-name "main" 448 . 449) (nil tag-name "footer" 456 . 457) (nil tag-name "footer" 457 . 463) (nil tag-name "footer" 463 . 464) (nil tag-name "footer" 464 . 465) (nil tag-name "footer" 465 . 473) (nil tag-name "footer" 473 . 474) (nil tag-name "footer" 474 . 504) (nil tag-name "footer" 504 . 505) (nil tag-name "footer" 505 . 506) (nil syntax-table (11) 516 . 517) (nil syntax-table (12) 535 . 536) (nil tag-name "p" 546 . 547) (nil tag-name "p" 547 . 548) (nil tag-name "p" 548 . 549) (nil tag-name "p" 572 . 573) (nil tag-name "p" 573 . 574) (nil tag-name "p" 574 . 575) (nil tag-name "p" 575 . 576) (nil tag-name "footer" 583 . 584) (nil tag-name "footer" 584 . 585) (nil tag-name "footer" 585 . 591) (nil tag-name "footer" 591 . 592) (nil tag-name "div" 597 . 598) (nil tag-name "div" 598 . 599) (nil tag-name "div" 599 . 602) (nil tag-name "div" 602 . 603) (nil rear-nonsticky t 635 . 636) (t 26130 30303 958996 677000)) (26130 30302 886970 679000) 0 nil])
([nil nil ((115 . 116)) ((#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 115) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (t 26130 28825 418341 169000)) (26130 28825 410959 774000) 0 nil])
([nil nil ((#(":px-[15%]" 0 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "wrapper" tag-attr t jsx-depth 1 part-side jsx)) . 224) (undo-tree-id16 . -8) (undo-tree-id17 . -8) (undo-tree-id18 . -8) (undo-tree-id20 . -1) (undo-tree-id21 . -8) (undo-tree-id23 . -9) 232 (t 26130 28417 311354 604000)) ((224 . 233)) (26130 28489 538646 493000) 0 nil])
([nil nil ((#("	    <div className=\"absolute z-0 h-full\">
		<MatrixRainingLetters custom_class=\"absolute z-0\" />
	    </div>
" 0 20 (part-side jsx) 20 21 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 21 40 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 40 41 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 41 80 (part-side jsx) 80 81 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 81 93 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 93 94 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 94 109 (part-side jsx) 109 110 (part-side jsx rear-nonsticky t)) . 489) (undo-tree-id132 . -108) (undo-tree-id133 . -109) (undo-tree-id134 . -110) (undo-tree-id135 . -108) (undo-tree-id136 . -10) (undo-tree-id137 . -110) (undo-tree-id138 . -110) (undo-tree-id139 . -109) (undo-tree-id140 . -109) (undo-tree-id141 . -108) (undo-tree-id142 . -108) (undo-tree-id143 . -108) (undo-tree-id144 . -110) (undo-tree-id145 . -10) (undo-tree-id146 . -108) (undo-tree-id147 . -10) (undo-tree-id148 . -110) 499 (t 26130 33862 212946 282000)) nil (26130 33868 378315 553000) 0 nil])
([nil nil ((239 . 242) (t 26130 33159 608410 768000)) ((#("500" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 1 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 239)) (26130 33215 897664 435000) 0 nil])
([nil nil ((95 . 106) (#("div" 0 3 (part-side jsx)) . -95) (undo-tree-id1 . -3) (undo-tree-id3 . -3) 98 (t 26130 33032 78177 242000)) ((95 . 98) (#("<div></div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 7 10 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx)) . 95) (undo-tree-id60 . -4) (undo-tree-id61 . -4)) (26130 33100 98703 89000) 0 nil])
([nil nil ((153 . 157) (t 26130 29151 338497 742000)) ((#(" -hu" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 153) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -4) (undo-tree-id702 . -1) (undo-tree-id703 . -4)) (26130 30302 656604 615000) 0 nil])
nil
([nil nil ((447 . 449) (437 . 438) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 437) (422 . 427) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 422) (389 . 391) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 389) (364 . 366) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 364) (350 . 355) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 350) (334 . 339) (#("      " 0 5 (jsx-depth 1 part-side jsx) 5 6 (jsx-depth 1 part-side jsx rear-nonsticky t)) . 334) (324 . 326) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 324) (307 . 313) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 307) (280 . 286) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 280) (247 . 249) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 247) (234 . 236) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 234) (211 . 213) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 211) (181 . 186) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 181) (166 . 171) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 166) (137 . 139) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 137) (112 . 114) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 112) (98 . 103) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 98) (91 . 92) (#("    " 0 4 (part-side jsx)) . 91) (80 . 82) 223 (t 26130 28425 881363 600000)) ((#("  " 0 2 (part-side jsx)) . 80) (91 . 95) (#("	" 0 1 (part-side jsx)) . 91) (98 . 104) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 98) (112 . 120) (#("		" 0 2 (jsx-depth 1 part-side jsx)) . 112) (137 . 145) (#("		" 0 2 (jsx-depth 1 part-side jsx)) . 137) (166 . 172) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 166) (181 . 187) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 181) (211 . 219) (#("		" 0 2 (jsx-depth 1 part-side jsx)) . 211) (234 . 242) (#("		" 0 2 (jsx-depth 1 part-side jsx)) . 234) (247 . 253) (#("		" 0 2 (jsx-depth 1 part-side jsx)) . 247) (280 . 288) (#("		    " 0 6 (jsx-depth 1 part-side jsx)) . 280) (307 . 315) (#("		    " 0 6 (jsx-depth 1 part-side jsx)) . 307) (324 . 330) (#("		" 0 2 (jsx-depth 1 part-side jsx)) . 324) (334 . 340) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 334) (350 . 356) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 350) (364 . 372) (#("		" 0 2 (jsx-depth 1 part-side jsx)) . 364) (389 . 397) (#("		" 0 2 (jsx-depth 1 part-side jsx)) . 389) (422 . 428) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 422) (437 . 441) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 437) (#("  " 0 2 (part-side jsx)) . 447) (t 26130 28430 394701 674000)) (26130 28430 394324 696000) 0 nil])
([nil nil ((nil rear-nonsticky nil 153 . 154) (149 . 259) (t 26130 33868 386284 89000)) nil (26130 33869 525569 236000) 0 nil])
([nil nil ((239 . 240) (#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 239) (t 26130 33161 751748 25000)) ((239 . 240) (#("9" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 239) (t 26130 33167 68424 428000)) (26130 33167 59131 617000) 0 nil])
([nil nil ((99 . 112)) ((#(" className=\"\"" 0 1 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 12 13 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx)) . 99) (undo-tree-id58 . -12) (undo-tree-id59 . -12)) (26130 33099 802617 478000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -154) (undo-tree-id237 . -1) (#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -155) (undo-tree-id239 . -1) (#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -156) (undo-tree-id241 . -1) 157) ((154 . 157)) (26130 30302 390982 418000) 0 nil])
nil
([nil nil ((#("	    <div className=\"absolute z-0 h-full\">
		<MatrixRainingLetters custom_class=\"absolute z-0\" />
	    </div>
" 0 4 (jsx-depth 1 part-side jsx) 4 5 (jsx-depth 1 part-side jsx rear-nonsticky t) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 9 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 9 10 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 11 19 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 19 20 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 20 40 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 40 41 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 41 42 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 42 45 (jsx-depth 1 part-side jsx) 45 46 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 46 66 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 66 67 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 67 68 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 68 79 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 79 80 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 80 93 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 93 94 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 94 95 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 95 96 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 96 97 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 97 103 (jsx-depth 1 part-side jsx) 103 104 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 104 105 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 105 108 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 108 109 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 109 110 (jsx-depth 1 part-side jsx)) . 149) (undo-tree-id149 . -103) (undo-tree-id150 . -109) (undo-tree-id151 . -5) (undo-tree-id152 . -5) (undo-tree-id153 . -103) (undo-tree-id154 . -5) (undo-tree-id155 . -110) (undo-tree-id156 . -5) (undo-tree-id157 . -5) (undo-tree-id158 . -5) (undo-tree-id159 . -5) (undo-tree-id160 . -5) (undo-tree-id161 . -5) (undo-tree-id162 . -103) (undo-tree-id163 . -5) (undo-tree-id164 . -103) (undo-tree-id165 . -110) 252 (t 26130 33869 532951 585000)) nil (26130 37325 664388 237000) 0 nil])
nil
([nil nil ((111 . 119) (t 26130 33036 538185 408000)) ((#("absolute" 0 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 111) (undo-tree-id56 . -8) (undo-tree-id57 . -8)) (26130 33099 534995 493000) 0 nil])
([nil nil ((154 . 155)) ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 154) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1)) (26130 30302 139159 997000) 0 nil])
([nil nil ((280 . 294) (t 26130 37326 677247 141000)) nil (26130 37864 311324 401000) 0 nil] [nil nil ((147 . 154) (t 26130 34732 330243 319000)) ((#(" classN" 0 1 (part-side jsx) 1 7 (part-side jsx)) . 147) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -7) (undo-tree-id408 . -1) (undo-tree-id409 . -7)) (26130 37325 388500 822000) 0 nil] [nil nil ((#("	" 0 1 (jsx-depth 1 part-side jsx)) . -149) (undo-tree-id279 . -1) (undo-tree-id281 . -1) 150 (148 . 150) (t 26130 34655 766854 519000) 147) ((#("
	" 0 1 (part-side jsx) 1 2 (part-side jsx)) . 148) (undo-tree-id336 . -2) (undo-tree-id337 . -1) (149 . 150)) (26130 34730 604835 271000) 0 nil] [nil nil ((nil rear-nonsticky nil 287 . 288) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -392) (282 . 393) 258) ((#("
	    <div className=\"absolute z-0 h-full\">
		<MatrixRainingLetters custom_class=\"absolute z-0\" />
	    </div>
" 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx) 2 5 (jsx-depth 1 part-side jsx) 5 6 (jsx-depth 1 part-side jsx rear-nonsticky nil) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 10 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 10 11 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 12 20 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 20 21 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 21 41 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 41 42 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 42 43 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 43 44 (jsx-depth 1 part-side jsx) 44 46 (jsx-depth 1 part-side jsx) 46 47 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 47 67 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 67 68 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 68 69 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 69 80 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 80 81 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 81 94 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 94 95 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 95 96 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 96 97 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 97 98 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 98 99 (jsx-depth 1 part-side jsx) 99 100 (jsx-depth 1 part-side jsx) 100 104 (jsx-depth 1 part-side jsx) 104 105 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 105 106 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 106 109 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 109 110 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 110 111 (jsx-depth 1 part-side jsx)) . 282) (undo-tree-id276 . -6) (undo-tree-id277 . -6) (392 . 393) (nil rear-nonsticky t 287 . 288)) (26130 34654 606681 681000) 0 nil])
([nil nil ((119 . 123) (t 26130 33039 161523 548000)) ((#(" bg-" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 119)) (26130 33099 274709 429000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -154) (undo-tree-id235 . -1) 155) ((154 . 155) (t 26130 30301 905662 535000)) (26130 30300 894939 704000) 0 nil])
([nil nil ((294 . 303) (t 26130 37865 331329 962000)) ((#(" h-screen" 0 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 294)) (26130 37876 858493 700000) 0 nil] [nil nil ((294 . 301) (t 26130 37724 684467 581000)) ((#(" bg-red" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 1 7 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 294) (undo-tree-id423 . -7) (undo-tree-id424 . -7) (undo-tree-id425 . -7) (undo-tree-id426 . -7) (undo-tree-id427 . -7) (undo-tree-id428 . -7) (undo-tree-id429 . -7) (undo-tree-id430 . -7)) (26130 37746 665318 64000) 0 nil])
([nil nil ((148 . 157) (#("classN" 0 6 (part-side jsx)) . -148) (undo-tree-id342 . -6) 154) ((148 . 154) (#("className" 0 9 (part-side jsx)) . 148) (undo-tree-id383 . -9) (undo-tree-id384 . -9) (undo-tree-id385 . -9) (undo-tree-id386 . -9) (undo-tree-id387 . -9) (undo-tree-id388 . -9) (undo-tree-id389 . -9) (undo-tree-id390 . -9) (undo-tree-id391 . -9) (undo-tree-id392 . -9) (undo-tree-id393 . -9) (undo-tree-id394 . -9) (undo-tree-id395 . -9)) (26130 37325 92364 592000) 0 nil])
([nil nil ((nil rear-nonsticky nil 359 . 360) (nil part-side jsx 359 . 360) (nil jsx-depth 1 359 . 360) (nil tag-name "div" 359 . 360) (nil tag-type end 359 . 360) (nil tag-end t 359 . 360) (nil font-lock-face web-mode-html-tag-bracket-face 359 . 360) (nil part-side jsx 356 . 359) (nil jsx-depth 1 356 . 359) (nil tag-name "div" 356 . 359) (nil tag-type end 356 . 359) (nil font-lock-face web-mode-html-tag-face 356 . 359) (nil part-side jsx 355 . 356) (nil jsx-depth 1 355 . 356) (nil tag-name "div" 355 . 356) (nil tag-type end 355 . 356) (nil font-lock-face web-mode-html-tag-bracket-face 355 . 356) (nil part-side jsx 354 . 355) (nil jsx-depth 1 354 . 355) (nil tag-name "div" 354 . 355) (nil tag-type end 354 . 355) (nil tag-beg 20 354 . 355) (nil font-lock-face web-mode-html-tag-bracket-face 354 . 355) (nil part-side jsx 347 . 354) (nil jsx-depth 1 347 . 354) (nil part-side jsx 346 . 347) (nil jsx-depth 1 346 . 347) (nil tag-name "matrixrainingletters" 346 . 347) (nil tag-type void 346 . 347) (nil tag-end t 346 . 347) (nil font-lock-face web-mode-html-tag-bracket-face 346 . 347) (nil part-side jsx 345 . 346) (nil jsx-depth 1 345 . 346) (nil tag-name "matrixrainingletters" 345 . 346) (nil tag-type void 345 . 346) (nil font-lock-face web-mode-html-tag-bracket-face 345 . 346) (nil part-side jsx 344 . 345) (nil jsx-depth 1 344 . 345) (nil tag-name "matrixrainingletters" 344 . 345) (nil tag-type void 344 . 345) (nil part-side jsx 343 . 344) (nil jsx-depth 1 343 . 344) (nil tag-attr t 343 . 344) (nil tag-attr-end 12 343 . 344) (nil tag-name "matrixrainingletters" 343 . 344) (nil tag-type void 343 . 344) (nil font-lock-face web-mode-html-attr-value-face 343 . 344) (nil part-side jsx 316 . 343) (nil jsx-depth 1 316 . 343) (nil tag-attr t 316 . 343) (nil tag-name "matrixrainingletters" 316 . 343) (nil tag-type void 316 . 343) (nil font-lock-face web-mode-html-attr-value-face 316 . 343) (nil part-side jsx 315 . 316) (nil jsx-depth 1 315 . 316) (nil tag-attr t 315 . 316) (nil tag-name "matrixrainingletters" 315 . 316) (nil tag-type void 315 . 316) (nil font-lock-face web-mode-html-attr-equal-face 315 . 316) (nil part-side jsx 304 . 315) (nil jsx-depth 1 304 . 315) (nil tag-attr t 304 . 315) (nil tag-name "matrixrainingletters" 304 . 315) (nil tag-type void 304 . 315) (nil font-lock-face web-mode-html-attr-name-face 304 . 315) (nil part-side jsx 303 . 304) (nil jsx-depth 1 303 . 304) (nil tag-attr-beg 0 303 . 304) (nil tag-attr t 303 . 304) (nil tag-name "matrixrainingletters" 303 . 304) (nil tag-type void 303 . 304) (nil font-lock-face web-mode-html-attr-name-face 303 . 304) (nil part-side jsx 302 . 303) (nil jsx-depth 1 302 . 303) (nil tag-name "matrixrainingletters" 302 . 303) (nil tag-type void 302 . 303) (nil part-side jsx 282 . 302) (nil jsx-depth 1 282 . 302) (nil tag-name "matrixrainingletters" 282 . 302) (nil tag-type void 282 . 302) (nil font-lock-face web-mode-html-tag-face 282 . 302) (nil part-side jsx 281 . 282) (nil jsx-depth 1 281 . 282) (nil tag-name "matrixrainingletters" 281 . 282) (nil tag-type void 281 . 282) (nil tag-beg 25 281 . 282) (nil font-lock-face web-mode-html-tag-bracket-face 281 . 282) (nil part-side jsx 272 . 281) (nil jsx-depth 1 272 . 281) (nil part-side jsx 271 . 272) (nil jsx-depth 1 271 . 272) (nil tag-name "div" 271 . 272) (nil tag-type start 271 . 272) (nil tag-end t 271 . 272) (nil font-lock-face web-mode-html-tag-bracket-face 271 . 272) (nil part-side jsx 270 . 271) (nil jsx-depth 1 270 . 271) (nil tag-attr t 270 . 271) (nil tag-attr-end 9 270 . 271) (nil tag-name "div" 270 . 271) (nil tag-type start 270 . 271) (nil font-lock-face web-mode-html-attr-value-face 270 . 271) (nil part-side jsx 243 . 270) (nil jsx-depth 1 243 . 270) (nil tag-attr t 243 . 270) (nil tag-name "div" 243 . 270) (nil tag-type start 243 . 270) (nil font-lock-face web-mode-html-attr-value-face 243 . 270) (nil part-side jsx 242 . 243) (nil jsx-depth 1 242 . 243) (nil tag-attr t 242 . 243) (nil tag-name "div" 242 . 243) (nil tag-type start 242 . 243) (nil font-lock-face web-mode-html-attr-equal-face 242 . 243) (nil part-side jsx 234 . 242) (nil jsx-depth 1 234 . 242) (nil tag-attr t 234 . 242) (nil tag-name "div" 234 . 242) (nil tag-type start 234 . 242) (nil font-lock-face web-mode-html-attr-name-face 234 . 242) (nil part-side jsx 233 . 234) (nil jsx-depth 1 233 . 234) (nil tag-attr-beg 0 233 . 234) (nil tag-attr t 233 . 234) (nil tag-name "div" 233 . 234) (nil tag-type start 233 . 234) (nil font-lock-face web-mode-html-attr-name-face 233 . 234) (nil part-side jsx 232 . 233) (nil jsx-depth 1 232 . 233) (nil tag-name "div" 232 . 233) (nil tag-type start 232 . 233) (nil part-side jsx 229 . 232) (nil jsx-depth 1 229 . 232) (nil tag-name "div" 229 . 232) (nil tag-type start 229 . 232) (nil font-lock-face web-mode-html-tag-face 229 . 232) (nil part-side jsx 228 . 229) (nil jsx-depth 1 228 . 229) (nil tag-name "div" 228 . 229) (nil tag-type start 228 . 229) (nil tag-beg 17 228 . 229) (nil font-lock-face web-mode-html-tag-bracket-face 228 . 229) (nil part-side jsx 221 . 228) (nil jsx-depth 1 221 . 228) (nil part-side jsx 220 . 221) (nil jsx-depth 2 220 . 221) (nil jsx-end 2 220 . 221) (nil font-lock-face web-mode-block-delimiter-face 220 . 221) (nil part-side jsx 219 . 220) (nil jsx-depth 2 219 . 220) (nil part-token comment 219 . 220) (nil syntax-table (12) 219 . 220) (nil font-lock-face web-mode-javascript-comment-face 219 . 220) (nil part-side jsx 206 . 219) (nil jsx-depth 2 206 . 219) (nil part-token comment 206 . 219) (nil font-lock-face web-mode-javascript-comment-face 206 . 219) (nil part-side jsx 204 . 206) (nil jsx-depth 2 204 . 206) (nil part-token comment 204 . 206) (nil font-lock-face web-mode-javascript-comment-face 204 . 206) (nil part-side jsx 186 . 204) (nil jsx-depth 2 186 . 204) (nil part-token comment 186 . 204) (nil font-lock-face web-mode-javascript-comment-face 186 . 204) (nil part-side jsx 185 . 186) (nil jsx-depth 2 185 . 186) (nil part-token comment 185 . 186) (nil syntax-table (11) 185 . 186) (nil font-lock-face web-mode-javascript-comment-face 185 . 186) (nil part-side jsx 184 . 185) (nil jsx-depth 2 184 . 185) (nil jsx-beg 2 184 . 185) (nil font-lock-face web-mode-block-delimiter-face 184 . 185) (nil part-side jsx 177 . 184) (nil jsx-depth 1 177 . 184) (nil part-side jsx 176 . 177) (nil jsx-depth 1 176 . 177) (nil tag-name "div" 176 . 177) (nil tag-type start 176 . 177) (nil tag-end t 176 . 177) (nil font-lock-face web-mode-html-tag-bracket-face 176 . 177) (nil part-side jsx 175 . 176) (nil jsx-depth 1 175 . 176) (nil tag-attr t 175 . 176) (nil tag-attr-end 9 175 . 176) (nil tag-name "div" 175 . 176) (nil tag-type start 175 . 176) (nil font-lock-face web-mode-html-attr-value-face 175 . 176) (nil part-side jsx 166 . 175) (nil jsx-depth 1 166 . 175) (nil tag-attr t 166 . 175) (nil tag-name "div" 166 . 175) (nil tag-type start 166 . 175) (nil font-lock-face web-mode-html-attr-value-face 166 . 175) (nil part-side jsx 165 . 166) (nil jsx-depth 1 165 . 166) (nil tag-attr t 165 . 166) (nil tag-name "div" 165 . 166) (nil tag-type start 165 . 166) (nil font-lock-face web-mode-html-attr-equal-face 165 . 166) (nil part-side jsx 157 . 165) (nil jsx-depth 1 157 . 165) (nil tag-attr t 157 . 165) (nil tag-name "div" 157 . 165) (nil tag-type start 157 . 165) (nil font-lock-face web-mode-html-attr-name-face 157 . 165) (nil part-side jsx 156 . 157) (nil jsx-depth 1 156 . 157) (nil tag-attr-beg 0 156 . 157) (nil tag-attr t 156 . 157) (nil tag-name "div" 156 . 157) (nil tag-type start 156 . 157) (nil font-lock-face web-mode-html-attr-name-face 156 . 157) (nil part-side jsx 155 . 156) (nil jsx-depth 1 155 . 156) (nil tag-name "div" 155 . 156) (nil tag-type start 155 . 156) (nil part-side jsx 152 . 155) (nil jsx-depth 1 152 . 155) (nil tag-name "div" 152 . 155) (nil tag-type start 152 . 155) (nil font-lock-face web-mode-html-tag-face 152 . 155) (nil part-side jsx 151 . 152) (nil jsx-depth 1 151 . 152) (nil tag-name "div" 151 . 152) (nil tag-type start 151 . 152) (nil tag-beg 17 151 . 152) (nil font-lock-face web-mode-html-tag-bracket-face 151 . 152) (nil part-side jsx 149 . 151) (nil jsx-depth 1 149 . 151) (149 . 360) (t 26130 34689 156878 707000)) ((#("  <div className=\"relative\">
      {/* Raining letters as background */}
      <div className=\"absolute z-0 h-full w-full\">
        <MatrixRainingLetters custom_class=\"absolute z-0 h-full w-full\" />
      </div>" 0 2 (part-side jsx) 2 3 (part-side jsx) 3 6 (part-side jsx) 6 7 (part-side jsx) 7 8 (part-side jsx) 8 16 (part-side jsx) 16 17 (part-side jsx) 17 18 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 18 26 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 26 27 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 27 28 (part-side jsx) 28 29 (part-side jsx) 29 35 (part-side jsx) 35 36 (part-side jsx) 36 37 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 37 55 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 55 57 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 57 70 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 70 71 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment part-side jsx) 71 72 (part-side jsx) 72 73 (part-side jsx) 73 79 (part-side jsx) 79 80 (part-side jsx) 80 83 (part-side jsx) 83 84 (part-side jsx) 84 85 (part-side jsx) 85 93 (part-side jsx) 93 94 (part-side jsx) 94 95 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 95 121 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 121 122 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 122 123 (part-side jsx) 123 124 (part-side jsx) 124 132 (part-side jsx) 132 133 (part-side jsx) 133 153 (part-side jsx) 153 154 (part-side jsx) 154 155 (part-side jsx) 155 166 (part-side jsx) 166 167 (part-side jsx) 167 168 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 168 194 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 194 195 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 195 196 (part-side jsx) 196 197 (part-side jsx) 197 198 (part-side jsx) 198 199 (part-side jsx) 199 205 (part-side jsx) 205 206 (part-side jsx) 206 207 (part-side jsx) 207 210 (part-side jsx) 210 211 (part-side jsx rear-nonsticky nil)) . 149) (nil jsx-depth nil 149 . 151) (nil font-lock-face nil 151 . 152) (nil tag-beg nil 151 . 152) (nil tag-type nil 151 . 152) (nil tag-name nil 151 . 152) (nil jsx-depth nil 151 . 152) (nil font-lock-face nil 152 . 155) (nil tag-type nil 152 . 155) (nil tag-name nil 152 . 155) (nil jsx-depth nil 152 . 155) (nil tag-type nil 155 . 156) (nil tag-name nil 155 . 156) (nil jsx-depth nil 155 . 156) (nil font-lock-face nil 156 . 157) (nil tag-type nil 156 . 157) (nil tag-name nil 156 . 157) (nil tag-attr nil 156 . 157) (nil tag-attr-beg nil 156 . 157) (nil jsx-depth nil 156 . 157) (nil font-lock-face nil 157 . 165) (nil tag-type nil 157 . 165) (nil tag-name nil 157 . 165) (nil tag-attr nil 157 . 165) (nil jsx-depth nil 157 . 165) (nil font-lock-face nil 165 . 166) (nil tag-type nil 165 . 166) (nil tag-name nil 165 . 166) (nil tag-attr nil 165 . 166) (nil jsx-depth nil 165 . 166) (nil font-lock-face web-mode-javascript-string-face 167 . 175) (nil font-lock-face web-mode-javascript-string-face 166 . 167) (nil tag-type nil 167 . 175) (nil tag-type nil 166 . 167) (nil tag-name nil 167 . 175) (nil tag-name nil 166 . 167) (nil tag-attr nil 167 . 175) (nil tag-attr nil 166 . 167) (nil jsx-depth nil 167 . 175) (nil jsx-depth nil 166 . 167) (nil font-lock-face web-mode-javascript-string-face 175 . 176) (nil tag-type nil 175 . 176) (nil tag-name nil 175 . 176) (nil tag-attr-end nil 175 . 176) (nil tag-attr nil 175 . 176) (nil jsx-depth nil 175 . 176) (nil font-lock-face nil 176 . 177) (nil tag-end nil 176 . 177) (nil tag-type nil 176 . 177) (nil tag-name nil 176 . 177) (nil jsx-depth nil 176 . 177) (nil jsx-depth nil 178 . 184) (nil jsx-depth nil 177 . 178) (nil font-lock-face nil 184 . 185) (nil jsx-beg nil 184 . 185) (nil jsx-depth nil 184 . 185) (nil syntax-table (11) 185 . 186) (nil jsx-depth nil 185 . 186) (nil jsx-depth nil 186 . 204) (nil jsx-depth nil 204 . 206) (nil jsx-depth nil 206 . 219) (nil syntax-table (12) 219 . 220) (nil jsx-depth nil 219 . 220) (nil font-lock-face nil 220 . 221) (nil jsx-end nil 220 . 221) (nil jsx-depth nil 220 . 221) (nil jsx-depth nil 222 . 228) (nil jsx-depth nil 221 . 222) (nil font-lock-face nil 228 . 229) (nil tag-beg nil 228 . 229) (nil tag-type nil 228 . 229) (nil tag-name nil 228 . 229) (nil jsx-depth nil 228 . 229) (nil font-lock-face nil 229 . 232) (nil tag-type nil 229 . 232) (nil tag-name nil 229 . 232) (nil jsx-depth nil 229 . 232) (nil tag-type nil 232 . 233) (nil tag-name nil 232 . 233) (nil jsx-depth nil 232 . 233) (nil font-lock-face nil 233 . 234) (nil tag-type nil 233 . 234) (nil tag-name nil 233 . 234) (nil tag-attr nil 233 . 234) (nil tag-attr-beg nil 233 . 234) (nil jsx-depth nil 233 . 234) (nil font-lock-face nil 234 . 242) (nil tag-type nil 234 . 242) (nil tag-name nil 234 . 242) (nil tag-attr nil 234 . 242) (nil jsx-depth nil 234 . 242) (nil font-lock-face nil 242 . 243) (nil tag-type nil 242 . 243) (nil tag-name nil 242 . 243) (nil tag-attr nil 242 . 243) (nil jsx-depth nil 242 . 243) (nil font-lock-face web-mode-javascript-string-face 244 . 270) (nil font-lock-face web-mode-javascript-string-face 243 . 244) (nil tag-type nil 244 . 270) (nil tag-type nil 243 . 244) (nil tag-name nil 244 . 270) (nil tag-name nil 243 . 244) (nil tag-attr nil 244 . 270) (nil tag-attr nil 243 . 244) (nil jsx-depth nil 244 . 270) (nil jsx-depth nil 243 . 244) (nil font-lock-face web-mode-javascript-string-face 270 . 271) (nil tag-type nil 270 . 271) (nil tag-name nil 270 . 271) (nil tag-attr-end nil 270 . 271) (nil tag-attr nil 270 . 271) (nil jsx-depth nil 270 . 271) (nil font-lock-face nil 271 . 272) (nil tag-end nil 271 . 272) (nil tag-type nil 271 . 272) (nil tag-name nil 271 . 272) (nil jsx-depth nil 271 . 272) (nil jsx-depth nil 273 . 281) (nil jsx-depth nil 272 . 273) (nil font-lock-face nil 281 . 282) (nil tag-beg nil 281 . 282) (nil tag-type nil 281 . 282) (nil tag-name nil 281 . 282) (nil jsx-depth nil 281 . 282) (nil font-lock-face nil 282 . 302) (nil tag-type nil 282 . 302) (nil tag-name nil 282 . 302) (nil jsx-depth nil 282 . 302) (nil tag-type nil 302 . 303) (nil tag-name nil 302 . 303) (nil jsx-depth nil 302 . 303) (nil font-lock-face nil 303 . 304) (nil tag-type nil 303 . 304) (nil tag-name nil 303 . 304) (nil tag-attr nil 303 . 304) (nil tag-attr-beg nil 303 . 304) (nil jsx-depth nil 303 . 304) (nil font-lock-face nil 304 . 315) (nil tag-type nil 304 . 315) (nil tag-name nil 304 . 315) (nil tag-attr nil 304 . 315) (nil jsx-depth nil 304 . 315) (nil font-lock-face nil 315 . 316) (nil tag-type nil 315 . 316) (nil tag-name nil 315 . 316) (nil tag-attr nil 315 . 316) (nil jsx-depth nil 315 . 316) (nil font-lock-face web-mode-javascript-string-face 317 . 343) (nil font-lock-face web-mode-javascript-string-face 316 . 317) (nil tag-type nil 317 . 343) (nil tag-type nil 316 . 317) (nil tag-name nil 317 . 343) (nil tag-name nil 316 . 317) (nil tag-attr nil 317 . 343) (nil tag-attr nil 316 . 317) (nil jsx-depth nil 317 . 343) (nil jsx-depth nil 316 . 317) (nil font-lock-face web-mode-javascript-string-face 343 . 344) (nil tag-type nil 343 . 344) (nil tag-name nil 343 . 344) (nil tag-attr-end nil 343 . 344) (nil tag-attr nil 343 . 344) (nil jsx-depth nil 343 . 344) (nil tag-type nil 344 . 345) (nil tag-name nil 344 . 345) (nil jsx-depth nil 344 . 345) (nil font-lock-face nil 345 . 346) (nil tag-type nil 345 . 346) (nil tag-name nil 345 . 346) (nil jsx-depth nil 345 . 346) (nil font-lock-face nil 346 . 347) (nil tag-end nil 346 . 347) (nil tag-type nil 346 . 347) (nil tag-name nil 346 . 347) (nil jsx-depth nil 346 . 347) (nil jsx-depth nil 348 . 354) (nil jsx-depth nil 347 . 348) (nil font-lock-face nil 354 . 355) (nil tag-beg nil 354 . 355) (nil tag-type nil 354 . 355) (nil tag-name nil 354 . 355) (nil jsx-depth nil 354 . 355) (nil font-lock-face nil 355 . 356) (nil tag-type nil 355 . 356) (nil tag-name nil 355 . 356) (nil jsx-depth nil 355 . 356) (nil font-lock-face nil 356 . 359) (nil tag-type nil 356 . 359) (nil tag-name nil 356 . 359) (nil jsx-depth nil 356 . 359) (nil font-lock-face nil 359 . 360) (nil tag-end nil 359 . 360) (nil tag-type nil 359 . 360) (nil tag-name nil 359 . 360) (nil jsx-depth nil 359 . 360) (nil rear-nonsticky t 359 . 360)) (26130 34730 157676 933000) 0 nil] [nil nil ((nil rear-nonsticky nil 778 . 779) (nil part-side jsx 770 . 779) (nil jsx-depth 1 770 . 779) (nil part-side jsx 763 . 770) (nil jsx-depth 1 763 . 770) (nil part-side jsx 762 . 763) (nil jsx-depth 1 762 . 763) (nil part-side jsx 756 . 762) (nil jsx-depth 1 756 . 762) (nil part-side jsx 753 . 756) (nil jsx-depth 1 753 . 756) (nil part-side jsx 752 . 753) (nil jsx-depth 2 752 . 753) (nil jsx-end 2 752 . 753) (nil font-lock-face web-mode-block-delimiter-face 752 . 753) (nil part-side jsx 746 . 752) (nil jsx-depth 2 746 . 752) (nil part-side jsx 745 . 746) (nil jsx-depth 3 745 . 746) (nil tag-name "div" 745 . 746) (nil tag-type end 745 . 746) (nil tag-end t 745 . 746) (nil jsx-end 3 745 . 746) (nil font-lock-face web-mode-html-tag-bracket-face 745 . 746) (nil part-side jsx 742 . 745) (nil jsx-depth 3 742 . 745) (nil tag-name "div" 742 . 745) (nil tag-type end 742 . 745) (nil font-lock-face web-mode-html-tag-face 742 . 745) (nil part-side jsx 741 . 742) (nil jsx-depth 3 741 . 742) (nil tag-name "div" 741 . 742) (nil tag-type end 741 . 742) (nil font-lock-face web-mode-html-tag-bracket-face 741 . 742) (nil part-side jsx 740 . 741) (nil jsx-depth 3 740 . 741) (nil tag-name "div" 740 . 741) (nil tag-type end 740 . 741) (nil tag-beg 20 740 . 741) (nil font-lock-face web-mode-html-tag-bracket-face 740 . 741) (nil part-side jsx 735 . 740) (nil jsx-depth 3 735 . 740) (nil part-side jsx 734 . 735) (nil jsx-depth 3 734 . 735) (nil tag-name "footer" 734 . 735) (nil tag-type end 734 . 735) (nil tag-end t 734 . 735) (nil font-lock-face web-mode-html-tag-bracket-face 734 . 735) (nil part-side jsx 728 . 734) (nil jsx-depth 3 728 . 734) (nil tag-name "footer" 728 . 734) (nil tag-type end 728 . 734) (nil font-lock-face web-mode-html-tag-face 728 . 734) (nil part-side jsx 727 . 728) (nil jsx-depth 3 727 . 728) (nil tag-name "footer" 727 . 728) (nil tag-type end 727 . 728) (nil font-lock-face web-mode-html-tag-bracket-face 727 . 728) (nil part-side jsx 726 . 727) (nil jsx-depth 3 726 . 727) (nil tag-name "footer" 726 . 727) (nil tag-type end 726 . 727) (nil tag-beg 20 726 . 727) (nil font-lock-face web-mode-html-tag-bracket-face 726 . 727) (nil part-side jsx 719 . 726) (nil jsx-depth 3 719 . 726) (nil part-side jsx 718 . 719) (nil jsx-depth 3 718 . 719) (nil tag-name "p" 718 . 719) (nil tag-type end 718 . 719) (nil tag-end t 718 . 719) (nil font-lock-face web-mode-html-tag-bracket-face 718 . 719) (nil part-side jsx 717 . 718) (nil jsx-depth 3 717 . 718) (nil tag-name "p" 717 . 718) (nil tag-type end 717 . 718) (nil font-lock-face web-mode-html-tag-face 717 . 718) (nil part-side jsx 716 . 717) (nil jsx-depth 3 716 . 717) (nil tag-name "p" 716 . 717) (nil tag-type end 716 . 717) (nil font-lock-face web-mode-html-tag-bracket-face 716 . 717) (nil part-side jsx 715 . 716) (nil jsx-depth 3 715 . 716) (nil tag-name "p" 715 . 716) (nil tag-type end 715 . 716) (nil tag-beg 20 715 . 716) (nil font-lock-face web-mode-html-tag-bracket-face 715 . 716) (nil part-side jsx 692 . 715) (nil jsx-depth 3 692 . 715) (nil part-side jsx 691 . 692) (nil jsx-depth 3 691 . 692) (nil tag-name "p" 691 . 692) (nil tag-type start 691 . 692) (nil tag-end t 691 . 692) (nil font-lock-face web-mode-html-tag-bracket-face 691 . 692) (nil part-side jsx 690 . 691) (nil jsx-depth 3 690 . 691) (nil tag-name "p" 690 . 691) (nil tag-type start 690 . 691) (nil font-lock-face web-mode-html-tag-face 690 . 691) (nil part-side jsx 689 . 690) (nil jsx-depth 3 689 . 690) (nil tag-name "p" 689 . 690) (nil tag-type start 689 . 690) (nil tag-beg 16 689 . 690) (nil font-lock-face web-mode-html-tag-bracket-face 689 . 690) (nil part-side jsx 680 . 689) (nil jsx-depth 3 680 . 689) (nil part-side jsx 679 . 680) (nil jsx-depth 4 679 . 680) (nil jsx-end 4 679 . 680) (nil font-lock-face web-mode-block-delimiter-face 679 . 680) (nil part-side jsx 678 . 679) (nil jsx-depth 4 678 . 679) (nil part-token comment 678 . 679) (nil syntax-table (12) 678 . 679) (nil font-lock-face web-mode-javascript-comment-face 678 . 679) (nil part-side jsx 660 . 678) (nil jsx-depth 4 660 . 678) (nil part-token comment 660 . 678) (nil font-lock-face web-mode-javascript-comment-face 660 . 678) (nil part-side jsx 659 . 660) (nil jsx-depth 4 659 . 660) (nil part-token comment 659 . 660) (nil syntax-table (11) 659 . 660) (nil font-lock-face web-mode-javascript-comment-face 659 . 660) (nil part-side jsx 658 . 659) (nil jsx-depth 4 658 . 659) (nil jsx-beg 4 658 . 659) (nil font-lock-face web-mode-block-delimiter-face 658 . 659) (nil part-side jsx 649 . 658) (nil jsx-depth 3 649 . 658) (nil part-side jsx 648 . 649) (nil jsx-depth 3 648 . 649) (nil tag-name "footer" 648 . 649) (nil tag-type start 648 . 649) (nil tag-end t 648 . 649) (nil font-lock-face web-mode-html-tag-bracket-face 648 . 649) (nil part-side jsx 642 . 648) (nil jsx-depth 3 642 . 648) (nil tag-name "footer" 642 . 648) (nil tag-type start 642 . 648) (nil font-lock-face web-mode-html-tag-face 642 . 648) (nil part-side jsx 641 . 642) (nil jsx-depth 3 641 . 642) (nil tag-name "footer" 641 . 642) (nil tag-type start 641 . 642) (nil tag-beg 16 641 . 642) (nil font-lock-face web-mode-html-tag-bracket-face 641 . 642) (nil part-side jsx 634 . 641) (nil jsx-depth 3 634 . 641) (nil part-side jsx 633 . 634) (nil jsx-depth 4 633 . 634) (nil jsx-end 4 633 . 634) (nil font-lock-face web-mode-block-delimiter-face 633 . 634) (nil part-side jsx 632 . 633) (nil jsx-depth 4 632 . 633) (nil part-token comment 632 . 633) (nil syntax-table (12) 632 . 633) (nil font-lock-face web-mode-javascript-comment-face 632 . 633) (nil part-side jsx 622 . 632) (nil jsx-depth 4 622 . 632) (nil part-token comment 622 . 632) (nil font-lock-face web-mode-javascript-comment-face 622 . 632) (nil part-side jsx 621 . 622) (nil jsx-depth 4 621 . 622) (nil part-token comment 621 . 622) (nil syntax-table (11) 621 . 622) (nil font-lock-face web-mode-javascript-comment-face 621 . 622) (nil part-side jsx 620 . 621) (nil jsx-depth 4 620 . 621) (nil jsx-beg 4 620 . 621) (nil font-lock-face web-mode-block-delimiter-face 620 . 621) (nil part-side jsx 606 . 620) (nil jsx-depth 3 606 . 620) (nil part-side jsx 605 . 606) (nil jsx-depth 3 605 . 606) (nil tag-name "main" 605 . 606) (nil tag-type end 605 . 606) (nil tag-end t 605 . 606) (nil font-lock-face web-mode-html-tag-bracket-face 605 . 606) (nil part-side jsx 601 . 605) (nil jsx-depth 3 601 . 605) (nil tag-name "main" 601 . 605) (nil tag-type end 601 . 605) (nil font-lock-face web-mode-html-tag-face 601 . 605) (nil part-side jsx 600 . 601) (nil jsx-depth 3 600 . 601) (nil tag-name "main" 600 . 601) (nil tag-type end 600 . 601) (nil font-lock-face web-mode-html-tag-bracket-face 600 . 601) (nil part-side jsx 599 . 600) (nil jsx-depth 3 599 . 600) (nil tag-name "main" 599 . 600) (nil tag-type end 599 . 600) (nil tag-beg 20 599 . 600) (nil font-lock-face web-mode-html-tag-bracket-face 599 . 600) (nil part-side jsx 592 . 599) (nil jsx-depth 3 592 . 599) (nil part-side jsx 591 . 592) (nil jsx-depth 4 591 . 592) (nil jsx-end 4 591 . 592) (nil font-lock-face web-mode-block-delimiter-face 591 . 592) (nil part-side jsx 583 . 591) (nil jsx-depth 4 583 . 591) (nil part-side jsx 582 . 583) (nil jsx-depth 4 582 . 583) (nil jsx-beg 4 582 . 583) (nil font-lock-face web-mode-block-delimiter-face 582 . 583) (nil part-side jsx 573 . 582) (nil jsx-depth 3 573 . 582) (nil part-side jsx 572 . 573) (nil jsx-depth 3 572 . 573) (nil tag-name "main" 572 . 573) (nil tag-type start 572 . 573) (nil tag-end t 572 . 573) (nil font-lock-face web-mode-html-tag-bracket-face 572 . 573) (nil part-side jsx 571 . 572) (nil jsx-depth 3 571 . 572) (nil tag-attr t 571 . 572) (nil tag-attr-end 9 571 . 572) (nil tag-name "main" 571 . 572) (nil tag-type start 571 . 572) (nil font-lock-face web-mode-html-attr-value-face 571 . 572) (nil part-side jsx 543 . 571) (nil jsx-depth 3 543 . 571) (nil tag-attr t 543 . 571) (nil tag-name "main" 543 . 571) (nil tag-type start 543 . 571) (nil font-lock-face web-mode-html-attr-value-face 543 . 571) (nil part-side jsx 542 . 543) (nil jsx-depth 3 542 . 543) (nil tag-attr t 542 . 543) (nil tag-name "main" 542 . 543) (nil tag-type start 542 . 543) (nil font-lock-face web-mode-html-attr-equal-face 542 . 543) (nil part-side jsx 534 . 542) (nil jsx-depth 3 534 . 542) (nil tag-attr t 534 . 542) (nil tag-name "main" 534 . 542) (nil tag-type start 534 . 542) (nil font-lock-face web-mode-html-attr-name-face 534 . 542) (nil part-side jsx 533 . 534) (nil jsx-depth 3 533 . 534) (nil tag-attr-beg 0 533 . 534) (nil tag-attr t 533 . 534) (nil tag-name "main" 533 . 534) (nil tag-type start 533 . 534) (nil font-lock-face web-mode-html-attr-name-face 533 . 534) (nil part-side jsx 532 . 533) (nil jsx-depth 3 532 . 533) (nil tag-name "main" 532 . 533) (nil tag-type start 532 . 533) (nil part-side jsx 528 . 532) (nil jsx-depth 3 528 . 532) (nil tag-name "main" 528 . 532) (nil tag-type start 528 . 532) (nil font-lock-face web-mode-html-tag-face 528 . 532) (nil part-side jsx 527 . 528) (nil jsx-depth 3 527 . 528) (nil tag-name "main" 527 . 528) (nil tag-type start 527 . 528) (nil tag-beg 17 527 . 528) (nil font-lock-face web-mode-html-tag-bracket-face 527 . 528) (nil part-side jsx 520 . 527) (nil jsx-depth 3 520 . 527) (nil part-side jsx 519 . 520) (nil jsx-depth 4 519 . 520) (nil jsx-end 4 519 . 520) (nil font-lock-face web-mode-block-delimiter-face 519 . 520) (nil part-side jsx 518 . 519) (nil jsx-depth 4 518 . 519) (nil part-token comment 518 . 519) (nil syntax-table (12) 518 . 519) (nil font-lock-face web-mode-javascript-comment-face 518 . 519) (nil part-side jsx 502 . 518) (nil jsx-depth 4 502 . 518) (nil part-token comment 502 . 518) (nil font-lock-face web-mode-javascript-comment-face 502 . 518) (nil part-side jsx 501 . 502) (nil jsx-depth 4 501 . 502) (nil part-token comment 501 . 502) (nil syntax-table (11) 501 . 502) (nil font-lock-face web-mode-javascript-comment-face 501 . 502) (nil part-side jsx 500 . 501) (nil jsx-depth 4 500 . 501) (nil jsx-beg 4 500 . 501) (nil font-lock-face web-mode-block-delimiter-face 500 . 501) (nil part-side jsx 486 . 500) (nil jsx-depth 3 486 . 500) (nil part-side jsx 485 . 486) (nil jsx-depth 3 485 . 486) (nil tag-name "div" 485 . 486) (nil tag-type end 485 . 486) (nil tag-end t 485 . 486) (nil font-lock-face web-mode-html-tag-bracket-face 485 . 486) (nil part-side jsx 482 . 485) (nil jsx-depth 3 482 . 485) (nil tag-name "div" 482 . 485) (nil tag-type end 482 . 485) (nil font-lock-face web-mode-html-tag-face 482 . 485) (nil part-side jsx 481 . 482) (nil jsx-depth 3 481 . 482) (nil tag-name "div" 481 . 482) (nil tag-type end 481 . 482) (nil font-lock-face web-mode-html-tag-bracket-face 481 . 482) (nil part-side jsx 480 . 481) (nil jsx-depth 3 480 . 481) (nil tag-name "div" 480 . 481) (nil tag-type end 480 . 481) (nil tag-beg 20 480 . 481) (nil font-lock-face web-mode-html-tag-bracket-face 480 . 481) (nil part-side jsx 473 . 480) (nil jsx-depth 3 473 . 480) (nil part-side jsx 472 . 473) (nil jsx-depth 3 472 . 473) (nil tag-name "matrixrainingletters" 472 . 473) (nil tag-type void 472 . 473) (nil tag-end t 472 . 473) (nil font-lock-face web-mode-html-tag-bracket-face 472 . 473) (nil part-side jsx 471 . 472) (nil jsx-depth 3 471 . 472) (nil tag-name "matrixrainingletters" 471 . 472) (nil tag-type void 471 . 472) (nil font-lock-face web-mode-html-tag-bracket-face 471 . 472) (nil part-side jsx 470 . 471) (nil jsx-depth 3 470 . 471) (nil tag-name "matrixrainingletters" 470 . 471) (nil tag-type void 470 . 471) (nil part-side jsx 469 . 470) (nil jsx-depth 3 469 . 470) (nil tag-attr t 469 . 470) (nil tag-attr-end 12 469 . 470) (nil tag-name "matrixrainingletters" 469 . 470) (nil tag-type void 469 . 470) (nil font-lock-face web-mode-html-attr-value-face 469 . 470) (nil part-side jsx 442 . 469) (nil jsx-depth 3 442 . 469) (nil tag-attr t 442 . 469) (nil tag-name "matrixrainingletters" 442 . 469) (nil tag-type void 442 . 469) (nil font-lock-face web-mode-html-attr-value-face 442 . 469) (nil part-side jsx 441 . 442) (nil jsx-depth 3 441 . 442) (nil tag-attr t 441 . 442) (nil tag-name "matrixrainingletters" 441 . 442) (nil tag-type void 441 . 442) (nil font-lock-face web-mode-html-attr-equal-face 441 . 442) (nil part-side jsx 430 . 441) (nil jsx-depth 3 430 . 441) (nil tag-attr t 430 . 441) (nil tag-name "matrixrainingletters" 430 . 441) (nil tag-type void 430 . 441) (nil font-lock-face web-mode-html-attr-name-face 430 . 441) (nil part-side jsx 429 . 430) (nil jsx-depth 3 429 . 430) (nil tag-attr-beg 0 429 . 430) (nil tag-attr t 429 . 430) (nil tag-name "matrixrainingletters" 429 . 430) (nil tag-type void 429 . 430) (nil font-lock-face web-mode-html-attr-name-face 429 . 430) (nil part-side jsx 428 . 429) (nil jsx-depth 3 428 . 429) (nil tag-name "matrixrainingletters" 428 . 429) (nil tag-type void 428 . 429) (nil part-side jsx 408 . 428) (nil jsx-depth 3 408 . 428) (nil tag-name "matrixrainingletters" 408 . 428) (nil tag-type void 408 . 428) (nil font-lock-face web-mode-html-tag-face 408 . 428) (nil part-side jsx 407 . 408) (nil jsx-depth 3 407 . 408) (nil tag-name "matrixrainingletters" 407 . 408) (nil tag-type void 407 . 408) (nil tag-beg 25 407 . 408) (nil font-lock-face web-mode-html-tag-bracket-face 407 . 408) (nil part-side jsx 398 . 407) (nil jsx-depth 3 398 . 407) (nil part-side jsx 397 . 398) (nil jsx-depth 3 397 . 398) (nil tag-name "div" 397 . 398) (nil tag-type start 397 . 398) (nil tag-end t 397 . 398) (nil font-lock-face web-mode-html-tag-bracket-face 397 . 398) (nil part-side jsx 396 . 397) (nil jsx-depth 3 396 . 397) (nil tag-attr t 396 . 397) (nil tag-attr-end 9 396 . 397) (nil tag-name "div" 396 . 397) (nil tag-type start 396 . 397) (nil font-lock-face web-mode-html-attr-value-face 396 . 397) (nil part-side jsx 369 . 396) (nil jsx-depth 3 369 . 396) (nil tag-attr t 369 . 396) (nil tag-name "div" 369 . 396) (nil tag-type start 369 . 396) (nil font-lock-face web-mode-html-attr-value-face 369 . 396) (nil part-side jsx 368 . 369) (nil jsx-depth 3 368 . 369) (nil tag-attr t 368 . 369) (nil tag-name "div" 368 . 369) (nil tag-type start 368 . 369) (nil font-lock-face web-mode-html-attr-equal-face 368 . 369) (nil part-side jsx 360 . 368) (nil jsx-depth 3 360 . 368) (nil tag-attr t 360 . 368) (nil tag-name "div" 360 . 368) (nil tag-type start 360 . 368) (nil font-lock-face web-mode-html-attr-name-face 360 . 368) (nil part-side jsx 359 . 360) (nil jsx-depth 3 359 . 360) (nil tag-attr-beg 0 359 . 360) (nil tag-attr t 359 . 360) (nil tag-name "div" 359 . 360) (nil tag-type start 359 . 360) (nil font-lock-face web-mode-html-attr-name-face 359 . 360) (nil part-side jsx 358 . 359) (nil jsx-depth 3 358 . 359) (nil tag-name "div" 358 . 359) (nil tag-type start 358 . 359) (nil part-side jsx 355 . 358) (nil jsx-depth 3 355 . 358) (nil tag-name "div" 355 . 358) (nil tag-type start 355 . 358) (nil font-lock-face web-mode-html-tag-face 355 . 358) (nil part-side jsx 354 . 355) (nil jsx-depth 3 354 . 355) (nil tag-name "div" 354 . 355) (nil tag-type start 354 . 355) (nil tag-beg 17 354 . 355) (nil font-lock-face web-mode-html-tag-bracket-face 354 . 355) (nil part-side jsx 347 . 354) (nil jsx-depth 3 347 . 354) (nil part-side jsx 346 . 347) (nil jsx-depth 4 346 . 347) (nil jsx-end 4 346 . 347) (nil font-lock-face web-mode-block-delimiter-face 346 . 347) (nil part-side jsx 345 . 346) (nil jsx-depth 4 345 . 346) (nil part-token comment 345 . 346) (nil syntax-table (12) 345 . 346) (nil font-lock-face web-mode-javascript-comment-face 345 . 346) (nil part-side jsx 332 . 345) (nil jsx-depth 4 332 . 345) (nil part-token comment 332 . 345) (nil font-lock-face web-mode-javascript-comment-face 332 . 345) (nil part-side jsx 330 . 332) (nil jsx-depth 4 330 . 332) (nil part-token comment 330 . 332) (nil font-lock-face web-mode-javascript-comment-face 330 . 332) (nil part-side jsx 312 . 330) (nil jsx-depth 4 312 . 330) (nil part-token comment 312 . 330) (nil font-lock-face web-mode-javascript-comment-face 312 . 330) (nil part-side jsx 311 . 312) (nil jsx-depth 4 311 . 312) (nil part-token comment 311 . 312) (nil syntax-table (11) 311 . 312) (nil font-lock-face web-mode-javascript-comment-face 311 . 312) (nil part-side jsx 310 . 311) (nil jsx-depth 4 310 . 311) (nil jsx-beg 4 310 . 311) (nil font-lock-face web-mode-block-delimiter-face 310 . 311) (nil part-side jsx 303 . 310) (nil jsx-depth 3 303 . 310) (nil part-side jsx 302 . 303) (nil jsx-depth 3 302 . 303) (nil tag-name "div" 302 . 303) (nil tag-type start 302 . 303) (nil tag-end t 302 . 303) (nil font-lock-face web-mode-html-tag-bracket-face 302 . 303) (nil part-side jsx 301 . 302) (nil jsx-depth 3 301 . 302) (nil tag-attr t 301 . 302) (nil tag-attr-end 9 301 . 302) (nil tag-name "div" 301 . 302) (nil tag-type start 301 . 302) (nil font-lock-face web-mode-html-attr-value-face 301 . 302) (nil part-side jsx 292 . 301) (nil jsx-depth 3 292 . 301) (nil tag-attr t 292 . 301) (nil tag-name "div" 292 . 301) (nil tag-type start 292 . 301) (nil font-lock-face web-mode-html-attr-value-face 292 . 301) (nil part-side jsx 291 . 292) (nil jsx-depth 3 291 . 292) (nil tag-attr t 291 . 292) (nil tag-name "div" 291 . 292) (nil tag-type start 291 . 292) (nil font-lock-face web-mode-html-attr-equal-face 291 . 292) (nil part-side jsx 283 . 291) (nil jsx-depth 3 283 . 291) (nil tag-attr t 283 . 291) (nil tag-name "div" 283 . 291) (nil tag-type start 283 . 291) (nil font-lock-face web-mode-html-attr-name-face 283 . 291) (nil part-side jsx 282 . 283) (nil jsx-depth 3 282 . 283) (nil tag-attr-beg 0 282 . 283) (nil tag-attr t 282 . 283) (nil tag-name "div" 282 . 283) (nil tag-type start 282 . 283) (nil font-lock-face web-mode-html-attr-name-face 282 . 283) (nil part-side jsx 281 . 282) (nil jsx-depth 3 281 . 282) (nil tag-name "div" 281 . 282) (nil tag-type start 281 . 282) (nil part-side jsx 278 . 281) (nil jsx-depth 3 278 . 281) (nil tag-name "div" 278 . 281) (nil tag-type start 278 . 281) (nil font-lock-face web-mode-html-tag-face 278 . 281) (nil part-side jsx 277 . 278) (nil jsx-depth 3 277 . 278) (nil tag-name "div" 277 . 278) (nil tag-type start 277 . 278) (nil tag-beg 17 277 . 278) (nil jsx-beg 3 277 . 278) (nil font-lock-face web-mode-html-tag-bracket-face 277 . 278) (nil part-side jsx 270 . 277) (nil jsx-depth 2 270 . 277) (nil part-side jsx 264 . 270) (nil jsx-depth 2 264 . 270) (nil face web-mode-keyword-face 264 . 270) (nil part-side jsx 261 . 264) (nil jsx-depth 2 261 . 264) (nil part-side jsx 260 . 261) (nil jsx-depth 2 260 . 261) (nil jsx-beg 2 260 . 261) (nil font-lock-face web-mode-block-delimiter-face 260 . 261) (nil part-side jsx 255 . 260) (nil jsx-depth 1 255 . 260) (nil part-side jsx 254 . 255) (nil jsx-depth 2 254 . 255) (nil jsx-end 2 254 . 255) (nil font-lock-face web-mode-block-delimiter-face 254 . 255) (nil part-side jsx 253 . 254) (nil jsx-depth 2 253 . 254) (nil part-side jsx 245 . 253) (nil jsx-depth 2 245 . 253) (nil part-side jsx 244 . 245) (nil jsx-depth 2 244 . 245) (nil part-side jsx 243 . 244) (nil jsx-depth 2 243 . 244) (nil jsx-beg 2 243 . 244) (nil font-lock-face web-mode-block-delimiter-face 243 . 244) (nil part-side jsx 239 . 243) (nil jsx-depth 1 239 . 243) (nil part-side jsx 233 . 239) (nil jsx-depth 1 233 . 239) (nil part-side jsx 232 . 233) (nil jsx-depth 1 232 . 233) (nil part-side jsx 227 . 232) (nil jsx-depth 1 227 . 232) (nil part-side jsx 212 . 227) (nil jsx-depth 1 212 . 227) (nil part-side jsx 208 . 212) (nil jsx-depth 1 208 . 212) (nil part-side jsx 207 . 208) (nil jsx-depth 1 207 . 208) (nil part-side jsx 206 . 207) (nil jsx-depth 2 206 . 207) (nil jsx-end 2 206 . 207) (nil font-lock-face web-mode-block-delimiter-face 206 . 207) (nil part-side jsx 184 . 206) (nil jsx-depth 2 184 . 206) (nil part-side jsx 183 . 184) (nil jsx-depth 2 183 . 184) (nil jsx-beg 2 183 . 184) (nil font-lock-face web-mode-block-delimiter-face 183 . 184) (nil part-side jsx 182 . 183) (nil jsx-depth 1 182 . 183) (nil part-side jsx 176 . 182) (nil jsx-depth 1 176 . 182) (nil part-side jsx 166 . 176) (nil jsx-depth 1 166 . 176) (nil part-side jsx 162 . 166) (nil jsx-depth 1 162 . 166) (nil part-side jsx 161 . 162) (nil jsx-depth 1 161 . 162) (nil part-side jsx 156 . 161) (nil jsx-depth 1 156 . 161) (nil part-side jsx 155 . 156) (nil jsx-depth 1 155 . 156) (nil part-side jsx 149 . 155) (nil jsx-depth 1 149 . 155) (149 . 779)) ((#("import React from 'react';
import { MatrixRainingLetters } from 'react-mdr';

const Layout = ({ children }) => {
  return (
    <div className=\"relative\">
      {/* Raining letters as background */}
      <div className=\"absolute z-0 h-full w-full\">
        <MatrixRainingLetters custom_class=\"absolute z-0 h-full w-full\" />
      </div>
      
      {/* Main content */}
      <main className='relative z-10 overflow-auto'>
        {children}
      </main>
      
      {/* Footer */}
      <footer>
        {/* Footer content */}
        <p>Copyright Â© 2024 My App</p>
      </footer>
    </div>
  );
};

export default Layout;
" 0 6 (jsx-depth 1 part-side jsx) 6 7 (jsx-depth 1 part-side jsx) 7 12 (jsx-depth 1 part-side jsx) 12 13 (jsx-depth 1 part-side jsx) 13 17 (jsx-depth 1 part-side jsx) 17 27 (jsx-depth 1 part-side jsx) 27 33 (jsx-depth 1 part-side jsx) 33 34 (jsx-depth 1 part-side jsx) 34 35 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 35 57 (jsx-depth 2 part-side jsx) 57 58 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 58 59 (jsx-depth 1 part-side jsx) 59 63 (jsx-depth 1 part-side jsx) 63 78 (jsx-depth 1 part-side jsx) 78 83 (jsx-depth 1 part-side jsx) 83 84 (jsx-depth 1 part-side jsx) 84 90 (jsx-depth 1 part-side jsx) 90 94 (jsx-depth 1 part-side jsx) 94 95 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 95 96 (jsx-depth 2 part-side jsx) 96 104 (jsx-depth 2 part-side jsx) 104 105 (jsx-depth 2 part-side jsx) 105 106 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 106 111 (jsx-depth 1 part-side jsx) 111 112 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 112 115 (jsx-depth 2 part-side jsx) 115 121 (face web-mode-keyword-face jsx-depth 2 part-side jsx) 121 128 (jsx-depth 2 part-side jsx) 128 129 (font-lock-face web-mode-html-tag-bracket-face jsx-beg 3 tag-beg 17 tag-type start tag-name "div" jsx-depth 3 part-side jsx) 129 132 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 3 part-side jsx) 132 133 (tag-type start tag-name "div" jsx-depth 3 part-side jsx) 133 134 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 3 part-side jsx) 134 142 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 3 part-side jsx) 142 143 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 3 part-side jsx) 143 152 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 3 part-side jsx) 152 153 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 3 part-side jsx) 153 154 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 3 part-side jsx) 154 161 (jsx-depth 3 part-side jsx) 161 162 (font-lock-face web-mode-block-delimiter-face jsx-beg 4 jsx-depth 4 part-side jsx) 162 163 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 4 part-side jsx) 163 181 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 4 part-side jsx) 181 183 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 4 part-side jsx) 183 196 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 4 part-side jsx) 196 197 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 4 part-side jsx) 197 198 (font-lock-face web-mode-block-delimiter-face jsx-end 4 jsx-depth 4 part-side jsx) 198 205 (jsx-depth 3 part-side jsx) 205 206 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 3 part-side jsx) 206 209 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 3 part-side jsx) 209 210 (tag-type start tag-name "div" jsx-depth 3 part-side jsx) 210 211 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 3 part-side jsx) 211 219 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 3 part-side jsx) 219 220 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 3 part-side jsx) 220 247 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 3 part-side jsx) 247 248 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 3 part-side jsx) 248 249 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 3 part-side jsx) 249 258 (jsx-depth 3 part-side jsx) 258 259 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 3 part-side jsx) 259 279 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 3 part-side jsx) 279 280 (tag-type void tag-name "matrixrainingletters" jsx-depth 3 part-side jsx) 280 281 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 3 part-side jsx) 281 292 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 3 part-side jsx) 292 293 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 3 part-side jsx) 293 320 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 3 part-side jsx) 320 321 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 3 part-side jsx) 321 322 (tag-type void tag-name "matrixrainingletters" jsx-depth 3 part-side jsx) 322 323 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 3 part-side jsx) 323 324 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 3 part-side jsx) 324 331 (jsx-depth 3 part-side jsx) 331 332 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 3 part-side jsx) 332 333 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 3 part-side jsx) 333 336 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 3 part-side jsx) 336 337 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 3 part-side jsx) 337 351 (jsx-depth 3 part-side jsx) 351 352 (font-lock-face web-mode-block-delimiter-face jsx-beg 4 jsx-depth 4 part-side jsx) 352 353 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 4 part-side jsx) 353 369 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 4 part-side jsx) 369 370 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 4 part-side jsx) 370 371 (font-lock-face web-mode-block-delimiter-face jsx-end 4 jsx-depth 4 part-side jsx) 371 378 (jsx-depth 3 part-side jsx) 378 379 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "main" jsx-depth 3 part-side jsx) 379 383 (font-lock-face web-mode-html-tag-face tag-type start tag-name "main" jsx-depth 3 part-side jsx) 383 384 (tag-type start tag-name "main" jsx-depth 3 part-side jsx) 384 385 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t tag-attr-beg 0 jsx-depth 3 part-side jsx) 385 393 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t jsx-depth 3 part-side jsx) 393 394 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "main" tag-attr t jsx-depth 3 part-side jsx) 394 422 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 3 part-side jsx) 422 423 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr-end 9 tag-attr t jsx-depth 3 part-side jsx) 423 424 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "main" jsx-depth 3 part-side jsx) 424 433 (jsx-depth 3 part-side jsx) 433 434 (font-lock-face web-mode-block-delimiter-face jsx-beg 4 jsx-depth 4 part-side jsx) 434 442 (jsx-depth 4 part-side jsx) 442 443 (font-lock-face web-mode-block-delimiter-face jsx-end 4 jsx-depth 4 part-side jsx) 443 450 (jsx-depth 3 part-side jsx) 450 451 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "main" jsx-depth 3 part-side jsx) 451 452 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "main" jsx-depth 3 part-side jsx) 452 456 (font-lock-face web-mode-html-tag-face tag-type end tag-name "main" jsx-depth 3 part-side jsx) 456 457 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "main" jsx-depth 3 part-side jsx) 457 471 (jsx-depth 3 part-side jsx) 471 472 (font-lock-face web-mode-block-delimiter-face jsx-beg 4 jsx-depth 4 part-side jsx) 472 473 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 4 part-side jsx) 473 483 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 4 part-side jsx) 483 484 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 4 part-side jsx) 484 485 (font-lock-face web-mode-block-delimiter-face jsx-end 4 jsx-depth 4 part-side jsx) 485 492 (jsx-depth 3 part-side jsx) 492 493 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "footer" jsx-depth 3 part-side jsx) 493 499 (font-lock-face web-mode-html-tag-face tag-type start tag-name "footer" jsx-depth 3 part-side jsx) 499 500 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "footer" jsx-depth 3 part-side jsx) 500 509 (jsx-depth 3 part-side jsx) 509 510 (font-lock-face web-mode-block-delimiter-face jsx-beg 4 jsx-depth 4 part-side jsx) 510 511 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 4 part-side jsx) 511 529 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 4 part-side jsx) 529 530 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 4 part-side jsx) 530 531 (font-lock-face web-mode-block-delimiter-face jsx-end 4 jsx-depth 4 part-side jsx) 531 540 (jsx-depth 3 part-side jsx) 540 541 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p" jsx-depth 3 part-side jsx) 541 542 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 3 part-side jsx) 542 543 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 3 part-side jsx) 543 566 (jsx-depth 3 part-side jsx) 566 567 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 3 part-side jsx) 567 568 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 3 part-side jsx) 568 569 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 3 part-side jsx) 569 570 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 3 part-side jsx) 570 577 (jsx-depth 3 part-side jsx) 577 578 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "footer" jsx-depth 3 part-side jsx) 578 579 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "footer" jsx-depth 3 part-side jsx) 579 585 (font-lock-face web-mode-html-tag-face tag-type end tag-name "footer" jsx-depth 3 part-side jsx) 585 586 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "footer" jsx-depth 3 part-side jsx) 586 591 (jsx-depth 3 part-side jsx) 591 592 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 3 part-side jsx) 592 593 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 3 part-side jsx) 593 596 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 3 part-side jsx) 596 597 (font-lock-face web-mode-html-tag-bracket-face jsx-end 3 tag-end t tag-type end tag-name "div" jsx-depth 3 part-side jsx) 597 603 (jsx-depth 2 part-side jsx) 603 604 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 604 607 (jsx-depth 1 part-side jsx) 607 613 (jsx-depth 1 part-side jsx) 613 614 (jsx-depth 1 part-side jsx) 614 621 (jsx-depth 1 part-side jsx) 621 629 (jsx-depth 1 part-side jsx) 629 630 (jsx-depth 1 part-side jsx rear-nonsticky nil)) . 149) (undo-tree-id282 . -629) (undo-tree-id283 . -607) (undo-tree-id284 . -607) (nil tag-name "div" 277 . 278) (nil tag-name "div" 278 . 281) (nil tag-name "div" 281 . 282) (nil tag-name "div" 282 . 283) (nil tag-name "div" 283 . 291) (nil tag-name "div" 291 . 292) (nil tag-name "div" 292 . 301) (nil tag-name "div" 301 . 302) (nil tag-name "div" 302 . 303) (nil syntax-table (11) 311 . 312) (nil syntax-table (12) 345 . 346) (nil tag-name "div" 354 . 355) (nil tag-name "div" 355 . 358) (nil tag-name "div" 358 . 359) (nil tag-name "div" 359 . 360) (nil tag-name "div" 360 . 368) (nil tag-name "div" 368 . 369) (nil tag-name "div" 369 . 396) (nil tag-name "div" 396 . 397) (nil tag-name "div" 397 . 398) (nil tag-name "matrixrainingletters" 407 . 408) (nil tag-name "matrixrainingletters" 408 . 428) (nil tag-name "matrixrainingletters" 428 . 429) (nil tag-name "matrixrainingletters" 429 . 430) (nil tag-name "matrixrainingletters" 430 . 441) (nil tag-name "matrixrainingletters" 441 . 442) (nil tag-name "matrixrainingletters" 442 . 469) (nil tag-name "matrixrainingletters" 469 . 470) (nil tag-name "matrixrainingletters" 470 . 471) (nil tag-name "matrixrainingletters" 471 . 472) (nil tag-name "matrixrainingletters" 472 . 473) (nil tag-name "div" 480 . 481) (nil tag-name "div" 481 . 482) (nil tag-name "div" 482 . 485) (nil tag-name "div" 485 . 486) (nil syntax-table (11) 501 . 502) (nil syntax-table (12) 518 . 519) (nil tag-name "main" 527 . 528) (nil tag-name "main" 528 . 532) (nil tag-name "main" 532 . 533) (nil tag-name "main" 533 . 534) (nil tag-name "main" 534 . 542) (nil tag-name "main" 542 . 543) (nil tag-name "main" 543 . 571) (nil tag-name "main" 571 . 572) (nil tag-name "main" 572 . 573) (nil tag-name "main" 599 . 600) (nil tag-name "main" 600 . 601) (nil tag-name "main" 601 . 605) (nil tag-name "main" 605 . 606) (nil syntax-table (11) 621 . 622) (nil syntax-table (12) 632 . 633) (nil tag-name "footer" 641 . 642) (nil tag-name "footer" 642 . 648) (nil tag-name "footer" 648 . 649) (nil syntax-table (11) 659 . 660) (nil syntax-table (12) 678 . 679) (nil tag-name "p" 689 . 690) (nil tag-name "p" 690 . 691) (nil tag-name "p" 691 . 692) (nil tag-name "p" 715 . 716) (nil tag-name "p" 716 . 717) (nil tag-name "p" 717 . 718) (nil tag-name "p" 718 . 719) (nil tag-name "footer" 726 . 727) (nil tag-name "footer" 727 . 728) (nil tag-name "footer" 728 . 734) (nil tag-name "footer" 734 . 735) (nil tag-name "div" 740 . 741) (nil tag-name "div" 741 . 742) (nil tag-name "div" 742 . 745) (nil tag-name "div" 745 . 746) (nil rear-nonsticky t 778 . 779)) (26130 34687 928250 46000) 0 nil])
([nil nil ((521 . 523) (511 . 512) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 511) (496 . 501) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 496) (463 . 465) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 463) (438 . 440) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 438) (424 . 429) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 424) (411 . 416) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 411) (398 . 400) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 398) (375 . 377) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 375) (367 . 368) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 367) (309 . 313) (268 . 269) (#("    " 0 3 (jsx-depth 1 part-side jsx) 3 4 (jsx-depth 1 part-side jsx rear-nonsticky t)) . 268) (undo-tree-id167 . -4) (undo-tree-id169 . -4) (231 . 236) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 231) (216 . 221) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 216) (187 . 189) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 187) (162 . 164) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 162) (148 . 153) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 148) (undo-tree-id171 . 6) (141 . 142) (#("    " 0 3 (part-side jsx) 3 4 (part-side jsx)) . 141) (130 . 132) 288 (t 26130 33882 702961 127000)) ((#("  " 0 2 (part-side jsx)) . 130) (141 . 145) (#("	" 0 1 (part-side jsx)) . 141) (148 . 154) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 148) (162 . 170) (#("		" 0 2 (jsx-depth 1 part-side jsx)) . 162) (187 . 195) (#("		" 0 2 (jsx-depth 1 part-side jsx)) . 187) (216 . 222) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 216) (231 . 237) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 231) (268 . 272) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 268) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 309) (367 . 371) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 367) (375 . 383) (#("		" 0 2 (jsx-depth 1 part-side jsx)) . 375) (398 . 406) (#("		" 0 2 (jsx-depth 1 part-side jsx)) . 398) (411 . 417) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 411) (424 . 430) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 424) (438 . 446) (#("		" 0 2 (jsx-depth 1 part-side jsx)) . 438) (463 . 471) (#("		" 0 2 (jsx-depth 1 part-side jsx)) . 463) (496 . 502) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 496) (511 . 515) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 511) (#("  " 0 2 (part-side jsx)) . 521)) (26130 34654 365085 583000) 0 nil])
([nil nil ((#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx)) . -123) (undo-tree-id4 . -1) 124 (t 26130 33044 888200 696000)) ((123 . 124)) (26130 33098 950725 145000) 0 nil])
([nil nil ((154 . 160)) ((#("h-full" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 154)) (26130 30300 707344 603000) 0 nil])
([nil nil ((#("      " 0 6 (part-side jsx)) . -139) (undo-tree-id559 . -6) (undo-tree-id560 . -6) (undo-tree-id561 . -6) (undo-tree-id562 . -6) 145 (139 . 145) (139 . 140) 147 (t 26130 37877 874680 745000)) nil (26130 38624 941577 480000) 0 nil] [nil nil ((1 . 512) (#("// Layout.js

import { MatrixRainingLetters } from 'react-mdr';
import React from 'react';

const Layout = ({ children }) => {
  return (
    <div>
      <header>
        {/* Header content */}
        <h1>Welcome to My App</h1>
      </header>
      <main className='lg:px-[15%] overflow-auto h-screen'>
        {/* Main content */}
        {children}
      </main>
      <footer>
        {/* Footer content */}
        <p>Copyright Â© 2024 My App</p>
      </footer>
    </div>
  );
};

export default Layout;
" 0 1 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 1 12 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 12 13 (syntax-table (12) part-side jsx) 13 14 (part-side jsx rear-nonsticky t) 14 20 (face web-mode-keyword-face part-side jsx) 20 46 (part-side jsx) 46 50 (face web-mode-keyword-face part-side jsx) 50 51 (part-side jsx) 51 52 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 52 61 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 61 62 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 62 63 (part-side jsx) 63 64 (part-side jsx) 64 70 (face web-mode-keyword-face part-side jsx) 70 71 (part-side jsx) 71 76 (face web-mode-type-face part-side jsx) 76 77 (part-side jsx) 77 81 (face web-mode-keyword-face part-side jsx) 81 82 (part-side jsx) 82 83 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 83 88 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 88 89 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 89 91 (part-side jsx) 91 92 (part-side jsx) 92 97 (face web-mode-keyword-face part-side jsx) 97 98 (part-side jsx) 98 104 (face web-mode-function-name-face part-side jsx) 104 110 (part-side jsx) 110 118 (face web-mode-variable-name-face part-side jsx) 118 127 (part-side jsx) 127 129 (part-side jsx) 129 135 (face web-mode-keyword-face part-side jsx) 135 138 (part-side jsx) 138 141 (part-side jsx) 141 142 (part-side jsx) 142 143 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 143 146 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 146 147 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 147 148 (jsx-depth 1 part-side jsx) 148 154 (jsx-depth 1 part-side jsx) 154 155 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "header" jsx-depth 1 part-side jsx) 155 161 (font-lock-face web-mode-html-tag-face tag-type start tag-name "header" jsx-depth 1 part-side jsx) 161 162 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "header" jsx-depth 1 part-side jsx) 162 163 (jsx-depth 1 part-side jsx) 163 171 (jsx-depth 1 part-side jsx) 171 172 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 172 173 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 173 191 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 191 192 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 192 193 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 193 194 (jsx-depth 1 part-side jsx) 194 202 (jsx-depth 1 part-side jsx) 202 203 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 203 205 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 205 206 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 206 223 (jsx-depth 1 part-side jsx) 223 224 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 224 225 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 225 227 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 227 228 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 228 229 (jsx-depth 1 part-side jsx) 229 235 (jsx-depth 1 part-side jsx) 235 236 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "header" jsx-depth 1 part-side jsx) 236 237 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 237 243 (font-lock-face web-mode-html-tag-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 243 244 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "header" jsx-depth 1 part-side jsx) 244 245 (jsx-depth 1 part-side jsx) 245 251 (jsx-depth 1 part-side jsx) 251 252 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "main" jsx-depth 1 part-side jsx) 252 256 (font-lock-face web-mode-html-tag-face tag-type start tag-name "main" jsx-depth 1 part-side jsx) 256 257 (tag-type start tag-name "main" jsx-depth 1 part-side jsx) 257 258 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 258 266 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 266 267 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 267 268 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 268 270 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 270 293 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 293 302 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 302 303 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 303 304 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "main" jsx-depth 1 part-side jsx) 304 305 (jsx-depth 1 part-side jsx) 305 313 (jsx-depth 1 part-side jsx) 313 314 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 314 315 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 315 331 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 331 332 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 332 333 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 333 334 (jsx-depth 1 part-side jsx) 334 342 (jsx-depth 1 part-side jsx) 342 343 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 343 351 (jsx-depth 2 part-side jsx) 351 352 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 352 353 (jsx-depth 1 part-side jsx) 353 359 (jsx-depth 1 part-side jsx) 359 360 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "main" jsx-depth 1 part-side jsx) 360 361 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 361 365 (font-lock-face web-mode-html-tag-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 365 366 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "main" jsx-depth 1 part-side jsx) 366 367 (jsx-depth 1 part-side jsx) 367 373 (jsx-depth 1 part-side jsx) 373 374 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 374 380 (font-lock-face web-mode-html-tag-face tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 380 381 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 381 382 (jsx-depth 1 part-side jsx) 382 390 (jsx-depth 1 part-side jsx) 390 391 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 391 392 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 392 410 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 410 411 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 411 412 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 412 413 (jsx-depth 1 part-side jsx) 413 421 (jsx-depth 1 part-side jsx) 421 422 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p" jsx-depth 1 part-side jsx) 422 423 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 1 part-side jsx) 423 424 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 1 part-side jsx) 424 447 (jsx-depth 1 part-side jsx) 447 448 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 1 part-side jsx) 448 449 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 449 450 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 450 451 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 1 part-side jsx) 451 452 (jsx-depth 1 part-side jsx) 452 458 (jsx-depth 1 part-side jsx) 458 459 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 459 460 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 460 466 (font-lock-face web-mode-html-tag-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 466 467 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 467 468 (jsx-depth 1 part-side jsx) 468 472 (jsx-depth 1 part-side jsx) 472 473 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 473 474 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 474 477 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 477 478 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx) 478 484 (part-side jsx) 484 487 (part-side jsx) 487 488 (part-side jsx) 488 494 (face web-mode-keyword-face part-side jsx) 494 495 (part-side jsx) 495 502 (face web-mode-keyword-face part-side jsx) 502 511 (part-side jsx)) . 1) (t 26130 37874 321342 467000)) ((1 . 512) (#("// layout.js

import { matrixrainingletters } from 'react-mdr';
import react from 'react';

const layout = ({ children }) => {
  return (
    <div>
      <header>
        {/* header content */}
        <h1>welcome to my app</h1>
      </header>
      <main classname='lg:px-[15%] overflow-auto h-screen'>
        {/* main content */}
        {children}
      </main>
      <footer>
        {/* footer content */}
        <p>copyright Â© 2024 my app</p>
      </footer>
    </div>
  );
};

export default layout;
" 0 1 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 1 12 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 12 13 (syntax-table (12) part-side jsx) 13 14 (part-side jsx rear-nonsticky t) 14 20 (face web-mode-keyword-face part-side jsx) 20 46 (part-side jsx) 46 50 (face web-mode-keyword-face part-side jsx) 50 51 (part-side jsx) 51 52 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 52 61 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 61 62 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 62 63 (part-side jsx) 63 64 (part-side jsx) 64 70 (face web-mode-keyword-face part-side jsx) 70 71 (part-side jsx) 71 76 (face web-mode-type-face part-side jsx) 76 77 (part-side jsx) 77 81 (face web-mode-keyword-face part-side jsx) 81 82 (part-side jsx) 82 83 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 83 88 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 88 89 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 89 91 (part-side jsx) 91 92 (part-side jsx) 92 97 (face web-mode-keyword-face part-side jsx) 97 98 (part-side jsx) 98 104 (face web-mode-function-name-face part-side jsx) 104 110 (part-side jsx) 110 118 (face web-mode-variable-name-face part-side jsx) 118 127 (part-side jsx) 127 129 (part-side jsx) 129 135 (face web-mode-keyword-face part-side jsx) 135 138 (part-side jsx) 138 141 (part-side jsx) 141 142 (part-side jsx) 142 143 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 143 146 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 146 147 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 147 148 (jsx-depth 1 part-side jsx) 148 154 (jsx-depth 1 part-side jsx) 154 155 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "header" jsx-depth 1 part-side jsx) 155 161 (font-lock-face web-mode-html-tag-face tag-type start tag-name "header" jsx-depth 1 part-side jsx) 161 162 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "header" jsx-depth 1 part-side jsx) 162 163 (jsx-depth 1 part-side jsx) 163 171 (jsx-depth 1 part-side jsx) 171 172 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 172 173 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 173 191 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 191 192 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 192 193 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 193 194 (jsx-depth 1 part-side jsx) 194 202 (jsx-depth 1 part-side jsx) 202 203 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 203 205 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 205 206 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 206 223 (jsx-depth 1 part-side jsx) 223 224 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 224 225 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 225 227 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 227 228 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 228 229 (jsx-depth 1 part-side jsx) 229 235 (jsx-depth 1 part-side jsx) 235 236 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "header" jsx-depth 1 part-side jsx) 236 237 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 237 243 (font-lock-face web-mode-html-tag-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 243 244 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "header" jsx-depth 1 part-side jsx) 244 245 (jsx-depth 1 part-side jsx) 245 251 (jsx-depth 1 part-side jsx) 251 252 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "main" jsx-depth 1 part-side jsx) 252 256 (font-lock-face web-mode-html-tag-face tag-type start tag-name "main" jsx-depth 1 part-side jsx) 256 257 (tag-type start tag-name "main" jsx-depth 1 part-side jsx) 257 258 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 258 266 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 266 267 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 267 268 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 268 270 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 270 280 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 280 302 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 302 303 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 303 304 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "main" jsx-depth 1 part-side jsx) 304 305 (jsx-depth 1 part-side jsx) 305 313 (jsx-depth 1 part-side jsx) 313 314 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 314 315 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 315 331 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 331 332 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 332 333 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 333 334 (jsx-depth 1 part-side jsx) 334 342 (jsx-depth 1 part-side jsx) 342 343 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 343 351 (jsx-depth 2 part-side jsx) 351 352 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 352 353 (jsx-depth 1 part-side jsx) 353 359 (jsx-depth 1 part-side jsx) 359 360 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "main" jsx-depth 1 part-side jsx) 360 361 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 361 365 (font-lock-face web-mode-html-tag-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 365 366 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "main" jsx-depth 1 part-side jsx) 366 367 (jsx-depth 1 part-side jsx) 367 373 (jsx-depth 1 part-side jsx) 373 374 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 374 380 (font-lock-face web-mode-html-tag-face tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 380 381 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 381 382 (jsx-depth 1 part-side jsx) 382 390 (jsx-depth 1 part-side jsx) 390 391 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 391 392 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 392 410 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 410 411 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 411 412 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 412 413 (jsx-depth 1 part-side jsx) 413 421 (jsx-depth 1 part-side jsx) 421 422 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p" jsx-depth 1 part-side jsx) 422 423 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 1 part-side jsx) 423 424 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 1 part-side jsx) 424 447 (jsx-depth 1 part-side jsx) 447 448 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 1 part-side jsx) 448 449 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 449 450 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 450 451 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 1 part-side jsx) 451 452 (jsx-depth 1 part-side jsx) 452 458 (jsx-depth 1 part-side jsx) 458 459 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 459 460 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 460 466 (font-lock-face web-mode-html-tag-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 466 467 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 467 468 (jsx-depth 1 part-side jsx) 468 472 (jsx-depth 1 part-side jsx) 472 473 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 473 474 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 474 477 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 477 478 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx) 478 484 (part-side jsx) 484 487 (part-side jsx) 487 488 (part-side jsx) 488 494 (face web-mode-keyword-face part-side jsx) 494 495 (part-side jsx) 495 502 (face web-mode-keyword-face part-side jsx) 502 511 (part-side jsx)) . 1) (undo-tree-id528 . -279) (undo-tree-id529 . -511) (undo-tree-id530 . -279) (undo-tree-id531 . -146) (undo-tree-id532 . 231) (undo-tree-id533 . -268) (undo-tree-id534 . -268) (undo-tree-id535 . 231) (undo-tree-id536 . -279) (undo-tree-id537 . -268) (undo-tree-id538 . -478) (undo-tree-id539 . -146) (undo-tree-id540 . -478) (undo-tree-id541 . -146) (undo-tree-id542 . -147) (undo-tree-id543 . -146) (undo-tree-id544 . -146) (undo-tree-id545 . -280) (undo-tree-id546 . -280) (undo-tree-id547 . -280) (undo-tree-id548 . -280) (undo-tree-id549 . -280) (undo-tree-id550 . -280) (undo-tree-id551 . -280) (undo-tree-id552 . -280) (undo-tree-id553 . -279) (undo-tree-id554 . -279) (undo-tree-id555 . -268) (undo-tree-id556 . -268) (undo-tree-id557 . -268) (undo-tree-id558 . -146) (t 26130 37876 214678 436000)) (26130 37875 197765 948000) 0 nil])
([nil nil ((301 . 305) (#("(" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . -301) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (#("-" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . -302) (undo-tree-id413 . -1) (undo-tree-id414 . -1) 303 (301 . 303) (t 26130 37731 481143 704000)) ((#("(-" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 1 2 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 301) (undo-tree-id415 . -1) (undo-tree-id416 . -2) (301 . 303) (#("-100" 0 4 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 301) (undo-tree-id417 . -3) (undo-tree-id418 . -3) (undo-tree-id419 . -3) (undo-tree-id420 . -3) (undo-tree-id421 . -3) (undo-tree-id422 . -3) (t 26130 37738 801153 890000)) (26130 37738 796621 252000) 0 nil])
([nil nil ((157 . 158)) ((#(":" 0 1 (part-side jsx)) . 157) (undo-tree-id381 . -1) (undo-tree-id382 . -1)) (26130 37324 804400 629000) 0 nil])
([nil nil ((#("    <div>
" 0 3 (part-side jsx) 3 4 (part-side jsx) 4 5 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 5 8 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 9 10 (jsx-depth 1 part-side jsx)) . 139) (undo-tree-id285 . -9) (undo-tree-id286 . -9) (undo-tree-id288 . -10) (undo-tree-id290 . -10) (undo-tree-id292 . -10) (undo-tree-id294 . -10) (undo-tree-id296 . -9) (undo-tree-id298 . -8) (undo-tree-id300 . -8) (undo-tree-id301 . -8) (undo-tree-id303 . -10) 147) ((139 . 149)) (26130 34729 639149 32000) 0 nil])
nil
([nil nil ((#("lg:px-[15%]" 0 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 2 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 253) (undo-tree-id172 . -10) (undo-tree-id174 . -11) (t 26130 33886 979630 893000)) ((253 . 264)) (26130 34654 192945 885000) 0 nil])
([nil nil ((123 . 130) (t 26130 33047 761539 291000)) ((#("red-500" 0 7 (tag-type start tag-name "div" jsx-depth 1 part-side jsx)) . 123) (undo-tree-id54 . -7) (undo-tree-id55 . -7)) (26130 33098 654653 134000) 0 nil])
([nil nil ((225 . 229) (t 26130 29222 295198 495000)) ((#("    " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 1 4 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 225) (undo-tree-id694 . -1) (undo-tree-id695 . -1)) (26130 30300 540354 319000) 0 nil])
([nil nil ((#("lg:px-[15%]" 0 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 2 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 270) (undo-tree-id966 . -10) (undo-tree-id967 . -10) (undo-tree-id968 . -10) (undo-tree-id969 . -10) (undo-tree-id970 . -10) (undo-tree-id971 . -11) (undo-tree-id972 . -11) 280 (t 26130 38625 958747 715000)) nil (26130 38916 486761 814000) 0 nil] [nil nil ((nil rear-nonsticky nil 341 . 342) (nil part-side jsx 341 . 342) (nil jsx-depth 1 341 . 342) (nil tag-name "div" 341 . 342) (nil tag-type end 341 . 342) (nil tag-end t 341 . 342) (nil font-lock-face web-mode-html-tag-bracket-face 341 . 342) (nil part-side jsx 338 . 341) (nil jsx-depth 1 338 . 341) (nil tag-name "div" 338 . 341) (nil tag-type end 338 . 341) (nil font-lock-face web-mode-html-tag-face 338 . 341) (nil part-side jsx 337 . 338) (nil jsx-depth 1 337 . 338) (nil tag-name "div" 337 . 338) (nil tag-type end 337 . 338) (nil font-lock-face web-mode-html-tag-bracket-face 337 . 338) (nil part-side jsx 336 . 337) (nil jsx-depth 1 336 . 337) (nil tag-name "div" 336 . 337) (nil tag-type end 336 . 337) (nil tag-beg 20 336 . 337) (nil font-lock-face web-mode-html-tag-bracket-face 336 . 337) (nil part-side jsx 329 . 336) (nil jsx-depth 1 329 . 336) (nil part-side jsx 328 . 329) (nil jsx-depth 1 328 . 329) (nil tag-name "matrixrainingletters" 328 . 329) (nil tag-type void 328 . 329) (nil tag-end t 328 . 329) (nil font-lock-face web-mode-html-tag-bracket-face 328 . 329) (nil part-side jsx 327 . 328) (nil jsx-depth 1 327 . 328) (nil tag-name "matrixrainingletters" 327 . 328) (nil tag-type void 327 . 328) (nil font-lock-face web-mode-html-tag-bracket-face 327 . 328) (nil part-side jsx 326 . 327) (nil jsx-depth 1 326 . 327) (nil tag-name "matrixrainingletters" 326 . 327) (nil tag-type void 326 . 327) (nil part-side jsx 325 . 326) (nil jsx-depth 1 325 . 326) (nil tag-attr t 325 . 326) (nil tag-attr-end 12 325 . 326) (nil tag-name "matrixrainingletters" 325 . 326) (nil tag-type void 325 . 326) (nil font-lock-face web-mode-html-attr-value-face 325 . 326) (nil part-side jsx 304 . 325) (nil jsx-depth 1 304 . 325) (nil tag-attr t 304 . 325) (nil tag-name "matrixrainingletters" 304 . 325) (nil tag-type void 304 . 325) (nil font-lock-face web-mode-html-attr-value-face 304 . 325) (nil part-side jsx 303 . 304) (nil jsx-depth 1 303 . 304) (nil tag-attr t 303 . 304) (nil tag-name "matrixrainingletters" 303 . 304) (nil tag-type void 303 . 304) (nil font-lock-face web-mode-html-attr-equal-face 303 . 304) (nil part-side jsx 292 . 303) (nil jsx-depth 1 292 . 303) (nil tag-attr t 292 . 303) (nil tag-name "matrixrainingletters" 292 . 303) (nil tag-type void 292 . 303) (nil font-lock-face web-mode-html-attr-name-face 292 . 303) (nil part-side jsx 291 . 292) (nil jsx-depth 1 291 . 292) (nil tag-attr-beg 0 291 . 292) (nil tag-attr t 291 . 292) (nil tag-name "matrixrainingletters" 291 . 292) (nil tag-type void 291 . 292) (nil font-lock-face web-mode-html-attr-name-face 291 . 292) (nil part-side jsx 290 . 291) (nil jsx-depth 1 290 . 291) (nil tag-name "matrixrainingletters" 290 . 291) (nil tag-type void 290 . 291) (nil part-side jsx 270 . 290) (nil jsx-depth 1 270 . 290) (nil tag-name "matrixrainingletters" 270 . 290) (nil tag-type void 270 . 290) (nil font-lock-face web-mode-html-tag-face 270 . 290) (nil part-side jsx 269 . 270) (nil jsx-depth 1 269 . 270) (nil tag-name "matrixrainingletters" 269 . 270) (nil tag-type void 269 . 270) (nil tag-beg 25 269 . 270) (nil font-lock-face web-mode-html-tag-bracket-face 269 . 270) (nil part-side jsx 260 . 269) (nil jsx-depth 1 260 . 269) (nil part-side jsx 259 . 260) (nil jsx-depth 1 259 . 260) (nil tag-name "div" 259 . 260) (nil tag-type start 259 . 260) (nil tag-end t 259 . 260) (nil font-lock-face web-mode-html-tag-bracket-face 259 . 260) (nil part-side jsx 258 . 259) (nil jsx-depth 1 258 . 259) (nil tag-attr t 258 . 259) (nil tag-attr-end 9 258 . 259) (nil tag-name "div" 258 . 259) (nil tag-type start 258 . 259) (nil font-lock-face web-mode-html-attr-value-face 258 . 259) (nil part-side jsx 237 . 258) (nil jsx-depth 1 237 . 258) (nil tag-attr t 237 . 258) (nil tag-name "div" 237 . 258) (nil tag-type start 237 . 258) (nil font-lock-face web-mode-html-attr-value-face 237 . 258) (nil part-side jsx 236 . 237) (nil jsx-depth 1 236 . 237) (nil tag-attr t 236 . 237) (nil tag-name "div" 236 . 237) (nil tag-type start 236 . 237) (nil font-lock-face web-mode-html-attr-equal-face 236 . 237) (nil part-side jsx 228 . 236) (nil jsx-depth 1 228 . 236) (nil tag-attr t 228 . 236) (nil tag-name "div" 228 . 236) (nil tag-type start 228 . 236) (nil font-lock-face web-mode-html-attr-name-face 228 . 236) (nil part-side jsx 227 . 228) (nil jsx-depth 1 227 . 228) (nil tag-attr-beg 0 227 . 228) (nil tag-attr t 227 . 228) (nil tag-name "div" 227 . 228) (nil tag-type start 227 . 228) (nil font-lock-face web-mode-html-attr-name-face 227 . 228) (nil part-side jsx 226 . 227) (nil jsx-depth 1 226 . 227) (nil tag-name "div" 226 . 227) (nil tag-type start 226 . 227) (nil part-side jsx 223 . 226) (nil jsx-depth 1 223 . 226) (nil tag-name "div" 223 . 226) (nil tag-type start 223 . 226) (nil font-lock-face web-mode-html-tag-face 223 . 226) (nil part-side jsx 222 . 223) (nil jsx-depth 1 222 . 223) (nil tag-name "div" 222 . 223) (nil tag-type start 222 . 223) (nil tag-beg 17 222 . 223) (nil font-lock-face web-mode-html-tag-bracket-face 222 . 223) (nil part-side jsx 215 . 222) (nil jsx-depth 1 215 . 222) (nil part-side jsx 214 . 215) (nil jsx-depth 2 214 . 215) (nil jsx-end 2 214 . 215) (nil font-lock-face web-mode-block-delimiter-face 214 . 215) (nil part-side jsx 213 . 214) (nil jsx-depth 2 213 . 214) (nil part-token comment 213 . 214) (nil syntax-table (12) 213 . 214) (nil font-lock-face web-mode-javascript-comment-face 213 . 214) (nil part-side jsx 200 . 213) (nil jsx-depth 2 200 . 213) (nil part-token comment 200 . 213) (nil font-lock-face web-mode-javascript-comment-face 200 . 213) (nil part-side jsx 198 . 200) (nil jsx-depth 2 198 . 200) (nil part-token comment 198 . 200) (nil font-lock-face web-mode-javascript-comment-face 198 . 200) (nil part-side jsx 175 . 198) (nil jsx-depth 2 175 . 198) (nil part-token comment 175 . 198) (nil font-lock-face web-mode-javascript-comment-face 175 . 198) (nil part-side jsx 174 . 175) (nil jsx-depth 2 174 . 175) (nil part-token comment 174 . 175) (nil syntax-table (11) 174 . 175) (nil font-lock-face web-mode-javascript-comment-face 174 . 175) (nil part-side jsx 173 . 174) (nil jsx-depth 2 173 . 174) (nil jsx-beg 2 173 . 174) (nil font-lock-face web-mode-block-delimiter-face 173 . 174) (nil part-side jsx 166 . 173) (nil jsx-depth 1 166 . 173) (nil part-side jsx 165 . 166) (nil jsx-depth 1 165 . 166) (nil tag-name "div" 165 . 166) (nil tag-type start 165 . 166) (nil tag-end t 165 . 166) (nil font-lock-face web-mode-html-tag-bracket-face 165 . 166) (nil part-side jsx 164 . 165) (nil jsx-depth 1 164 . 165) (nil tag-attr t 164 . 165) (nil tag-attr-end 9 164 . 165) (nil tag-name "div" 164 . 165) (nil tag-type start 164 . 165) (nil font-lock-face web-mode-html-attr-value-face 164 . 165) (nil part-side jsx 155 . 164) (nil jsx-depth 1 155 . 164) (nil tag-attr t 155 . 164) (nil tag-name "div" 155 . 164) (nil tag-type start 155 . 164) (nil font-lock-face web-mode-html-attr-value-face 155 . 164) (nil part-side jsx 154 . 155) (nil jsx-depth 1 154 . 155) (nil tag-attr t 154 . 155) (nil tag-name "div" 154 . 155) (nil tag-type start 154 . 155) (nil font-lock-face web-mode-html-attr-equal-face 154 . 155) (nil part-side jsx 146 . 154) (nil jsx-depth 1 146 . 154) (nil tag-attr t 146 . 154) (nil tag-name "div" 146 . 154) (nil tag-type start 146 . 154) (nil font-lock-face web-mode-html-attr-name-face 146 . 154) (nil part-side jsx 145 . 146) (nil jsx-depth 1 145 . 146) (nil tag-attr-beg 0 145 . 146) (nil tag-attr t 145 . 146) (nil tag-name "div" 145 . 146) (nil tag-type start 145 . 146) (nil font-lock-face web-mode-html-attr-name-face 145 . 146) (nil part-side jsx 144 . 145) (nil jsx-depth 1 144 . 145) (nil tag-name "div" 144 . 145) (nil tag-type start 144 . 145) (nil part-side jsx 141 . 144) (nil jsx-depth 1 141 . 144) (nil tag-name "div" 141 . 144) (nil tag-type start 141 . 144) (nil font-lock-face web-mode-html-tag-face 141 . 144) (nil part-side jsx 140 . 141) (nil jsx-beg 1 140 . 141) (nil jsx-depth 1 140 . 141) (nil tag-name "div" 140 . 141) (nil tag-type start 140 . 141) (nil tag-beg 17 140 . 141) (nil font-lock-face web-mode-html-tag-bracket-face 140 . 141) (nil part-side jsx 139 . 140) (139 . 342) (t 26130 37912 74728 336000)) ((#(" <div className=\"relative\">
      {/* MatrixRainingLetters as background */}
      <div className=\"absolute inset-0 z-0\">
        <MatrixRainingLetters custom_class=\"absolute inset-0 z-0\" />
      </div>" 0 1 (part-side jsx) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 2 5 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 5 6 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 7 15 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 15 16 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 25 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 25 26 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 26 27 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 27 28 (jsx-depth 1 part-side jsx) 28 34 (jsx-depth 1 part-side jsx) 34 35 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 35 36 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 36 59 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 59 61 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 61 74 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 74 75 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 75 76 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 76 77 (jsx-depth 1 part-side jsx) 77 83 (jsx-depth 1 part-side jsx) 83 84 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 84 87 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 87 88 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 88 89 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 89 97 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 97 98 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 98 119 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 119 120 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 120 121 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 121 122 (jsx-depth 1 part-side jsx) 122 130 (jsx-depth 1 part-side jsx) 130 131 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 131 151 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 151 152 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 152 153 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 153 164 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 164 165 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 165 186 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 186 187 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 187 188 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 188 189 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 189 190 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 190 191 (jsx-depth 1 part-side jsx) 191 197 (jsx-depth 1 part-side jsx) 197 198 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 198 199 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 199 202 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 202 203 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx rear-nonsticky nil)) . 139) (undo-tree-id959 . -203) (undo-tree-id960 . -203) (undo-tree-id961 . -202) (undo-tree-id962 . -202) (undo-tree-id963 . -202) (nil tag-name "div" 140 . 141) (nil tag-name "div" 141 . 144) (nil tag-name "div" 144 . 145) (nil tag-name "div" 145 . 146) (nil tag-name "div" 146 . 154) (nil tag-name "div" 154 . 155) (nil tag-name "div" 155 . 164) (nil tag-name "div" 164 . 165) (nil tag-name "div" 165 . 166) (nil syntax-table (11) 174 . 175) (nil syntax-table (12) 213 . 214) (nil tag-name "div" 222 . 223) (nil tag-name "div" 223 . 226) (nil tag-name "div" 226 . 227) (nil tag-name "div" 227 . 228) (nil tag-name "div" 228 . 236) (nil tag-name "div" 236 . 237) (nil tag-name "div" 237 . 258) (nil tag-name "div" 258 . 259) (nil tag-name "div" 259 . 260) (nil tag-name "matrixrainingletters" 269 . 270) (nil tag-name "matrixrainingletters" 270 . 290) (nil tag-name "matrixrainingletters" 290 . 291) (nil tag-name "matrixrainingletters" 291 . 292) (nil tag-name "matrixrainingletters" 292 . 303) (nil tag-name "matrixrainingletters" 303 . 304) (nil tag-name "matrixrainingletters" 304 . 325) (nil tag-name "matrixrainingletters" 325 . 326) (nil tag-name "matrixrainingletters" 326 . 327) (nil tag-name "matrixrainingletters" 327 . 328) (nil tag-name "matrixrainingletters" 328 . 329) (nil tag-name "div" 336 . 337) (nil tag-name "div" 337 . 338) (nil tag-name "div" 338 . 341) (nil tag-name "div" 341 . 342) (nil rear-nonsticky t 341 . 342)) (26130 38624 312735 982000) 0 nil] [nil nil ((nil rear-nonsticky nil 150 . 151) (nil part-side jsx 141 . 151) (nil part-side jsx 139 . 141) (nil face web-mode-variable-name-face 139 . 141) (139 . 151)) ((#("lg:px-[15%] " 0 2 (face web-mode-variable-name-face part-side jsx) 2 11 (part-side jsx) 11 12 (part-side jsx rear-nonsticky nil)) . 139) (undo-tree-id563 . -11) (undo-tree-id564 . -11) (undo-tree-id565 . -11) (nil rear-nonsticky t 150 . 151)) (26130 37911 51653 232000) 0 nil])
([nil nil ((#("lg:px-[15%] " 0 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 2 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 269) (undo-tree-id442 . -11) (undo-tree-id443 . -11) (undo-tree-id444 . -11) (undo-tree-id445 . -12) (undo-tree-id446 . -12) (undo-tree-id447 . -12) (undo-tree-id448 . -12) (undo-tree-id449 . -12) (undo-tree-id450 . -12) (undo-tree-id451 . -12) (undo-tree-id452 . -12) (undo-tree-id453 . -11) (undo-tree-id454 . -11) (undo-tree-id455 . -12) (undo-tree-id456 . -12) (t 26130 37846 851304 253000)) ((269 . 281) (t 26130 37860 647990 113000)) (26130 37860 640797 181000) 0 nil] [nil nil ((281 . 289) (t 26130 37798 274569 981000)) ((#("relative" 0 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 281) (undo-tree-id436 . -8) (undo-tree-id437 . -8) (undo-tree-id438 . -8) (undo-tree-id439 . -8) (undo-tree-id440 . -8) (undo-tree-id441 . -8)) (26130 37845 507201 455000) 0 nil])
nil
([nil nil ((#(":" 0 1 (part-side jsx)) . -157) (undo-tree-id340 . -1) 158) ((157 . 158)) (26130 37324 560457 455000) 0 nil])
([nil nil ((608 . 610) (598 . 599) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 598) (583 . 588) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 583) (550 . 552) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 550) (525 . 527) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 525) (511 . 516) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 511) (498 . 503) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 498) (485 . 487) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 485) (462 . 464) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 462) (426 . 431) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 426) (411 . 416) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 411) (382 . 384) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 382) (357 . 359) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 357) (343 . 348) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 343) (331 . 336) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 331) (262 . 264) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 262) (212 . 217) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 212) (169 . 174) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 169) (141 . 142) (#("  " 0 2 (part-side jsx)) . 141) (130 . 132) 147) ((#("  " 0 2 (part-side jsx)) . 130) (141 . 143) (#("	" 0 1 (part-side jsx)) . 141) (169 . 175) (#("	    " 0 5 (part-side jsx)) . 169) (212 . 218) (#("	    " 0 5 (part-side jsx)) . 212) (262 . 270) (#("		" 0 2 (part-side jsx)) . 262) (331 . 337) (#("	    " 0 5 (part-side jsx)) . 331) (343 . 349) (#("	    " 0 5 (part-side jsx)) . 343) (357 . 365) (#("		" 0 2 (part-side jsx)) . 357) (382 . 390) (#("		" 0 2 (part-side jsx)) . 382) (411 . 417) (#("	    " 0 5 (part-side jsx)) . 411) (426 . 432) (#("	    " 0 5 (part-side jsx)) . 426) (462 . 470) (#("		" 0 2 (part-side jsx)) . 462) (485 . 493) (#("		" 0 2 (part-side jsx)) . 485) (498 . 504) (#("	    " 0 5 (part-side jsx)) . 498) (511 . 517) (#("	    " 0 5 (part-side jsx)) . 511) (525 . 533) (#("		" 0 2 (part-side jsx)) . 525) (550 . 558) (#("		" 0 2 (part-side jsx)) . 550) (583 . 589) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 583) (598 . 602) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 598) (#("  " 0 2 (part-side jsx)) . 608)) (26130 34728 776698 396000) 0 nil])
([nil nil ((253 . 265) (t 26130 33913 169649 868000)) ((#(" absolute zÂ°" 0 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 253) (undo-tree-id274 . -12) (undo-tree-id275 . -12)) (26130 34654 25189 622000) 0 nil])
([nil nil ((130 . 131) (t 26130 33050 518211 6000)) ((#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx)) . 130)) (26130 33098 325215 294000) 0 nil])
([nil nil ((nil rear-nonsticky nil 251 . 252) (nil part-side jsx 251 . 252) (nil jsx-depth 2 251 . 252) (nil tag-attr t 251 . 252) (nil tag-name "matrixrainingletters" 251 . 252) (nil tag-type void 251 . 252) (nil jsx-end 2 251 . 252) (nil font-lock-face web-mode-block-delimiter-face 251 . 252) (nil part-side jsx 249 . 251) (nil jsx-depth 2 249 . 251) (nil tag-attr t 249 . 251) (nil tag-name "matrixrainingletters" 249 . 251) (nil tag-type void 249 . 251) (nil part-side jsx 248 . 249) (nil jsx-depth 2 248 . 249) (nil tag-attr t 248 . 249) (nil tag-name "matrixrainingletters" 248 . 249) (nil tag-type void 248 . 249) (nil part-token string 248 . 249) (nil syntax-table (15) 248 . 249) (nil font-lock-face web-mode-javascript-string-face 248 . 249) (nil part-side jsx 244 . 248) (nil jsx-depth 2 244 . 248) (nil tag-attr t 244 . 248) (nil tag-name "matrixrainingletters" 244 . 248) (nil tag-type void 244 . 248) (nil part-token string 244 . 248) (nil font-lock-face web-mode-javascript-string-face 244 . 248) (nil part-side jsx 243 . 244) (nil jsx-depth 2 243 . 244) (nil tag-attr t 243 . 244) (nil tag-name "matrixrainingletters" 243 . 244) (nil tag-type void 243 . 244) (nil part-token string 243 . 244) (nil syntax-table (15) 243 . 244) (nil font-lock-face web-mode-javascript-string-face 243 . 244) (nil part-side jsx 241 . 243) (nil jsx-depth 2 241 . 243) (nil tag-attr t 241 . 243) (nil tag-name "matrixrainingletters" 241 . 243) (nil tag-type void 241 . 243) (nil part-side jsx 235 . 241) (nil jsx-depth 2 235 . 241) (nil tag-attr t 235 . 241) (nil tag-name "matrixrainingletters" 235 . 241) (nil tag-type void 235 . 241) (nil face web-mode-variable-name-face 235 . 241) (nil part-side jsx 233 . 235) (nil jsx-depth 2 233 . 235) (nil tag-attr t 233 . 235) (nil tag-name "matrixrainingletters" 233 . 235) (nil tag-type void 233 . 235) (nil part-side jsx 232 . 233) (nil jsx-depth 2 232 . 233) (nil tag-attr t 232 . 233) (nil tag-name "matrixrainingletters" 232 . 233) (nil tag-type void 232 . 233) (nil jsx-beg 2 232 . 233) (nil font-lock-face web-mode-block-delimiter-face 232 . 233) (nil part-side jsx 226 . 232) (nil jsx-depth 1 226 . 232) (nil tag-attr t 226 . 232) (nil tag-name "matrixrainingletters" 226 . 232) (nil tag-type void 226 . 232) (nil font-lock-face web-mode-html-attr-value-face 226 . 232) (226 . 252)) ((#("style={{ height: '100%' }}" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 7 9 (tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 9 15 (face web-mode-variable-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 15 17 (tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 17 18 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 18 22 (font-lock-face web-mode-javascript-string-face part-token string tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 22 23 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 23 25 (tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 25 26 (font-lock-face web-mode-block-delimiter-face jsx-end 2 tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx rear-nonsticky nil)) . 226) (nil tag-name "matrixrainingletters" 226 . 232) (nil tag-name "matrixrainingletters" 232 . 233) (nil tag-name "matrixrainingletters" 233 . 235) (nil tag-name "matrixrainingletters" 235 . 241) (nil tag-name "matrixrainingletters" 241 . 243) (nil syntax-table (15) 243 . 244) (nil tag-name "matrixrainingletters" 243 . 244) (nil tag-name "matrixrainingletters" 244 . 248) (nil syntax-table (15) 248 . 249) (nil tag-name "matrixrainingletters" 248 . 249) (nil tag-name "matrixrainingletters" 249 . 251) (nil tag-name "matrixrainingletters" 251 . 252) (nil rear-nonsticky t 251 . 252)) (26130 30300 330191 539000) 0 nil])
([nil nil ((270 . 271)) nil (26130 38916 486758 614000) 0 nil])
([nil nil ((342 . 349) (t 26130 37913 548063 724000) 341) ((#("
      " 0 1 (jsx-depth 1 part-side jsx) 1 7 (jsx-depth 1 part-side jsx)) . 342) (undo-tree-id955 . -6) (undo-tree-id956 . -6) (undo-tree-id957 . -6) (undo-tree-id958 . -6) (t 26130 38623 662078 852000)) (26130 38622 580305 691000) 0 nil])
nil
nil
([nil nil ((289 . 295) (t 26130 37830 234614 459000)) ((#(" z-10 " 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 289) (undo-tree-id431 . -5) (undo-tree-id432 . -5) (undo-tree-id433 . -5) (undo-tree-id434 . -5) (undo-tree-id435 . -5) (t 26130 37834 527953 764000)) (26130 37834 517382 401000) 0 nil])
([nil nil ((157 . 159)) ((#("='" 0 1 (part-side jsx) 1 2 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx)) . 157) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -2) (undo-tree-id379 . -1) (undo-tree-id380 . -2)) (26130 37324 256330 268000) 0 nil])
([nil nil ((141 . 142) (141 . 142) 148 (t 26130 34693 690215 324000)) ((#("
" 0 1 (part-side jsx)) . 141) (#("	" 0 1 (part-side jsx)) . 141)) (26130 34728 484762 879000) 0 nil])
([nil nil ((#("Â°" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -264) (undo-tree-id176 . -1) 265) ((264 . 265)) (26130 34653 825756 800000) 0 nil])
([nil nil ((159 . 164) (#("\"" 0 1 (tag-type start tag-name "div" jsx-depth 1 part-side jsx)) . 160) (159 . 160) (147 . 160) (t 26130 33052 731548 392000)) ((#(" className=\"\"" 0 1 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 12 13 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx)) . 147) (undo-tree-id40 . -12) (undo-tree-id41 . -12) (undo-tree-id42 . -12) (undo-tree-id43 . -12) (undo-tree-id44 . -12) (undo-tree-id45 . -12) (undo-tree-id46 . -12) (#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx)) . 159) (160 . 161) (#("relai" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 159) (undo-tree-id47 . -4) (undo-tree-id48 . -4) (undo-tree-id49 . -4) (undo-tree-id50 . -4) (undo-tree-id51 . -5) (undo-tree-id52 . -4) (undo-tree-id53 . -5)) (26130 33098 50776 2000) 0 nil])
([nil nil ((#("i" 0 1 (face web-mode-keyword-face part-side jsx)) . 1) (t 26130 29254 995214 212000)) ((1 . 2)) (26130 30300 86503 388000) 0 nil])
([nil nil ((#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -270) (undo-tree-id964 . -1) (undo-tree-id965 . -1) 271) nil (26130 38916 486758 24000) 0 nil])
([nil nil ((#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 336) (651 . 653) (637 . 642) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 637) (625 . 627) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 625) (588 . 594) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 588) (559 . 565) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 559) (548 . 550) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 548) (538 . 540) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 538) (521 . 527) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 521) (494 . 500) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 494) (438 . 440) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 438) (426 . 428) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 426) (393 . 399) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 393) (364 . 370) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 364) (353 . 355) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 353) (342 . 347) (#("    " 0 3 (jsx-depth 1 part-side jsx) 3 4 (jsx-depth 1 part-side jsx)) . 342) (336 . 341) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 336) (undo-tree-id567 . -6) (undo-tree-id569 . -6) (324 . 329) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 324) (261 . 263) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 261) (217 . 222) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 217) (169 . 174) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 169) (141 . 142) (#(" " 0 1 (part-side jsx)) . 141) (130 . 132) 349) ((#("  " 0 2 (part-side jsx)) . 130) (141 . 142) (#("	" 0 1 (part-side jsx)) . 141) (169 . 175) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 169) (217 . 223) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 217) (261 . 269) (#("		" 0 2 (jsx-depth 1 part-side jsx)) . 261) (324 . 330) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 324) (336 . 342) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 336) (342 . 346) (#("	    " 0 1 (jsx-depth 1 part-side jsx) 1 5 (jsx-depth 1 part-side jsx)) . 342) (353 . 359) (#("		" 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx)) . 353) (364 . 372) (#("		    " 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx) 2 6 (jsx-depth 1 part-side jsx)) . 364) (393 . 401) (#("		    " 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx) 2 6 (jsx-depth 1 part-side jsx)) . 393) (426 . 432) (#("		" 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx)) . 426) (438 . 444) (#("		" 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx)) . 438) (494 . 502) (#("		    " 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx) 2 6 (jsx-depth 1 part-side jsx)) . 494) (521 . 529) (#("		    " 0 2 (jsx-depth 1 part-side jsx) 2 6 (jsx-depth 1 part-side jsx)) . 521) (538 . 544) (#("		" 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx)) . 538) (548 . 554) (#("		" 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx)) . 548) (559 . 567) (#("		    " 0 2 (jsx-depth 1 part-side jsx) 2 6 (jsx-depth 1 part-side jsx)) . 559) (588 . 596) (#("		    " 0 2 (jsx-depth 1 part-side jsx) 2 6 (jsx-depth 1 part-side jsx)) . 588) (625 . 631) (#("		" 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx)) . 625) (637 . 641) (#("	    " 0 1 (jsx-depth 1 part-side jsx) 1 5 (jsx-depth 1 part-side jsx)) . 637) (#("  " 0 2 (part-side jsx)) . 651) (336 . 341) (t 26130 38621 652076 925000)) (26130 38620 636909 202000) 0 nil])
nil
([nil nil ((#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx)) . -158) (undo-tree-id338 . -1) 159) ((158 . 159)) (26130 37323 972396 475000) 0 nil])
([nil nil ((142 . 145)) ((#("div" 0 3 (part-side jsx)) . 142) (undo-tree-id334 . -2) (undo-tree-id335 . -2)) (26130 34728 196599 688000) 0 nil])
([nil nil ((264 . 265) (t 26130 34030 136401 262000)) ((#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 264) (undo-tree-id272 . -1) (undo-tree-id273 . -1)) (26130 34653 482049 183000) 0 nil])
([nil nil ((#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -163) (undo-tree-id6 . -1) 164) ((163 . 164)) (26130 33097 763966 27000) 0 nil])
([nil nil ((1 . 2) (t 26130 29289 968564 344000)) ((#("d" 0 1 (part-side jsx)) . 1)) (26130 30299 798224 22000) 0 nil])
([nil nil ((270 . 271)) nil (26130 38916 486748 784000) 0 nil])
([nil nil ((#("	<div className=\"relative\">
	    {/* MatrixRainingLetters as background */}
	    <div className=\"absolute inset-0 z-0\">
		<MatrixRainingLetters custom_class=\"absolute inset-0 z-0\" />
	    </div>

" 0 1 (part-side jsx) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 2 5 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 5 6 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 7 15 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 15 16 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 25 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 25 26 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 26 27 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 27 33 (jsx-depth 1 part-side jsx) 33 34 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 34 35 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 35 58 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 58 60 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 60 73 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 73 74 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 74 75 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 75 81 (jsx-depth 1 part-side jsx) 81 82 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 82 85 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 85 86 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 86 87 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 87 95 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 95 96 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 96 117 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 117 118 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 118 119 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 119 122 (jsx-depth 1 part-side jsx) 122 123 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 123 143 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 143 144 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 144 145 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 145 156 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 156 157 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 157 178 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 178 179 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 179 180 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 180 181 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 181 182 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 182 188 (jsx-depth 1 part-side jsx) 188 189 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 189 190 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 190 193 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 193 194 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx rear-nonsticky t) 194 195 (jsx-depth 1 part-side jsx) 195 196 (jsx-depth 1 part-side jsx)) . 141) (undo-tree-id607 . -195) (undo-tree-id608 . -195) (undo-tree-id609 . -195) (undo-tree-id611 . -10) (undo-tree-id613 . -195)) ((141 . 337)) (26130 38620 404501 65000) 0 nil] [nil nil ((#("	    <div>
" 0 5 (jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 9 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 10 11 (jsx-depth 1 part-side jsx)) . 337) (undo-tree-id571 . -10) (undo-tree-id572 . -10) (t 26130 37917 741402 868000)) ((337 . 348)) (26130 37967 433761 425000) 0 nil])
([nil nil ((158 . 173)) ((#("\"overflow-auto\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 1 14 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 14 15 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx)) . 158) (undo-tree-id354 . 1) (undo-tree-id355 . -14) (undo-tree-id356 . -14) (undo-tree-id357 . -14) (undo-tree-id358 . -14) (undo-tree-id359 . -14) (undo-tree-id360 . -14) (undo-tree-id361 . -14) (undo-tree-id362 . -14) (undo-tree-id363 . -14) (undo-tree-id364 . -14) (undo-tree-id365 . -14) (undo-tree-id366 . -14) (undo-tree-id367 . -14)) (26130 37323 668531 47000) 0 nil])
([nil nil ((142 . 153) (#("div" 0 3 (part-side jsx)) . -142) (undo-tree-id306 . -3) (undo-tree-id308 . -3) 145) ((142 . 145) (#("<div></div>" 0 1 (part-side jsx) 1 4 (part-side jsx) 4 5 (part-side jsx) 5 6 (part-side jsx) 6 7 (part-side jsx) 7 8 (part-side jsx) 8 9 (part-side jsx) 9 10 (part-side jsx) 10 11 (part-side jsx)) . 142) (undo-tree-id332 . -5) (undo-tree-id333 . -5)) (26130 34727 932579 437000) 0 nil])
([nil nil ((264 . 266) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -264) (undo-tree-id193 . -1) (undo-tree-id195 . -1) 265 (t 26130 34031 443068 875000)) ((264 . 265) (#("-0" 0 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 264)) (26130 34652 661310 322000) 0 nil])
([nil nil ((168 . 169) (#("\"" 0 1 (tag-type start tag-name "div" jsx-depth 1 part-side jsx)) . 168) (163 . 168)) ((#("tive\"" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx)) . 163) (undo-tree-id30 . -5) (undo-tree-id31 . -5) (undo-tree-id32 . -4) (undo-tree-id33 . -4) (undo-tree-id34 . -5) (undo-tree-id35 . -5) (undo-tree-id36 . -5) (168 . 169) (#(" " 0 1 (tag-type start tag-name "div" jsx-depth 1 part-side jsx)) . 168) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1)) (26130 33097 487639 319000) 0 nil])
([nil nil ((#("d" 0 1 (part-side jsx)) . 1) (undo-tree-id273 . -1)) ((1 . 2) (t 26130 30298 572327 886000)) (26130 30297 563360 167000) 0 nil])
([nil nil ((#("w" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -270) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) 271 (t 26130 38916 495692 603000)) nil (26130 38920 723739 839000) 0 nil])
([nil nil ((290 . 294) (t 26130 38096 241573 810000)) ((#(" bg-" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 290) (undo-tree-id949 . -4) (undo-tree-id950 . -4) (undo-tree-id951 . -4) (undo-tree-id952 . -4) (undo-tree-id953 . -4) (undo-tree-id954 . -4)) (26130 38620 178898 340000) 0 nil] [nil nil ((nil rear-nonsticky nil 293 . 294) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -488) (292 . 489) 237 (t 26130 37971 271454 121000)) ((#("
	<div className=\"relative\">
	    {/* MatrixRainingLetters as background */}
	    <div className=\"absolute inset-0 z-0\">
		<MatrixRainingLetters custom_class=\"absolute inset-0 z-0\" />
	    </div>

" 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx rear-nonsticky nil) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 8 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 26 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 26 27 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 27 28 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 28 29 (jsx-depth 1 part-side jsx) 29 30 (jsx-depth 1 part-side jsx) 30 34 (jsx-depth 1 part-side jsx) 34 35 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 35 36 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 36 59 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 59 61 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 61 74 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 74 75 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 75 76 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 76 78 (jsx-depth 1 part-side jsx) 78 82 (jsx-depth 1 part-side jsx) 82 83 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 83 86 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 86 87 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 87 88 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 88 96 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 96 97 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 97 118 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 118 119 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 119 120 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 120 123 (jsx-depth 1 part-side jsx) 123 124 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 124 144 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 144 145 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 145 146 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 146 157 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 157 158 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 158 179 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 179 180 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 180 181 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 181 182 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 182 183 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 183 185 (jsx-depth 1 part-side jsx) 185 189 (jsx-depth 1 part-side jsx) 189 190 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 190 191 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 191 194 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 194 195 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 195 196 (jsx-depth 1 part-side jsx) 196 197 (jsx-depth 1 part-side jsx)) . 292) (undo-tree-id683 . -195) (undo-tree-id684 . -195) (undo-tree-id685 . -1) (undo-tree-id686 . -195) (undo-tree-id687 . -7) (undo-tree-id688 . -195) (undo-tree-id689 . -7) (undo-tree-id690 . -7) (undo-tree-id691 . -2) (undo-tree-id692 . -195) (undo-tree-id693 . -2) (488 . 489) (nil rear-nonsticky t 293 . 294)) (26130 38094 985567 176000) 0 nil])
([nil nil ((453 . 458) (t 26130 37923 394741 607000)) ((#("z-1Â° " 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 453) (undo-tree-id604 . -5) (undo-tree-id605 . -3) (undo-tree-id606 . -5)) (26130 37967 63308 310000) 0 nil])
([nil nil ((172 . 181) (t 26130 37280 63848 947000)) ((#(" h-screen" 0 9 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 172) (undo-tree-id344 . -8) (undo-tree-id345 . -8) (undo-tree-id346 . -8) (undo-tree-id347 . -8) (undo-tree-id348 . -8) (undo-tree-id349 . -8) (undo-tree-id350 . -8) (undo-tree-id351 . -8) (undo-tree-id352 . -8) (undo-tree-id353 . -8) (t 26130 37304 320549 362000)) (26130 37304 312190 233000) 0 nil])
([nil nil ((147 . 148)) ((#("l" 0 1 (part-side jsx)) . 147) (undo-tree-id330 . -1) (undo-tree-id331 . -1)) (26130 34727 572514 844000) 0 nil])
([nil nil ((#("		<div className=\"absolute z-0 h-full\">
		    <MatrixRainingLetters custom_class=\"absolute z-0\" />
		</div>
" 0 2 (jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 8 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 37 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 37 38 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 38 39 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 39 40 (jsx-depth 1 part-side jsx) 40 42 (jsx-depth 1 part-side jsx) 42 46 (jsx-depth 1 part-side jsx) 46 47 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 47 67 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 67 68 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 68 69 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 69 80 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 80 81 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 81 94 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 94 95 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 95 96 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 96 97 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 97 98 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 98 99 (jsx-depth 1 part-side jsx) 99 101 (jsx-depth 1 part-side jsx) 101 102 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 102 103 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 103 106 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 106 107 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 107 108 (jsx-depth 1 part-side jsx)) . 269) (undo-tree-id196 . -107) (undo-tree-id197 . -107) (undo-tree-id198 . -27) (undo-tree-id199 . -107) (undo-tree-id201 . -98) (undo-tree-id203 . -97) (undo-tree-id205 . -27) (undo-tree-id207 . -107) (undo-tree-id209 . -107) 376 (t 26130 34534 853433 591000)) ((269 . 377) (t 26130 34651 440184 719000)) (26130 34650 425125 358000) 0 nil] [nil nil ((#("		<div className=\"absolute z-0 h-full\">
" 0 2 (jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 8 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 37 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 37 38 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 38 39 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 39 40 (jsx-depth 1 part-side jsx)) . 269) (undo-tree-id184 . -39) (undo-tree-id185 . -39) (undo-tree-id186 . 40) (undo-tree-id188 . -27) (undo-tree-id189 . -27) (undo-tree-id191 . -40) 296) ((269 . 309)) (26130 34533 530833 646000) 0 nil])
([nil nil ((139 . 145) (139 . 140) 168 (t 26130 33061 294897 403000)) ((#("
" 0 1 (jsx-depth 1 part-side jsx)) . 139) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 139) (undo-tree-id27 . -6) (undo-tree-id28 . -5) (undo-tree-id29 . -5)) (26130 33097 210792 20000) 0 nil])
([nil nil ((#("mport React from 'react';
import { MatrixRainingLetters } from 'react-mdr';

const Layout = ({ children }) => {
  return (
    <div className=\"relative h-full\">
      <MatrixRainingLetters custom_class=\"absolute inset-0 z-0 style={{ height: '100%' }}   \" />
      <header className=\"z-10\">
        {/* Header content */}
        <h1>Welcome to My App</h1>
      </header>
      <main className=\"lg:px-[15%] relative z-10\">
        {/* Main content */}
        {children}
      </main>
      <footer className=\"absolute bottom-0 w-full z-10\">
        {/* Footer content */}
        <p>Copyright Â© 2024 My App</p>
      </footer>
    </div>
  );
};

export default Layout;" 0 5 (part-side jsx) 5 6 (part-side jsx) 6 11 (part-side jsx) 11 12 (part-side jsx) 12 16 (face web-mode-keyword-face part-side jsx) 16 17 (part-side jsx) 17 18 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 18 23 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 23 24 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 24 26 (part-side jsx) 26 32 (face web-mode-keyword-face part-side jsx) 32 58 (part-side jsx) 58 62 (face web-mode-keyword-face part-side jsx) 62 63 (part-side jsx) 63 64 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 64 73 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 73 74 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 74 77 (part-side jsx) 77 82 (face web-mode-keyword-face part-side jsx) 82 83 (part-side jsx) 83 89 (face web-mode-function-name-face part-side jsx) 89 95 (part-side jsx) 95 103 (face web-mode-variable-name-face part-side jsx) 103 114 (part-side jsx) 114 120 (face web-mode-keyword-face part-side jsx) 120 123 (part-side jsx) 123 127 (part-side jsx) 127 128 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 128 131 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 131 132 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 132 133 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 133 141 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 141 142 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 142 158 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 158 159 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 159 160 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 160 167 (jsx-depth 1 part-side jsx) 167 168 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 168 188 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 188 189 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 189 190 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 190 201 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 201 202 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 202 224 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 224 230 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 230 231 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 231 233 (tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 233 239 (face web-mode-variable-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 239 241 (tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 241 242 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 242 246 (font-lock-face web-mode-javascript-string-face part-token string tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 246 247 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 247 249 (tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 249 250 (font-lock-face web-mode-block-delimiter-face jsx-end 2 tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx rear-nonsticky t) 250 253 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 253 254 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 254 255 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 255 256 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 256 257 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 257 264 (jsx-depth 1 part-side jsx) 264 265 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "header" jsx-depth 1 part-side jsx) 265 271 (font-lock-face web-mode-html-tag-face tag-type start tag-name "header" jsx-depth 1 part-side jsx) 271 272 (tag-type start tag-name "header" jsx-depth 1 part-side jsx) 272 273 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 273 281 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 281 282 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 282 287 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 287 288 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 288 289 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "header" jsx-depth 1 part-side jsx) 289 298 (jsx-depth 1 part-side jsx) 298 299 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 299 300 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 300 318 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 318 319 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 319 320 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 320 329 (jsx-depth 1 part-side jsx) 329 330 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 330 332 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 332 333 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 333 350 (jsx-depth 1 part-side jsx) 350 351 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 351 352 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 352 354 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 354 355 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 355 362 (jsx-depth 1 part-side jsx) 362 363 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "header" jsx-depth 1 part-side jsx) 363 364 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 364 370 (font-lock-face web-mode-html-tag-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 370 371 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "header" jsx-depth 1 part-side jsx) 371 378 (jsx-depth 1 part-side jsx) 378 379 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "main" jsx-depth 1 part-side jsx) 379 383 (font-lock-face web-mode-html-tag-face tag-type start tag-name "main" jsx-depth 1 part-side jsx) 383 384 (tag-type start tag-name "main" jsx-depth 1 part-side jsx) 384 385 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 385 393 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 393 394 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 394 395 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 395 397 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 397 420 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 420 421 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 421 422 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "main" jsx-depth 1 part-side jsx) 422 431 (jsx-depth 1 part-side jsx) 431 432 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 432 433 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 433 449 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 449 450 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 450 451 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 451 460 (jsx-depth 1 part-side jsx) 460 461 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 461 469 (jsx-depth 2 part-side jsx) 469 470 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 470 477 (jsx-depth 1 part-side jsx) 477 478 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "main" jsx-depth 1 part-side jsx) 478 479 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 479 483 (font-lock-face web-mode-html-tag-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 483 484 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "main" jsx-depth 1 part-side jsx) 484 491 (jsx-depth 1 part-side jsx) 491 492 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 492 498 (font-lock-face web-mode-html-tag-face tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 498 499 (tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 499 500 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "footer" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 500 508 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "footer" tag-attr t jsx-depth 1 part-side jsx) 508 509 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "footer" tag-attr t jsx-depth 1 part-side jsx) 509 539 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t jsx-depth 1 part-side jsx) 539 540 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 540 541 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 541 550 (jsx-depth 1 part-side jsx) 550 551 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 551 552 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 552 570 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 570 571 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 571 572 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 572 581 (jsx-depth 1 part-side jsx) 581 582 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p" jsx-depth 1 part-side jsx) 582 583 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 1 part-side jsx) 583 584 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 1 part-side jsx) 584 607 (jsx-depth 1 part-side jsx) 607 608 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 1 part-side jsx) 608 609 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 609 610 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 610 611 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 1 part-side jsx) 611 618 (jsx-depth 1 part-side jsx) 618 619 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 619 620 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 620 626 (font-lock-face web-mode-html-tag-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 626 627 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 627 632 (jsx-depth 1 part-side jsx) 632 633 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 633 634 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 634 637 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 637 638 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx) 638 644 (part-side jsx) 644 647 (part-side jsx) 647 648 (part-side jsx) 648 654 (face web-mode-keyword-face part-side jsx) 654 655 (part-side jsx) 655 662 (face web-mode-keyword-face part-side jsx) 662 670 (part-side jsx)) . 1) (t 26130 29457 165311 330000)) ((1 . 671)) (26130 30297 404216 801000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 270) (undo-tree-id973 . 1) (undo-tree-id974 . -1) (undo-tree-id975 . -1)) nil (26130 38920 723735 479000) 0 nil])
([nil nil ((297 . 302) (#(">" 0 1 (tag-type start tag-name "main" jsx-depth 1 part-side jsx)) . -297) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . 1) (undo-tree-id698 . -1) 298 (294 . 297) (#("'" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx)) . -294) (undo-tree-id700 . -1) 295 (t 26130 38124 898267 935000)) ((294 . 295) (#("red" 0 3 (tag-type start tag-name "main" jsx-depth 1 part-side jsx)) . 294) (undo-tree-id931 . -3) (undo-tree-id932 . -3) (undo-tree-id933 . -3) (undo-tree-id934 . -3) (undo-tree-id935 . -3) (undo-tree-id936 . -3) (undo-tree-id937 . -3) (297 . 298) (#("-600'" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 2 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx)) . 297) (undo-tree-id938 . -3) (undo-tree-id939 . -3) (undo-tree-id940 . 1) (undo-tree-id941 . 1) (undo-tree-id942 . -3) (undo-tree-id943 . -5) (undo-tree-id944 . -5) (undo-tree-id945 . -5) (undo-tree-id946 . -4) (undo-tree-id947 . -1) (undo-tree-id948 . -4)) (26130 38619 892538 646000) 0 nil])
([nil nil ((636 . 637) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 636) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -625) (625 . 626) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 625) (621 . 625) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -589) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -564) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -553) (553 . 554) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 553) (549 . 553) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -540) (540 . 541) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 540) (536 . 540) (478 . 483) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 478) (415 . 416) (369 . 374) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 369) (320 . 325) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 320) (291 . 292) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -236) (236 . 237) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 236) (232 . 236) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -221) (221 . 222) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 221) (217 . 221) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -189) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -164) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -153) (153 . 154) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 153) (149 . 153) (#("    " 0 4 (part-side jsx)) . -142) 294 (t 26130 37975 28124 385000)) ((142 . 146) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 149) (153 . 154) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 153) (153 . 154) (164 . 168) (189 . 193) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 217) (221 . 222) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 221) (221 . 222) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 232) (236 . 237) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 236) (236 . 237) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 291) (320 . 324) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 320) (369 . 373) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 369) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 415) (478 . 482) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 478) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 536) (540 . 541) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 540) (540 . 541) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 549) (553 . 554) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 553) (553 . 554) (564 . 568) (589 . 593) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 621) (625 . 626) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 625) (625 . 626) (636 . 640) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 636)) (26130 38094 799777 33000) 0 nil])
([nil nil ((#("Â°" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -456) (undo-tree-id574 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -457) (undo-tree-id576 . -1) 458) ((456 . 458)) (26130 37966 541625 514000) 0 nil])
nil
([nil nil ((#("l" 0 1 (jsx-depth 1 part-side jsx)) . -147) (undo-tree-id304 . -1) 148) ((147 . 148)) (26130 34727 409243 598000) 0 nil])
([nil nil ((#("// Layout.js

import { MatrixRainingLetters } from 'react-mdr';
import React from 'react';

const Layout = ({ children }) => {
    return (
	<div>
	    <header>
		{/* Header content */}
		<h1>Welcome to My App</h1>
	    </header>
	    <main className=' absolute z-0'>
		{/* Main content */}
		{children}
	    </main>
	    <footer>
		{/* Footer content */}
		<p>Copyright Â© 2024 My App</p>
	    </footer>
	</div>
    );
};

export default Layout;
" 0 1 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 1 12 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 12 13 (syntax-table (12) part-side jsx) 13 14 (part-side jsx rear-nonsticky t) 14 20 (face web-mode-keyword-face part-side jsx) 20 46 (part-side jsx) 46 50 (face web-mode-keyword-face part-side jsx) 50 51 (part-side jsx) 51 52 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 52 61 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 61 62 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 62 63 (part-side jsx) 63 64 (part-side jsx) 64 70 (face web-mode-keyword-face part-side jsx) 70 71 (part-side jsx) 71 76 (face web-mode-type-face part-side jsx) 76 77 (part-side jsx) 77 81 (face web-mode-keyword-face part-side jsx) 81 82 (part-side jsx) 82 83 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 83 88 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 88 89 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 89 91 (part-side jsx) 91 92 (part-side jsx) 92 97 (face web-mode-keyword-face part-side jsx) 97 98 (part-side jsx) 98 104 (face web-mode-function-name-face part-side jsx) 104 110 (part-side jsx) 110 118 (face web-mode-variable-name-face part-side jsx) 118 127 (part-side jsx) 127 131 (part-side jsx) 131 137 (face web-mode-keyword-face part-side jsx) 137 140 (part-side jsx) 140 141 (part-side jsx) 141 142 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 142 145 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 145 146 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 146 152 (jsx-depth 1 part-side jsx) 152 153 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "header" jsx-depth 1 part-side jsx) 153 159 (font-lock-face web-mode-html-tag-face tag-type start tag-name "header" jsx-depth 1 part-side jsx) 159 160 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "header" jsx-depth 1 part-side jsx) 160 163 (jsx-depth 1 part-side jsx) 163 164 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 164 165 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 165 183 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 183 184 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 184 185 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 185 188 (jsx-depth 1 part-side jsx) 188 189 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 189 191 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 191 192 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 192 209 (jsx-depth 1 part-side jsx) 209 210 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 210 211 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 211 213 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 213 214 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 214 220 (jsx-depth 1 part-side jsx) 220 221 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "header" jsx-depth 1 part-side jsx) 221 222 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 222 228 (font-lock-face web-mode-html-tag-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 228 229 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "header" jsx-depth 1 part-side jsx) 229 235 (jsx-depth 1 part-side jsx) 235 236 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "main" jsx-depth 1 part-side jsx) 236 240 (font-lock-face web-mode-html-tag-face tag-type start tag-name "main" jsx-depth 1 part-side jsx) 240 241 (tag-type start tag-name "main" jsx-depth 1 part-side jsx) 241 242 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 242 250 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 250 251 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 251 265 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 265 266 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 266 267 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "main" jsx-depth 1 part-side jsx) 267 268 (jsx-depth 1 part-side jsx) 268 270 (jsx-depth 1 part-side jsx) 270 271 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 271 272 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 272 288 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 288 289 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 289 290 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 290 293 (jsx-depth 1 part-side jsx) 293 294 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 294 302 (jsx-depth 2 part-side jsx) 302 303 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 303 309 (jsx-depth 1 part-side jsx) 309 310 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "main" jsx-depth 1 part-side jsx) 310 311 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 311 315 (font-lock-face web-mode-html-tag-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 315 316 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "main" jsx-depth 1 part-side jsx) 316 322 (jsx-depth 1 part-side jsx) 322 323 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 323 329 (font-lock-face web-mode-html-tag-face tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 329 330 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 330 333 (jsx-depth 1 part-side jsx) 333 334 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 334 335 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 335 353 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 353 354 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 354 355 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 355 358 (jsx-depth 1 part-side jsx) 358 359 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p" jsx-depth 1 part-side jsx) 359 360 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 1 part-side jsx) 360 361 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 1 part-side jsx) 361 384 (jsx-depth 1 part-side jsx) 384 385 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 1 part-side jsx) 385 386 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 386 387 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 387 388 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 1 part-side jsx) 388 394 (jsx-depth 1 part-side jsx) 394 395 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 395 396 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 396 402 (font-lock-face web-mode-html-tag-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 402 403 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 403 405 (jsx-depth 1 part-side jsx) 405 406 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 406 407 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 407 410 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 410 411 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx) 411 419 (part-side jsx) 419 423 (part-side jsx) 423 429 (face web-mode-keyword-face part-side jsx) 429 430 (part-side jsx) 430 437 (face web-mode-keyword-face part-side jsx) 437 446 (part-side jsx)) . 1) (undo-tree-id211 . -446) (undo-tree-id213 . -446) (undo-tree-id214 . -445) (undo-tree-id215 . -147) (undo-tree-id216 . -446) (undo-tree-id217 . 181) (undo-tree-id218 . -446) (undo-tree-id220 . -252) (undo-tree-id222 . -446) (undo-tree-id223 . -446) (undo-tree-id224 . -446) (undo-tree-id226 . -147) (undo-tree-id228 . -147) (undo-tree-id230 . -268) (undo-tree-id232 . -268) (undo-tree-id234 . -268) (undo-tree-id236 . -268) (undo-tree-id238 . -276) (undo-tree-id240 . -446) (undo-tree-id242 . -446) (undo-tree-id244 . -446) (undo-tree-id246 . -422) (undo-tree-id248 . -446) (undo-tree-id250 . -446) (undo-tree-id252 . -13) (undo-tree-id254 . -13) (undo-tree-id256 . -13) (undo-tree-id258 . -446) (undo-tree-id260 . -446) (undo-tree-id261 . -147) (undo-tree-id263 . -446) (t 26130 34539 780103 828000)) ((1 . 447)) (26130 34649 893542 127000) 0 nil])
([nil nil ((#("		</div>
" 0 2 (jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 4 7 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 8 9 (jsx-depth 1 part-side jsx)) . 328) (undo-tree-id178 . -8) (undo-tree-id180 . -7) (undo-tree-id181 . -7) (undo-tree-id183 . -9) 335) ((328 . 337)) (26130 34533 190892 35000) 0 nil])
([nil nil ((145 . 147)) ((#("</" 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx)) . 145) (undo-tree-id24 . -2) (undo-tree-id25 . -1) (undo-tree-id26 . -1)) (26130 33096 935019 384000) 0 nil])
([nil nil ((nil rear-nonsticky nil 670 . 671) (nil tag-name "div" 637 . 638) (nil tag-name "div" 634 . 637) (nil tag-name "div" 633 . 634) (nil tag-name "div" 632 . 633) (nil tag-name "footer" 626 . 627) (nil tag-name "footer" 620 . 626) (nil tag-name "footer" 619 . 620) (nil tag-name "footer" 618 . 619) (nil tag-name "p" 610 . 611) (nil tag-name "p" 609 . 610) (nil tag-name "p" 608 . 609) (nil tag-name "p" 607 . 608) (nil tag-name "p" 583 . 584) (nil tag-name "p" 582 . 583) (nil tag-name "p" 581 . 582) (nil tag-name "footer" 540 . 541) (nil tag-name "footer" 539 . 540) (nil tag-name "footer" 509 . 539) (nil tag-name "footer" 508 . 509) (nil tag-name "footer" 500 . 508) (nil tag-name "footer" 499 . 500) (nil tag-name "footer" 498 . 499) (nil tag-name "footer" 492 . 498) (nil tag-name "footer" 491 . 492) (nil tag-name "main" 483 . 484) (nil tag-name "main" 479 . 483) (nil tag-name "main" 478 . 479) (nil tag-name "main" 477 . 478) (nil tag-name "main" 421 . 422) (nil tag-name "main" 420 . 421) (nil tag-name "main" 397 . 420) (nil tag-name "main" 395 . 397) (nil tag-name "main" 394 . 395) (nil tag-name "main" 393 . 394) (nil tag-name "main" 385 . 393) (nil tag-name "main" 384 . 385) (nil tag-name "main" 383 . 384) (nil tag-name "main" 379 . 383) (nil tag-name "main" 378 . 379) (nil tag-name "header" 370 . 371) (nil tag-name "header" 364 . 370) (nil tag-name "header" 363 . 364) (nil tag-name "header" 362 . 363) (nil tag-name "h1" 354 . 355) (nil tag-name "h1" 352 . 354) (nil tag-name "h1" 351 . 352) (nil tag-name "h1" 350 . 351) (nil tag-name "h1" 332 . 333) (nil tag-name "h1" 330 . 332) (nil tag-name "h1" 329 . 330) (nil tag-name "header" 288 . 289) (nil tag-name "header" 287 . 288) (nil tag-name "header" 282 . 287) (nil tag-name "header" 281 . 282) (nil tag-name "header" 273 . 281) (nil tag-name "header" 272 . 273) (nil tag-name "header" 271 . 272) (nil tag-name "header" 265 . 271) (nil tag-name "header" 264 . 265) (nil tag-name "matrixrainingletters" 256 . 257) (nil tag-name "matrixrainingletters" 255 . 256) (nil tag-name "matrixrainingletters" 254 . 255) (nil tag-name "matrixrainingletters" 253 . 254) (nil tag-name "matrixrainingletters" 251 . 253) (nil tag-name "matrixrainingletters" 250 . 251) (nil tag-name "matrixrainingletters" 246 . 249) (nil tag-name "matrixrainingletters" 249 . 250) (nil tag-name "matrixrainingletters" 245 . 246) (nil tag-name "matrixrainingletters" 243 . 245) (nil tag-name "matrixrainingletters" 237 . 243) (nil tag-name "matrixrainingletters" 235 . 237) (nil tag-name "matrixrainingletters" 234 . 235) (nil tag-name "matrixrainingletters" 233 . 234) (nil tag-name "matrixrainingletters" 229 . 233) (nil tag-name "matrixrainingletters" 228 . 229) (nil tag-name "matrixrainingletters" 227 . 228) (nil tag-name "matrixrainingletters" 226 . 227) (nil tag-name "matrixrainingletters" 205 . 226) (nil tag-name "matrixrainingletters" 204 . 205) (nil tag-name "matrixrainingletters" 193 . 204) (nil tag-name "matrixrainingletters" 192 . 193) (nil tag-name "matrixrainingletters" 191 . 192) (nil tag-name "matrixrainingletters" 171 . 191) (nil tag-name "matrixrainingletters" 170 . 171) (nil tag-name "div" 162 . 163) (nil tag-name "div" 161 . 162) (nil tag-name "div" 145 . 161) (nil tag-name "div" 144 . 145) (nil tag-name "div" 136 . 144) (nil tag-name "div" 135 . 136) (nil tag-name "div" 134 . 135) (nil tag-name "div" 131 . 134) (nil tag-name "div" 130 . 131) (2 . 671)) ((#("import React from 'react';
import { MatrixRainingLetters } from 'react-mdr';

const Layout = ({ children }) => {
  return (
    <div className=\"relative h-full\">
      <MatrixRainingLetters custom_class=\"absolute inset-0 z-0\" style={{ height: '100%' }} />
      <header className=\"z-10\">
        {/* Header content */}
        <h1>Welcome to My App</h1>
      </header>
      <main className=\"lg:px-[15%] relative z-10\">
        {/* Main content */}
        {children}
      </main>
      <footer className=\"absolute bottom-0 w-full z-10\">
        {/* Footer content */}
        <p>Copyright Â© 2024 My App</p>
      </footer>
    </div>
  );
};

export default Layout;
" 0 6 (face web-mode-keyword-face part-side jsx) 6 7 (part-side jsx) 7 12 (face web-mode-type-face part-side jsx) 12 13 (part-side jsx) 13 17 (face web-mode-keyword-face part-side jsx) 17 18 (part-side jsx) 18 19 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 19 24 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 24 25 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 25 27 (part-side jsx) 27 33 (face web-mode-keyword-face part-side jsx) 33 59 (part-side jsx) 59 63 (face web-mode-keyword-face part-side jsx) 63 64 (part-side jsx) 64 65 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 65 74 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 74 75 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 75 77 (part-side jsx) 77 78 (part-side jsx) 78 83 (face web-mode-keyword-face part-side jsx) 83 84 (part-side jsx) 84 90 (face web-mode-function-name-face part-side jsx) 90 96 (part-side jsx) 96 104 (face web-mode-variable-name-face part-side jsx) 104 113 (part-side jsx) 113 115 (part-side jsx) 115 121 (face web-mode-keyword-face part-side jsx) 121 124 (part-side jsx) 124 128 (part-side jsx) 128 129 (part-side jsx) 129 132 (part-side jsx) 132 133 (part-side jsx) 133 134 (part-side jsx) 134 142 (part-side jsx) 142 143 (part-side jsx) 143 144 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 144 159 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 159 160 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 160 161 (part-side jsx) 161 162 (part-side jsx) 162 168 (part-side jsx) 168 169 (part-side jsx) 169 189 (part-side jsx) 189 190 (part-side jsx) 190 191 (part-side jsx) 191 202 (part-side jsx) 202 203 (part-side jsx) 203 204 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 204 211 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 211 212 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 212 213 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 213 221 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 221 222 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 222 223 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 223 224 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 224 225 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 225 226 (part-side jsx) 226 227 (part-side jsx) 227 231 (part-side jsx) 231 232 (part-side jsx) 232 233 (part-side jsx) 233 235 (part-side jsx) 235 241 (face web-mode-variable-name-face part-side jsx) 241 243 (part-side jsx) 243 244 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 244 247 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 247 248 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 248 249 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 249 251 (part-side jsx) 251 252 (part-side jsx) 252 253 (part-side jsx) 253 254 (part-side jsx) 254 255 (part-side jsx) 255 256 (part-side jsx) 256 262 (part-side jsx) 262 263 (part-side jsx) 263 269 (part-side jsx) 269 270 (part-side jsx) 270 271 (part-side jsx) 271 279 (part-side jsx) 279 280 (part-side jsx) 280 281 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 281 284 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 284 285 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 285 286 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 286 287 (part-side jsx) 287 288 (part-side jsx) 288 296 (part-side jsx) 296 297 (part-side jsx) 297 298 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 298 316 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 316 317 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment part-side jsx) 317 318 (part-side jsx) 318 319 (part-side jsx) 319 327 (part-side jsx) 327 328 (part-side jsx) 328 330 (part-side jsx) 330 331 (part-side jsx) 331 348 (part-side jsx) 348 349 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 349 350 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 350 352 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 352 353 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 353 354 (syntax-table (12) part-side jsx) 354 360 (part-side jsx) 360 361 (part-side jsx) 361 362 (part-side jsx) 362 368 (part-side jsx) 368 369 (part-side jsx) 369 370 (part-side jsx) 370 376 (part-side jsx) 376 377 (part-side jsx) 377 381 (part-side jsx) 381 382 (part-side jsx) 382 383 (part-side jsx) 383 391 (part-side jsx) 391 392 (part-side jsx) 392 393 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 393 395 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 395 418 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 418 419 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 419 420 (part-side jsx) 420 421 (part-side jsx) 421 429 (part-side jsx) 429 430 (part-side jsx) 430 431 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 431 447 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 447 448 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment part-side jsx) 448 449 (part-side jsx) 449 450 (part-side jsx) 450 458 (part-side jsx) 458 459 (part-side jsx) 459 467 (part-side jsx) 467 468 (part-side jsx) 468 469 (part-side jsx) 469 475 (part-side jsx) 475 476 (part-side jsx) 476 477 (part-side jsx) 477 481 (part-side jsx) 481 482 (part-side jsx) 482 483 (part-side jsx) 483 489 (part-side jsx) 489 490 (part-side jsx) 490 496 (part-side jsx) 496 497 (part-side jsx) 497 498 (part-side jsx) 498 506 (part-side jsx) 506 507 (part-side jsx) 507 508 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 508 537 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 537 538 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 538 539 (part-side jsx) 539 540 (part-side jsx) 540 548 (part-side jsx) 548 549 (part-side jsx) 549 550 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 550 568 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 568 569 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment part-side jsx) 569 570 (part-side jsx) 570 571 (part-side jsx) 571 579 (part-side jsx) 579 580 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p" jsx-depth 1 jsx-beg 1 part-side jsx) 580 581 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 1 part-side jsx) 581 582 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 1 part-side jsx) 582 605 (jsx-depth 1 part-side jsx) 605 606 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 1 part-side jsx) 606 607 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 607 608 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 608 609 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 1 part-side jsx) 609 610 (jsx-depth 1 part-side jsx) 610 616 (jsx-depth 1 part-side jsx) 616 617 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 617 618 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 618 624 (font-lock-face web-mode-html-tag-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 624 625 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 625 626 (jsx-depth 1 part-side jsx) 626 630 (jsx-depth 1 part-side jsx) 630 631 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 631 632 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 632 635 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 635 636 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx) 636 637 (part-side jsx) 637 642 (part-side jsx) 642 645 (part-side jsx) 645 646 (part-side jsx) 646 652 (face web-mode-keyword-face part-side jsx) 652 653 (part-side jsx) 653 660 (face web-mode-keyword-face part-side jsx) 660 668 (part-side jsx) 668 669 (part-side jsx rear-nonsticky nil)) . 2) (undo-tree-id666 . -669) (undo-tree-id667 . 508) (undo-tree-id668 . -177) (undo-tree-id669 . -668) (undo-tree-id670 . -468) (undo-tree-id671 . -468) (undo-tree-id672 . -161) (undo-tree-id673 . -669) (undo-tree-id674 . -162) (undo-tree-id675 . -287) (undo-tree-id676 . -284) (undo-tree-id677 . -124) (undo-tree-id678 . -192) (undo-tree-id679 . -468) (undo-tree-id680 . -467) (undo-tree-id681 . -467) (undo-tree-id682 . -177) (undo-tree-id683 . -177) (undo-tree-id684 . -177) (undo-tree-id685 . -177) (undo-tree-id686 . -669) (undo-tree-id687 . -669) (undo-tree-id688 . -669) (undo-tree-id689 . -669) (undo-tree-id690 . -256) (undo-tree-id691 . -247) (undo-tree-id692 . -124) (undo-tree-id693 . -247) (nil tag-name nil 130 . 131) (nil tag-name nil 131 . 134) (nil tag-name nil 134 . 135) (nil tag-name nil 135 . 136) (nil tag-name nil 136 . 144) (nil tag-name nil 144 . 145) (nil tag-name nil 146 . 161) (nil tag-name nil 145 . 146) (nil tag-name nil 161 . 162) (nil tag-name nil 162 . 163) (nil tag-name nil 170 . 171) (nil tag-name nil 171 . 191) (nil tag-name nil 191 . 192) (nil tag-name nil 192 . 193) (nil tag-name nil 193 . 204) (nil tag-name nil 204 . 205) (nil tag-name nil 225 . 226) (nil tag-name nil 224 . 225) (nil tag-name nil 223 . 224) (nil tag-name nil 215 . 223) (nil tag-name nil 214 . 215) (nil tag-name nil 213 . 214) (nil tag-name nil 206 . 213) (nil tag-name nil 205 . 206) (nil tag-name nil 226 . 227) (nil tag-name nil 227 . 228) (nil tag-name nil 228 . 229) (nil tag-name nil 229 . 233) (nil tag-name nil 233 . 234) (nil tag-name nil 234 . 235) (nil tag-name nil 235 . 237) (nil tag-name nil 237 . 243) (nil tag-name nil 243 . 245) (nil tag-name nil 245 . 246) (nil tag-name nil 249 . 250) (nil tag-name nil 246 . 249) (nil tag-name nil 250 . 251) (nil tag-name nil 251 . 253) (nil tag-name nil 253 . 254) (nil tag-name nil 254 . 255) (nil tag-name nil 255 . 256) (nil tag-name nil 256 . 257) (nil tag-name nil 264 . 265) (nil tag-name nil 265 . 271) (nil tag-name nil 271 . 272) (nil tag-name nil 272 . 273) (nil tag-name nil 273 . 281) (nil tag-name nil 281 . 282) (nil tag-name nil 286 . 287) (nil tag-name nil 283 . 286) (nil tag-name nil 282 . 283) (nil tag-name nil 287 . 288) (nil tag-name nil 288 . 289) (nil tag-name nil 329 . 330) (nil tag-name nil 330 . 332) (nil tag-name nil 332 . 333) (nil tag-name nil 350 . 351) (nil tag-name nil 351 . 352) (nil tag-name nil 352 . 354) (nil tag-name nil 354 . 355) (nil tag-name nil 362 . 363) (nil tag-name nil 363 . 364) (nil tag-name nil 364 . 370) (nil tag-name nil 370 . 371) (nil tag-name nil 378 . 379) (nil tag-name nil 379 . 383) (nil tag-name nil 383 . 384) (nil tag-name nil 384 . 385) (nil tag-name nil 385 . 393) (nil tag-name nil 393 . 394) (nil tag-name nil 394 . 395) (nil tag-name nil 395 . 397) (nil tag-name nil 397 . 420) (nil tag-name nil 420 . 421) (nil tag-name nil 421 . 422) (nil tag-name nil 477 . 478) (nil tag-name nil 478 . 479) (nil tag-name nil 479 . 483) (nil tag-name nil 483 . 484) (nil tag-name nil 491 . 492) (nil tag-name nil 492 . 498) (nil tag-name nil 498 . 499) (nil tag-name nil 499 . 500) (nil tag-name nil 500 . 508) (nil tag-name nil 508 . 509) (nil tag-name nil 510 . 539) (nil tag-name nil 509 . 510) (nil tag-name nil 539 . 540) (nil tag-name nil 540 . 541) (nil tag-name "p" 581 . 582) (nil tag-name "p" 582 . 583) (nil tag-name "p" 583 . 584) (nil tag-name "p" 607 . 608) (nil tag-name "p" 608 . 609) (nil tag-name "p" 609 . 610) (nil tag-name "p" 610 . 611) (nil tag-name "footer" 618 . 619) (nil tag-name "footer" 619 . 620) (nil tag-name "footer" 620 . 626) (nil tag-name "footer" 626 . 627) (nil tag-name "div" 632 . 633) (nil tag-name "div" 633 . 634) (nil tag-name "div" 634 . 637) (nil tag-name "div" 637 . 638) (nil rear-nonsticky t 670 . 671)) (26130 30297 214428 628000) 0 nil])
([nil nil ((270 . 279) (t 26130 38920 732363 327000)) nil (26130 39062 393186 14000) 0 nil])
([nil nil ((302 . 303) (t 26130 38131 221607 324000)) ((#(">" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "main" jsx-depth 1 part-side jsx)) . 302) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1)) (26130 38619 565431 620000) 0 nil])
([nil nil ((489 . 496) (t 26130 37978 361460 912000) 478) ((#("
		    " 0 1 (jsx-depth 1 part-side jsx) 1 3 (jsx-depth 1 part-side jsx) 3 7 (jsx-depth 1 part-side jsx)) . 489) (undo-tree-id676 . -7) (undo-tree-id677 . -1) (undo-tree-id678 . -7) (undo-tree-id679 . -1) (undo-tree-id680 . -6) (undo-tree-id681 . -6) (undo-tree-id682 . -6)) (26130 38094 640739 217000) 0 nil])
([nil nil ((456 . 458)) ((#("0 " 0 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 456) (t 26130 37966 378116 102000)) (26130 37965 361845 706000) 0 nil])
([nil nil ((#(">" 0 1 (jsx-depth 1 part-side jsx)) . 147) (#("v" 0 1 (jsx-depth 1 part-side jsx)) . 147) (#("i" 0 1 (jsx-depth 1 part-side jsx)) . 147) (#("d" 0 1 (jsx-depth 1 part-side jsx)) . 147) (#("/" 0 1 (jsx-depth 1 part-side jsx)) . 147) (#("<" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx)) . 147)) ((147 . 148) (147 . 148) (147 . 148) (147 . 148) (147 . 148) (147 . 148)) (26130 34727 254139 406000) 0 nil])
([nil nil ((nil rear-nonsticky nil 630 . 631) (nil part-side jsx 622 . 631) (nil part-side jsx 615 . 622) (nil face web-mode-keyword-face 615 . 622) (nil part-side jsx 614 . 615) (nil part-side jsx 608 . 614) (nil face web-mode-keyword-face 608 . 614) (nil part-side jsx 598 . 608) (nil part-side jsx 597 . 598) (nil jsx-end 1 597 . 598) (nil jsx-depth 1 597 . 598) (nil tag-name "div" 597 . 598) (nil tag-type end 597 . 598) (nil tag-end t 597 . 598) (nil font-lock-face web-mode-html-tag-bracket-face 597 . 598) (nil part-side jsx 594 . 597) (nil jsx-depth 1 594 . 597) (nil tag-name "div" 594 . 597) (nil tag-type end 594 . 597) (nil font-lock-face web-mode-html-tag-face 594 . 597) (nil part-side jsx 593 . 594) (nil jsx-depth 1 593 . 594) (nil tag-name "div" 593 . 594) (nil tag-type end 593 . 594) (nil font-lock-face web-mode-html-tag-bracket-face 593 . 594) (nil part-side jsx 592 . 593) (nil jsx-depth 1 592 . 593) (nil tag-name "div" 592 . 593) (nil tag-type end 592 . 593) (nil tag-beg 20 592 . 593) (nil font-lock-face web-mode-html-tag-bracket-face 592 . 593) (nil part-side jsx 587 . 592) (nil jsx-depth 1 587 . 592) (nil part-side jsx 586 . 587) (nil jsx-depth 1 586 . 587) (nil tag-name "footer" 586 . 587) (nil tag-type end 586 . 587) (nil tag-end t 586 . 587) (nil font-lock-face web-mode-html-tag-bracket-face 586 . 587) (nil part-side jsx 580 . 586) (nil jsx-depth 1 580 . 586) (nil tag-name "footer" 580 . 586) (nil tag-type end 580 . 586) (nil font-lock-face web-mode-html-tag-face 580 . 586) (nil part-side jsx 579 . 580) (nil jsx-depth 1 579 . 580) (nil tag-name "footer" 579 . 580) (nil tag-type end 579 . 580) (nil font-lock-face web-mode-html-tag-bracket-face 579 . 580) (nil part-side jsx 578 . 579) (nil jsx-depth 1 578 . 579) (nil tag-name "footer" 578 . 579) (nil tag-type end 578 . 579) (nil tag-beg 20 578 . 579) (nil font-lock-face web-mode-html-tag-bracket-face 578 . 579) (nil part-side jsx 571 . 578) (nil jsx-depth 1 571 . 578) (nil part-side jsx 570 . 571) (nil jsx-depth 1 570 . 571) (nil tag-name "p" 570 . 571) (nil tag-type end 570 . 571) (nil tag-end t 570 . 571) (nil font-lock-face web-mode-html-tag-bracket-face 570 . 571) (nil part-side jsx 569 . 570) (nil jsx-depth 1 569 . 570) (nil tag-name "p" 569 . 570) (nil tag-type end 569 . 570) (nil font-lock-face web-mode-html-tag-face 569 . 570) (nil part-side jsx 568 . 569) (nil jsx-depth 1 568 . 569) (nil tag-name "p" 568 . 569) (nil tag-type end 568 . 569) (nil font-lock-face web-mode-html-tag-bracket-face 568 . 569) (nil part-side jsx 567 . 568) (nil jsx-depth 1 567 . 568) (nil tag-name "p" 567 . 568) (nil tag-type end 567 . 568) (nil tag-beg 20 567 . 568) (nil font-lock-face web-mode-html-tag-bracket-face 567 . 568) (nil part-side jsx 544 . 567) (nil jsx-depth 1 544 . 567) (nil part-side jsx 543 . 544) (nil jsx-depth 1 543 . 544) (nil tag-name "p" 543 . 544) (nil tag-type start 543 . 544) (nil tag-end t 543 . 544) (nil font-lock-face web-mode-html-tag-bracket-face 543 . 544) (nil part-side jsx 542 . 543) (nil jsx-depth 1 542 . 543) (nil tag-name "p" 542 . 543) (nil tag-type start 542 . 543) (nil font-lock-face web-mode-html-tag-face 542 . 543) (nil part-side jsx 541 . 542) (nil jsx-depth 1 541 . 542) (nil tag-name "p" 541 . 542) (nil tag-type start 541 . 542) (nil tag-beg 16 541 . 542) (nil font-lock-face web-mode-html-tag-bracket-face 541 . 542) (nil part-side jsx 532 . 541) (nil jsx-depth 1 532 . 541) (nil part-side jsx 531 . 532) (nil jsx-depth 2 531 . 532) (nil jsx-end 2 531 . 532) (nil font-lock-face web-mode-block-delimiter-face 531 . 532) (nil part-side jsx 530 . 531) (nil jsx-depth 2 530 . 531) (nil part-token comment 530 . 531) (nil syntax-table (12) 530 . 531) (nil font-lock-face web-mode-javascript-comment-face 530 . 531) (nil part-side jsx 512 . 530) (nil jsx-depth 2 512 . 530) (nil part-token comment 512 . 530) (nil font-lock-face web-mode-javascript-comment-face 512 . 530) (nil part-side jsx 511 . 512) (nil jsx-depth 2 511 . 512) (nil part-token comment 511 . 512) (nil syntax-table (11) 511 . 512) (nil font-lock-face web-mode-javascript-comment-face 511 . 512) (nil part-side jsx 510 . 511) (nil jsx-depth 2 510 . 511) (nil jsx-beg 2 510 . 511) (nil font-lock-face web-mode-block-delimiter-face 510 . 511) (nil part-side jsx 501 . 510) (nil jsx-depth 1 501 . 510) (nil part-side jsx 500 . 501) (nil jsx-depth 1 500 . 501) (nil tag-name "footer" 500 . 501) (nil tag-type start 500 . 501) (nil tag-end t 500 . 501) (nil font-lock-face web-mode-html-tag-bracket-face 500 . 501) (nil part-side jsx 494 . 500) (nil jsx-depth 1 494 . 500) (nil tag-name "footer" 494 . 500) (nil tag-type start 494 . 500) (nil font-lock-face web-mode-html-tag-face 494 . 500) (nil part-side jsx 493 . 494) (nil jsx-depth 1 493 . 494) (nil tag-name "footer" 493 . 494) (nil tag-type start 493 . 494) (nil tag-beg 16 493 . 494) (nil font-lock-face web-mode-html-tag-bracket-face 493 . 494) (nil part-side jsx 486 . 493) (nil jsx-depth 1 486 . 493) (nil part-side jsx 485 . 486) (nil jsx-depth 2 485 . 486) (nil jsx-end 2 485 . 486) (nil font-lock-face web-mode-block-delimiter-face 485 . 486) (nil part-side jsx 484 . 485) (nil jsx-depth 2 484 . 485) (nil part-token comment 484 . 485) (nil syntax-table (12) 484 . 485) (nil font-lock-face web-mode-javascript-comment-face 484 . 485) (nil part-side jsx 474 . 484) (nil jsx-depth 2 474 . 484) (nil part-token comment 474 . 484) (nil font-lock-face web-mode-javascript-comment-face 474 . 484) (nil part-side jsx 473 . 474) (nil jsx-depth 2 473 . 474) (nil part-token comment 473 . 474) (nil syntax-table (11) 473 . 474) (nil font-lock-face web-mode-javascript-comment-face 473 . 474) (nil part-side jsx 472 . 473) (nil jsx-depth 2 472 . 473) (nil jsx-beg 2 472 . 473) (nil font-lock-face web-mode-block-delimiter-face 472 . 473) (nil part-side jsx 458 . 472) (nil jsx-depth 1 458 . 472) (nil part-side jsx 457 . 458) (nil jsx-depth 1 457 . 458) (nil tag-name "main" 457 . 458) (nil tag-type end 457 . 458) (nil tag-end t 457 . 458) (nil font-lock-face web-mode-html-tag-bracket-face 457 . 458) (nil part-side jsx 453 . 457) (nil jsx-depth 1 453 . 457) (nil tag-name "main" 453 . 457) (nil tag-type end 453 . 457) (nil font-lock-face web-mode-html-tag-face 453 . 457) (nil part-side jsx 452 . 453) (nil jsx-depth 1 452 . 453) (nil tag-name "main" 452 . 453) (nil tag-type end 452 . 453) (nil font-lock-face web-mode-html-tag-bracket-face 452 . 453) (nil part-side jsx 451 . 452) (nil jsx-depth 1 451 . 452) (nil tag-name "main" 451 . 452) (nil tag-type end 451 . 452) (nil tag-beg 20 451 . 452) (nil font-lock-face web-mode-html-tag-bracket-face 451 . 452) (nil part-side jsx 444 . 451) (nil jsx-depth 1 444 . 451) (nil part-side jsx 443 . 444) (nil jsx-depth 2 443 . 444) (nil jsx-end 2 443 . 444) (nil font-lock-face web-mode-block-delimiter-face 443 . 444) (nil part-side jsx 435 . 443) (nil jsx-depth 2 435 . 443) (nil part-side jsx 434 . 435) (nil jsx-depth 2 434 . 435) (nil jsx-beg 2 434 . 435) (nil font-lock-face web-mode-block-delimiter-face 434 . 435) (nil part-side jsx 425 . 434) (nil jsx-depth 1 425 . 434) (nil part-side jsx 424 . 425) (nil jsx-depth 1 424 . 425) (nil tag-name "main" 424 . 425) (nil tag-type start 424 . 425) (nil tag-end t 424 . 425) (nil font-lock-face web-mode-html-tag-bracket-face 424 . 425) (nil part-side jsx 423 . 424) (nil jsx-depth 1 423 . 424) (nil tag-attr t 423 . 424) (nil tag-attr-end 9 423 . 424) (nil tag-name "main" 423 . 424) (nil tag-type start 423 . 424) (nil font-lock-face web-mode-html-attr-value-face 423 . 424) (nil part-side jsx 395 . 423) (nil jsx-depth 1 395 . 423) (nil tag-attr t 395 . 423) (nil tag-name "main" 395 . 423) (nil tag-type start 395 . 423) (nil font-lock-face web-mode-html-attr-value-face 395 . 423) (nil part-side jsx 394 . 395) (nil jsx-depth 1 394 . 395) (nil tag-attr t 394 . 395) (nil tag-name "main" 394 . 395) (nil tag-type start 394 . 395) (nil font-lock-face web-mode-html-attr-equal-face 394 . 395) (nil part-side jsx 386 . 394) (nil jsx-depth 1 386 . 394) (nil tag-attr t 386 . 394) (nil tag-name "main" 386 . 394) (nil tag-type start 386 . 394) (nil font-lock-face web-mode-html-attr-name-face 386 . 394) (nil part-side jsx 385 . 386) (nil jsx-depth 1 385 . 386) (nil tag-attr-beg 0 385 . 386) (nil tag-attr t 385 . 386) (nil tag-name "main" 385 . 386) (nil tag-type start 385 . 386) (nil font-lock-face web-mode-html-attr-name-face 385 . 386) (nil part-side jsx 384 . 385) (nil jsx-depth 1 384 . 385) (nil tag-name "main" 384 . 385) (nil tag-type start 384 . 385) (nil part-side jsx 380 . 384) (nil jsx-depth 1 380 . 384) (nil tag-name "main" 380 . 384) (nil tag-type start 380 . 384) (nil font-lock-face web-mode-html-tag-face 380 . 384) (nil part-side jsx 379 . 380) (nil jsx-depth 1 379 . 380) (nil tag-name "main" 379 . 380) (nil tag-type start 379 . 380) (nil tag-beg 17 379 . 380) (nil font-lock-face web-mode-html-tag-bracket-face 379 . 380) (nil part-side jsx 372 . 379) (nil jsx-depth 1 372 . 379) (nil part-side jsx 371 . 372) (nil jsx-depth 2 371 . 372) (nil jsx-end 2 371 . 372) (nil font-lock-face web-mode-block-delimiter-face 371 . 372) (nil part-side jsx 370 . 371) (nil jsx-depth 2 370 . 371) (nil part-token comment 370 . 371) (nil syntax-table (12) 370 . 371) (nil font-lock-face web-mode-javascript-comment-face 370 . 371) (nil part-side jsx 354 . 370) (nil jsx-depth 2 354 . 370) (nil part-token comment 354 . 370) (nil font-lock-face web-mode-javascript-comment-face 354 . 370) (nil part-side jsx 353 . 354) (nil jsx-depth 2 353 . 354) (nil part-token comment 353 . 354) (nil syntax-table (11) 353 . 354) (nil font-lock-face web-mode-javascript-comment-face 353 . 354) (nil part-side jsx 352 . 353) (nil jsx-depth 2 352 . 353) (nil jsx-beg 2 352 . 353) (nil font-lock-face web-mode-block-delimiter-face 352 . 353) (nil part-side jsx 338 . 352) (nil jsx-depth 1 338 . 352) (nil part-side jsx 337 . 338) (nil jsx-depth 1 337 . 338) (nil tag-name "div" 337 . 338) (nil tag-type end 337 . 338) (nil tag-end t 337 . 338) (nil font-lock-face web-mode-html-tag-bracket-face 337 . 338) (nil part-side jsx 334 . 337) (nil jsx-depth 1 334 . 337) (nil tag-name "div" 334 . 337) (nil tag-type end 334 . 337) (nil font-lock-face web-mode-html-tag-face 334 . 337) (nil part-side jsx 333 . 334) (nil jsx-depth 1 333 . 334) (nil tag-name "div" 333 . 334) (nil tag-type end 333 . 334) (nil font-lock-face web-mode-html-tag-bracket-face 333 . 334) (nil part-side jsx 332 . 333) (nil jsx-depth 1 332 . 333) (nil tag-name "div" 332 . 333) (nil tag-type end 332 . 333) (nil tag-beg 20 332 . 333) (nil font-lock-face web-mode-html-tag-bracket-face 332 . 333) (nil part-side jsx 325 . 332) (nil jsx-depth 1 325 . 332) (nil part-side jsx 324 . 325) (nil jsx-depth 1 324 . 325) (nil tag-name "matrixrainingletters" 324 . 325) (nil tag-type void 324 . 325) (nil tag-end t 324 . 325) (nil font-lock-face web-mode-html-tag-bracket-face 324 . 325) (nil part-side jsx 323 . 324) (nil jsx-depth 1 323 . 324) (nil tag-name "matrixrainingletters" 323 . 324) (nil tag-type void 323 . 324) (nil font-lock-face web-mode-html-tag-bracket-face 323 . 324) (nil part-side jsx 322 . 323) (nil jsx-depth 1 322 . 323) (nil tag-name "matrixrainingletters" 322 . 323) (nil tag-type void 322 . 323) (nil part-side jsx 321 . 322) (nil jsx-depth 1 321 . 322) (nil tag-attr t 321 . 322) (nil tag-attr-end 12 321 . 322) (nil tag-name "matrixrainingletters" 321 . 322) (nil tag-type void 321 . 322) (nil font-lock-face web-mode-html-attr-value-face 321 . 322) (nil part-side jsx 294 . 321) (nil jsx-depth 1 294 . 321) (nil tag-attr t 294 . 321) (nil tag-name "matrixrainingletters" 294 . 321) (nil tag-type void 294 . 321) (nil font-lock-face web-mode-html-attr-value-face 294 . 321) (nil part-side jsx 293 . 294) (nil jsx-depth 1 293 . 294) (nil tag-attr t 293 . 294) (nil tag-name "matrixrainingletters" 293 . 294) (nil tag-type void 293 . 294) (nil font-lock-face web-mode-html-attr-equal-face 293 . 294) (nil part-side jsx 282 . 293) (nil jsx-depth 1 282 . 293) (nil tag-attr t 282 . 293) (nil tag-name "matrixrainingletters" 282 . 293) (nil tag-type void 282 . 293) (nil font-lock-face web-mode-html-attr-name-face 282 . 293) (nil part-side jsx 281 . 282) (nil jsx-depth 1 281 . 282) (nil tag-attr-beg 0 281 . 282) (nil tag-attr t 281 . 282) (nil tag-name "matrixrainingletters" 281 . 282) (nil tag-type void 281 . 282) (nil font-lock-face web-mode-html-attr-name-face 281 . 282) (nil part-side jsx 280 . 281) (nil jsx-depth 1 280 . 281) (nil tag-name "matrixrainingletters" 280 . 281) (nil tag-type void 280 . 281) (nil part-side jsx 260 . 280) (nil jsx-depth 1 260 . 280) (nil tag-name "matrixrainingletters" 260 . 280) (nil tag-type void 260 . 280) (nil font-lock-face web-mode-html-tag-face 260 . 280) (nil part-side jsx 259 . 260) (nil jsx-depth 1 259 . 260) (nil tag-name "matrixrainingletters" 259 . 260) (nil tag-type void 259 . 260) (nil tag-beg 25 259 . 260) (nil font-lock-face web-mode-html-tag-bracket-face 259 . 260) (nil part-side jsx 250 . 259) (nil jsx-depth 1 250 . 259) (nil part-side jsx 249 . 250) (nil jsx-depth 1 249 . 250) (nil tag-name "div" 249 . 250) (nil tag-type start 249 . 250) (nil tag-end t 249 . 250) (nil font-lock-face web-mode-html-tag-bracket-face 249 . 250) (nil part-side jsx 248 . 249) (nil jsx-depth 1 248 . 249) (nil tag-attr t 248 . 249) (nil tag-attr-end 9 248 . 249) (nil tag-name "div" 248 . 249) (nil tag-type start 248 . 249) (nil font-lock-face web-mode-html-attr-value-face 248 . 249) (nil part-side jsx 221 . 248) (nil jsx-depth 1 221 . 248) (nil tag-attr t 221 . 248) (nil tag-name "div" 221 . 248) (nil tag-type start 221 . 248) (nil font-lock-face web-mode-html-attr-value-face 221 . 248) (nil part-side jsx 220 . 221) (nil jsx-depth 1 220 . 221) (nil tag-attr t 220 . 221) (nil tag-name "div" 220 . 221) (nil tag-type start 220 . 221) (nil font-lock-face web-mode-html-attr-equal-face 220 . 221) (nil part-side jsx 212 . 220) (nil jsx-depth 1 212 . 220) (nil tag-attr t 212 . 220) (nil tag-name "div" 212 . 220) (nil tag-type start 212 . 220) (nil font-lock-face web-mode-html-attr-name-face 212 . 220) (nil part-side jsx 211 . 212) (nil jsx-depth 1 211 . 212) (nil tag-attr-beg 0 211 . 212) (nil tag-attr t 211 . 212) (nil tag-name "div" 211 . 212) (nil tag-type start 211 . 212) (nil font-lock-face web-mode-html-attr-name-face 211 . 212) (nil part-side jsx 210 . 211) (nil jsx-depth 1 210 . 211) (nil tag-name "div" 210 . 211) (nil tag-type start 210 . 211) (nil part-side jsx 207 . 210) (nil jsx-depth 1 207 . 210) (nil tag-name "div" 207 . 210) (nil tag-type start 207 . 210) (nil font-lock-face web-mode-html-tag-face 207 . 210) (nil part-side jsx 206 . 207) (nil jsx-depth 1 206 . 207) (nil tag-name "div" 206 . 207) (nil tag-type start 206 . 207) (nil tag-beg 17 206 . 207) (nil font-lock-face web-mode-html-tag-bracket-face 206 . 207) (nil part-side jsx 199 . 206) (nil jsx-depth 1 199 . 206) (nil part-side jsx 198 . 199) (nil jsx-depth 2 198 . 199) (nil jsx-end 2 198 . 199) (nil font-lock-face web-mode-block-delimiter-face 198 . 199) (nil part-side jsx 197 . 198) (nil jsx-depth 2 197 . 198) (nil part-token comment 197 . 198) (nil syntax-table (12) 197 . 198) (nil font-lock-face web-mode-javascript-comment-face 197 . 198) (nil part-side jsx 184 . 197) (nil jsx-depth 2 184 . 197) (nil part-token comment 184 . 197) (nil font-lock-face web-mode-javascript-comment-face 184 . 197) (nil part-side jsx 182 . 184) (nil jsx-depth 2 182 . 184) (nil part-token comment 182 . 184) (nil font-lock-face web-mode-javascript-comment-face 182 . 184) (nil part-side jsx 164 . 182) (nil jsx-depth 2 164 . 182) (nil part-token comment 164 . 182) (nil font-lock-face web-mode-javascript-comment-face 164 . 182) (nil part-side jsx 163 . 164) (nil jsx-depth 2 163 . 164) (nil part-token comment 163 . 164) (nil syntax-table (11) 163 . 164) (nil font-lock-face web-mode-javascript-comment-face 163 . 164) (nil part-side jsx 162 . 163) (nil jsx-depth 2 162 . 163) (nil jsx-beg 2 162 . 163) (nil font-lock-face web-mode-block-delimiter-face 162 . 163) (nil part-side jsx 155 . 162) (nil jsx-depth 1 155 . 162) (nil part-side jsx 154 . 155) (nil jsx-depth 1 154 . 155) (nil tag-name "div" 154 . 155) (nil tag-type start 154 . 155) (nil tag-end t 154 . 155) (nil font-lock-face web-mode-html-tag-bracket-face 154 . 155) (nil part-side jsx 153 . 154) (nil jsx-depth 1 153 . 154) (nil tag-attr t 153 . 154) (nil tag-attr-end 9 153 . 154) (nil tag-name "div" 153 . 154) (nil tag-type start 153 . 154) (nil font-lock-face web-mode-html-attr-value-face 153 . 154) (nil part-side jsx 144 . 153) (nil jsx-depth 1 144 . 153) (nil tag-attr t 144 . 153) (nil tag-name "div" 144 . 153) (nil tag-type start 144 . 153) (nil font-lock-face web-mode-html-attr-value-face 144 . 153) (nil part-side jsx 143 . 144) (nil jsx-depth 1 143 . 144) (nil tag-attr t 143 . 144) (nil tag-name "div" 143 . 144) (nil tag-type start 143 . 144) (nil font-lock-face web-mode-html-attr-equal-face 143 . 144) (nil part-side jsx 135 . 143) (nil jsx-depth 1 135 . 143) (nil tag-attr t 135 . 143) (nil tag-name "div" 135 . 143) (nil tag-type start 135 . 143) (nil font-lock-face web-mode-html-attr-name-face 135 . 143) (nil part-side jsx 134 . 135) (nil jsx-depth 1 134 . 135) (nil tag-attr-beg 0 134 . 135) (nil tag-attr t 134 . 135) (nil tag-name "div" 134 . 135) (nil tag-type start 134 . 135) (nil font-lock-face web-mode-html-attr-name-face 134 . 135) (nil part-side jsx 133 . 134) (nil jsx-depth 1 133 . 134) (nil tag-name "div" 133 . 134) (nil tag-type start 133 . 134) (nil part-side jsx 130 . 133) (nil jsx-depth 1 130 . 133) (nil tag-name "div" 130 . 133) (nil tag-type start 130 . 133) (nil font-lock-face web-mode-html-tag-face 130 . 133) (nil part-side jsx 129 . 130) (nil jsx-beg 1 129 . 130) (nil jsx-depth 1 129 . 130) (nil tag-name "div" 129 . 130) (nil tag-type start 129 . 130) (nil tag-beg 17 129 . 130) (nil font-lock-face web-mode-html-tag-bracket-face 129 . 130) (nil part-side jsx 122 . 129) (nil part-side jsx 116 . 122) (nil face web-mode-keyword-face 116 . 122) (nil part-side jsx 105 . 116) (nil part-side jsx 97 . 105) (nil face web-mode-variable-name-face 97 . 105) (nil part-side jsx 91 . 97) (nil part-side jsx 85 . 91) (nil face web-mode-function-name-face 85 . 91) (nil part-side jsx 84 . 85) (nil part-side jsx 79 . 84) (nil face web-mode-keyword-face 79 . 84) (nil part-side jsx 76 . 79) (nil part-side jsx 75 . 76) (nil part-token string 75 . 76) (nil syntax-table (15) 75 . 76) (nil font-lock-face web-mode-javascript-string-face 75 . 76) (nil part-side jsx 66 . 75) (nil part-token string 66 . 75) (nil font-lock-face web-mode-javascript-string-face 66 . 75) (nil part-side jsx 65 . 66) (nil part-token string 65 . 66) (nil syntax-table (15) 65 . 66) (nil font-lock-face web-mode-javascript-string-face 65 . 66) (nil part-side jsx 64 . 65) (nil part-side jsx 60 . 64) (nil face web-mode-keyword-face 60 . 64) (nil part-side jsx 34 . 60) (nil part-side jsx 28 . 34) (nil face web-mode-keyword-face 28 . 34) (nil part-side jsx 26 . 28) (nil part-side jsx 25 . 26) (nil part-token string 25 . 26) (nil syntax-table (15) 25 . 26) (nil font-lock-face web-mode-javascript-string-face 25 . 26) (nil part-side jsx 20 . 25) (nil part-token string 20 . 25) (nil font-lock-face web-mode-javascript-string-face 20 . 25) (nil part-side jsx 19 . 20) (nil part-token string 19 . 20) (nil syntax-table (15) 19 . 20) (nil font-lock-face web-mode-javascript-string-face 19 . 20) (nil part-side jsx 18 . 19) (nil part-side jsx 14 . 18) (nil face web-mode-keyword-face 14 . 18) (nil part-side jsx 13 . 14) (nil part-side jsx 8 . 13) (nil face web-mode-type-face 8 . 13) (nil part-side jsx 7 . 8) (nil part-side jsx 1 . 7) (nil face web-mode-keyword-face 1 . 7) (1 . 631) (t 26130 34621 543496 392000)) ((#("import React from 'react';
import { MatrixRainingLetters } from 'react-mdr';

const Layout = ({ children }) => {
  return (
    <div className=\"relative\">
      {/* Raining letters as background */}
      <div className=\"absolute z-0 h-full w-full\">
        <MatrixRainingLetters custom_class=\"absolute z-0 h-full w-full\" />
      </div>
      
      {/* Main content */}
      <main className='relative z-10 overflow-auto'>
        {children}
      </main>
      
      {/* Footer */}
      <footer>
        {/* Footer content */}
        <p>Copyright Â© 2024 My App</p>
      </footer>
    </div>
  );
};

export default Layout;
" 0 6 (face web-mode-keyword-face part-side jsx) 6 7 (part-side jsx) 7 12 (face web-mode-type-face part-side jsx) 12 13 (part-side jsx) 13 17 (face web-mode-keyword-face part-side jsx) 17 18 (part-side jsx) 18 19 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 19 24 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 24 25 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 25 27 (part-side jsx) 27 33 (face web-mode-keyword-face part-side jsx) 33 59 (part-side jsx) 59 63 (face web-mode-keyword-face part-side jsx) 63 64 (part-side jsx) 64 65 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 65 74 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 74 75 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 75 77 (part-side jsx) 77 78 (part-side jsx) 78 83 (face web-mode-keyword-face part-side jsx) 83 84 (part-side jsx) 84 90 (face web-mode-function-name-face part-side jsx) 90 96 (part-side jsx) 96 104 (face web-mode-variable-name-face part-side jsx) 104 113 (part-side jsx) 113 115 (part-side jsx) 115 121 (face web-mode-keyword-face part-side jsx) 121 124 (part-side jsx) 124 128 (part-side jsx) 128 129 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 129 132 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 132 133 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 133 134 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 134 142 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 142 143 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 143 152 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 152 153 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 153 154 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 154 161 (jsx-depth 1 part-side jsx) 161 162 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 162 163 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 163 181 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 181 183 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 183 196 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 196 197 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 197 198 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 198 205 (jsx-depth 1 part-side jsx) 205 206 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 206 209 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 209 210 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 210 211 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 211 219 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 219 220 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 220 247 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 247 248 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 248 249 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 249 258 (jsx-depth 1 part-side jsx) 258 259 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 259 279 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 279 280 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 280 281 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 281 292 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 292 293 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 293 320 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 320 321 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 321 322 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 322 323 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 323 324 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 324 331 (jsx-depth 1 part-side jsx) 331 332 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 332 333 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 333 336 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 336 337 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 337 351 (jsx-depth 1 part-side jsx) 351 352 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 352 353 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 353 369 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 369 370 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 370 371 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 371 378 (jsx-depth 1 part-side jsx) 378 379 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "main" jsx-depth 1 part-side jsx) 379 383 (font-lock-face web-mode-html-tag-face tag-type start tag-name "main" jsx-depth 1 part-side jsx) 383 384 (tag-type start tag-name "main" jsx-depth 1 part-side jsx) 384 385 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 385 393 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 393 394 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 394 422 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 422 423 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 423 424 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "main" jsx-depth 1 part-side jsx) 424 433 (jsx-depth 1 part-side jsx) 433 434 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 434 442 (jsx-depth 2 part-side jsx) 442 443 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 443 450 (jsx-depth 1 part-side jsx) 450 451 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "main" jsx-depth 1 part-side jsx) 451 452 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 452 456 (font-lock-face web-mode-html-tag-face tag-type end tag-name "main" jsx-depth 1 part-side jsx) 456 457 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "main" jsx-depth 1 part-side jsx) 457 471 (jsx-depth 1 part-side jsx) 471 472 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 472 473 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 473 483 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 483 484 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 484 485 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 485 492 (jsx-depth 1 part-side jsx) 492 493 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 493 499 (font-lock-face web-mode-html-tag-face tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 499 500 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "footer" jsx-depth 1 part-side jsx) 500 509 (jsx-depth 1 part-side jsx) 509 510 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 510 511 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 511 529 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 529 530 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 530 531 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 531 540 (jsx-depth 1 part-side jsx) 540 541 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p" jsx-depth 1 part-side jsx) 541 542 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 1 part-side jsx) 542 543 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 1 part-side jsx) 543 566 (jsx-depth 1 part-side jsx) 566 567 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 1 part-side jsx) 567 568 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 568 569 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 569 570 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 1 part-side jsx) 570 577 (jsx-depth 1 part-side jsx) 577 578 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 578 579 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 579 585 (font-lock-face web-mode-html-tag-face tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 585 586 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "footer" jsx-depth 1 part-side jsx) 586 591 (jsx-depth 1 part-side jsx) 591 592 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 592 593 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 593 596 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 596 597 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx) 597 603 (part-side jsx) 603 606 (part-side jsx) 606 607 (part-side jsx) 607 613 (face web-mode-keyword-face part-side jsx) 613 614 (part-side jsx) 614 621 (face web-mode-keyword-face part-side jsx) 621 629 (part-side jsx) 629 630 (part-side jsx rear-nonsticky nil)) . 1) (undo-tree-id265 . -629) (undo-tree-id266 . -630) (undo-tree-id267 . -630) (undo-tree-id268 . -630) (undo-tree-id269 . -630) (undo-tree-id270 . -630) (undo-tree-id271 . -630) (nil syntax-table (15) 19 . 20) (nil syntax-table (15) 25 . 26) (nil syntax-table (15) 65 . 66) (nil syntax-table (15) 75 . 76) (nil tag-name "div" 129 . 130) (nil tag-name "div" 130 . 133) (nil tag-name "div" 133 . 134) (nil tag-name "div" 134 . 135) (nil tag-name "div" 135 . 143) (nil tag-name "div" 143 . 144) (nil tag-name "div" 144 . 153) (nil tag-name "div" 153 . 154) (nil tag-name "div" 154 . 155) (nil syntax-table (11) 163 . 164) (nil syntax-table (12) 197 . 198) (nil tag-name "div" 206 . 207) (nil tag-name "div" 207 . 210) (nil tag-name "div" 210 . 211) (nil tag-name "div" 211 . 212) (nil tag-name "div" 212 . 220) (nil tag-name "div" 220 . 221) (nil tag-name "div" 221 . 248) (nil tag-name "div" 248 . 249) (nil tag-name "div" 249 . 250) (nil tag-name "matrixrainingletters" 259 . 260) (nil tag-name "matrixrainingletters" 260 . 280) (nil tag-name "matrixrainingletters" 280 . 281) (nil tag-name "matrixrainingletters" 281 . 282) (nil tag-name "matrixrainingletters" 282 . 293) (nil tag-name "matrixrainingletters" 293 . 294) (nil tag-name "matrixrainingletters" 294 . 321) (nil tag-name "matrixrainingletters" 321 . 322) (nil tag-name "matrixrainingletters" 322 . 323) (nil tag-name "matrixrainingletters" 323 . 324) (nil tag-name "matrixrainingletters" 324 . 325) (nil tag-name "div" 332 . 333) (nil tag-name "div" 333 . 334) (nil tag-name "div" 334 . 337) (nil tag-name "div" 337 . 338) (nil syntax-table (11) 353 . 354) (nil syntax-table (12) 370 . 371) (nil tag-name "main" 379 . 380) (nil tag-name "main" 380 . 384) (nil tag-name "main" 384 . 385) (nil tag-name "main" 385 . 386) (nil tag-name "main" 386 . 394) (nil tag-name "main" 394 . 395) (nil tag-name "main" 395 . 423) (nil tag-name "main" 423 . 424) (nil tag-name "main" 424 . 425) (nil tag-name "main" 451 . 452) (nil tag-name "main" 452 . 453) (nil tag-name "main" 453 . 457) (nil tag-name "main" 457 . 458) (nil syntax-table (11) 473 . 474) (nil syntax-table (12) 484 . 485) (nil tag-name "footer" 493 . 494) (nil tag-name "footer" 494 . 500) (nil tag-name "footer" 500 . 501) (nil syntax-table (11) 511 . 512) (nil syntax-table (12) 530 . 531) (nil tag-name "p" 541 . 542) (nil tag-name "p" 542 . 543) (nil tag-name "p" 543 . 544) (nil tag-name "p" 567 . 568) (nil tag-name "p" 568 . 569) (nil tag-name "p" 569 . 570) (nil tag-name "p" 570 . 571) (nil tag-name "footer" 578 . 579) (nil tag-name "footer" 579 . 580) (nil tag-name "footer" 580 . 586) (nil tag-name "footer" 586 . 587) (nil tag-name "div" 592 . 593) (nil tag-name "div" 593 . 594) (nil tag-name "div" 594 . 597) (nil tag-name "div" 597 . 598) (nil rear-nonsticky t 630 . 631) (t 26130 34623 843498 59000)) (26130 34623 827692 64000) 0 nil])
([nil nil ((#("    " 0 4 (jsx-depth 1 part-side jsx)) . -271) 335 (t 26130 34035 683071 947000)) ((271 . 275) (t 26130 34037 686406 733000)) (26130 34037 678810 363000) 0 nil])
([nil nil ((147 . 151) (t 26130 33069 548245 850000)) ((#("div>" 0 3 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx)) . 147) (undo-tree-id21 . -4) (undo-tree-id22 . -3) (undo-tree-id23 . -3)) (26130 33096 619016 181000) 0 nil])
([nil nil ((#("%" 0 1 (font-lock-face web-mode-javascript-string-face part-token string tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx)) . 249)) ((249 . 250)) (26130 30296 942431 461000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -278) (undo-tree-id982 . -1) (undo-tree-id983 . -1) 279) nil (26130 39062 393185 674000) 0 nil])
([nil nil ((298 . 299) (#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 298) (t 26130 38132 898275 596000)) ((298 . 299) (#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 298) (t 26130 38618 212073 633000)) (26130 38617 197777 716000) 0 nil])
([nil nil ((#("    " 0 4 (jsx-depth 1 part-side jsx)) . -492) (undo-tree-id616 . -4) (496 . 502)) ((#("</div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 2 5 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx)) . 496) (undo-tree-id674 . -6) (undo-tree-id675 . -5) (492 . 496) (t 26130 38094 268238 590000)) (26130 38093 255869 591000) 0 nil])
([nil nil ((#("	<div className=\"relative\">
	    {/* MatrixRainingLetters as background */}
	    <div className=\"absolute inset-0 z-0\">
		<MatrixRainingLetters custom_class=\"absolute inset-0 z-0\" />
	    </div>
" 0 1 (part-side jsx) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 2 5 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 5 6 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 7 15 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 15 16 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 25 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 25 26 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 26 27 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 27 33 (jsx-depth 1 part-side jsx) 33 34 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 34 35 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 35 58 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 58 60 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 60 73 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 73 74 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 74 75 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 75 81 (jsx-depth 1 part-side jsx) 81 82 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 82 85 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 85 86 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 86 87 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 87 95 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 95 96 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 96 117 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 117 118 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 118 119 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 119 122 (jsx-depth 1 part-side jsx) 122 123 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 123 143 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 143 144 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 144 145 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 145 156 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 156 157 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 157 178 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 178 179 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 179 180 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 180 181 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 181 182 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 182 188 (jsx-depth 1 part-side jsx) 188 189 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 189 190 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 190 193 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 193 194 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx rear-nonsticky t) 194 195 (jsx-depth 1 part-side jsx)) . 141) (undo-tree-id578 . -193) (undo-tree-id579 . -194) (undo-tree-id580 . -193) (undo-tree-id581 . -10) (undo-tree-id583 . -194) (undo-tree-id585 . -193) (undo-tree-id587 . -10) (undo-tree-id589 . -10) 151 (t 26130 37941 528092 306000)) ((141 . 336)) (26130 37964 965992 24000) 0 nil])
([nil nil ((612 . 614) (t 26130 34718 130233 31000)) ((#("
	" 0 2 (part-side jsx)) . 612) (undo-tree-id321 . -2) (undo-tree-id322 . -2) (undo-tree-id323 . -2) (undo-tree-id324 . -2) (undo-tree-id325 . -2) (undo-tree-id326 . -2) (undo-tree-id327 . -1) (undo-tree-id328 . -2) (undo-tree-id329 . -1)) (26130 34727 108527 509000) 0 nil])
nil
nil
([nil nil ((#("      </div>
" 0 6 (jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 8 11 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 12 13 (jsx-depth 1 part-side jsx)) . 139) (undo-tree-id8 . -12) (undo-tree-id9 . 1) (undo-tree-id11 . -11) (undo-tree-id13 . -11) (undo-tree-id14 . -11) (undo-tree-id16 . -13) 150 (t 26130 33072 704918 297000)) ((139 . 152)) (26130 33096 258987 200000) 0 nil])
([nil nil ((#("style={{ height: '100' }" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 1 5 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 7 9 (tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 9 15 (face web-mode-variable-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 15 17 (tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 17 18 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 18 21 (font-lock-face web-mode-javascript-string-face part-token string tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 21 22 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 22 24 (tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx)) . 228) (undo-tree-id339 . -23) (undo-tree-id340 . 4) (undo-tree-id341 . -23) (undo-tree-id342 . -23) (undo-tree-id344 . -21) (undo-tree-id346 . -23) (undo-tree-id348 . -24) 251 (t 26130 29460 868646 443000)) ((228 . 252)) (26130 30296 634456 230000) 0 nil] [nil nil ((249 . 251)) ((#("vh" 0 1 (font-lock-face web-mode-javascript-string-face part-token string tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 1 2 (font-lock-face web-mode-javascript-string-face part-token string tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx)) . 249) (undo-tree-id288 . -2) (undo-tree-id289 . -2)) (26130 29372 43062 712000) 0 nil])
([nil nil ((278 . 285)) nil (26130 39062 393184 354000) 0 nil])
([nil nil ((268 . 277) (t 26130 38141 684950 681000)) ((#("relative " 0 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 268) (undo-tree-id925 . -9) (undo-tree-id926 . -9) (undo-tree-id927 . -9) (t 26130 38612 808735 119000)) (26130 38611 797303 47000) 0 nil] [nil nil ((nil rear-nonsticky nil 342 . 343) (nil part-side jsx 330 . 343) (nil jsx-depth 1 330 . 343) (330 . 343) 329 (t 26130 38141 684950 681000)) ((#("relative z-10" 0 12 (jsx-depth 1 part-side jsx) 12 13 (jsx-depth 1 part-side jsx rear-nonsticky nil)) . 330) (undo-tree-id703 . -12) (undo-tree-id704 . -12) (undo-tree-id705 . -12) (nil rear-nonsticky t 342 . 343)) (26130 38156 847530 865000) 0 nil])
([nil nil ((#("		<div className=\"relative\">
" 0 1 (jsx-depth 1 part-side jsx rear-nonsticky t) 1 2 (jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 8 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 26 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 26 27 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 27 28 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 28 29 (jsx-depth 1 part-side jsx)) . 290) (undo-tree-id636 . -28) (undo-tree-id637 . -7) (undo-tree-id639 . -7) (undo-tree-id641 . -7) (undo-tree-id642 . -7) (undo-tree-id644 . -29) 297 (t 26130 37991 61473 97000)) ((290 . 319)) (26130 38092 915856 980000) 0 nil])
([nil nil ((nil rear-nonsticky nil 227 . 228) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -421) (226 . 422) 215) ((#("
	<div className=\"relative\">
	    {/* MatrixRainingLetters as background */}
	    <div className=\"absolute inset-0 z-0\">
		<MatrixRainingLetters custom_class=\"absolute inset-0 z-0\" />
	    </div>
" 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx rear-nonsticky nil) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 8 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 26 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 26 27 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 27 28 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 28 34 (jsx-depth 1 part-side jsx) 34 35 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 35 36 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 36 59 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 59 61 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 61 74 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 74 75 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 75 76 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 76 82 (jsx-depth 1 part-side jsx) 82 83 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 83 86 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 86 87 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 87 88 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 88 96 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 96 97 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 97 118 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 118 119 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 119 120 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 120 123 (jsx-depth 1 part-side jsx) 123 124 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 124 144 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 144 145 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 145 146 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 146 157 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 157 158 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 158 179 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 179 180 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 180 181 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 181 182 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 182 183 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 183 189 (jsx-depth 1 part-side jsx) 189 190 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 190 191 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 191 194 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 194 195 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 195 196 (jsx-depth 1 part-side jsx)) . 226) (undo-tree-id596 . -195) (undo-tree-id597 . -195) (undo-tree-id598 . -1) (undo-tree-id599 . -2) (undo-tree-id600 . -2) (undo-tree-id601 . -2) (undo-tree-id602 . -2) (undo-tree-id603 . -2) (421 . 422) (nil rear-nonsticky t 227 . 228)) (26130 37964 491423 323000) 0 nil] [nil nil ((nil rear-nonsticky nil 215 . 216) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -409) (214 . 410) 182) ((#("
	<div className=\"relative\">
	    {/* MatrixRainingLetters as background */}
	    <div className=\"absolute inset-0 z-0\">
		<MatrixRainingLetters custom_class=\"absolute inset-0 z-0\" />
	    </div>
" 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx rear-nonsticky nil) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 8 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 26 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 26 27 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 27 28 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 28 34 (jsx-depth 1 part-side jsx) 34 35 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 35 36 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 36 59 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 59 61 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 61 74 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 74 75 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 75 76 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 76 82 (jsx-depth 1 part-side jsx) 82 83 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 83 86 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 86 87 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 87 88 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 88 96 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 96 97 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 97 118 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 118 119 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 119 120 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 120 123 (jsx-depth 1 part-side jsx) 123 124 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 124 144 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 144 145 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 145 146 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 146 157 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 157 158 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 158 179 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 179 180 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 180 181 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 181 182 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 182 183 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 183 189 (jsx-depth 1 part-side jsx) 189 190 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 190 191 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 191 194 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 194 195 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 195 196 (jsx-depth 1 part-side jsx)) . 214) (undo-tree-id591 . -195) (undo-tree-id592 . -195) (undo-tree-id593 . -1) (undo-tree-id594 . -2) (undo-tree-id595 . -2) (409 . 410) (nil rear-nonsticky t 215 . 216)) (26130 37955 642155 5000) 0 nil])
([nil nil ((614 . 619)) ((#("</div" 0 1 (part-side jsx) 1 2 (part-side jsx) 2 5 (part-side jsx)) . 614) (undo-tree-id312 . -5) (undo-tree-id313 . -5) (undo-tree-id314 . -5) (undo-tree-id315 . -5) (undo-tree-id316 . -5) (undo-tree-id317 . -5) (undo-tree-id318 . -4) (undo-tree-id319 . -4) (undo-tree-id320 . -4)) (26130 34726 960935 969000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "div" jsx-depth 1 part-side jsx)) . -168) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 169 (t 26130 33081 94933 660000)) ((168 . 169) (t 26130 33084 821607 153000)) (26130 33084 817301 332000) 0 nil])
([nil nil ((228 . 229)) ((#("x" 0 1 (part-side jsx)) . 228) (undo-tree-id664 . -1) (undo-tree-id665 . -1)) (26130 30296 294373 51000) 0 nil])
([nil nil ((#("v" 0 1 (font-lock-face web-mode-javascript-string-face part-token string tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx)) . -249) (undo-tree-id275 . -1) (undo-tree-id277 . -1) (undo-tree-id279 . -1) (#("h" 0 1 (font-lock-face web-mode-javascript-string-face part-token string tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx)) . -250) (undo-tree-id281 . -1) (undo-tree-id283 . -1) 251 (t 26130 29347 938592 196000)) ((249 . 251)) (26130 29371 701768 93000) 0 nil])
([nil nil ((#(";" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -284) (undo-tree-id980 . -1) (undo-tree-id981 . -1) 285) nil (26130 39062 393183 454000) 0 nil])
([nil nil ((312 . 319) (t 26130 38168 944976 777000)) ((#("
		    " 0 1 (jsx-depth 1 part-side jsx) 1 3 (jsx-depth 1 part-side jsx) 3 7 (jsx-depth 1 part-side jsx)) . 312) (undo-tree-id921 . -7) (undo-tree-id922 . -1) (undo-tree-id923 . -6) (undo-tree-id924 . -6)) (26130 38611 631097 99000) 0 nil])
nil
([nil nil ((#("		</div>
" 0 2 (jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 4 7 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 8 9 (jsx-depth 1 part-side jsx)) . 461) (undo-tree-id617 . -7) (undo-tree-id618 . -8) (undo-tree-id619 . 1) (undo-tree-id620 . -7) (undo-tree-id622 . -2) (undo-tree-id624 . -8) (undo-tree-id626 . -7) (undo-tree-id628 . -7) (undo-tree-id630 . -7) (undo-tree-id632 . -7) (undo-tree-id633 . -7) (undo-tree-id635 . -9) 468) ((461 . 470)) (26130 38092 575936 700000) 0 nil])
([nil nil ((#("    " 0 4 (jsx-depth 1 part-side jsx)) . -619) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -608) (608 . 609) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 608) (604 . 608) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -572) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -547) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -536) (536 . 537) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 536) (532 . 536) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -523) (523 . 524) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 523) (519 . 523) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -507) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -484) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -423) (423 . 424) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 423) (419 . 423) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -213) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . -185) (185 . 186) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 185) (181 . 185) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . -157) (157 . 158) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 157) (153 . 157) (#("	" 0 1 (part-side jsx)) . -143) 228 (t 26130 37957 241440 684000)) ((143 . 144) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 153) (157 . 158) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 157) (157 . 162) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 181) (185 . 186) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 185) (185 . 190) (213 . 214) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 419) (423 . 424) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 423) (423 . 424) (484 . 488) (507 . 511) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 519) (523 . 524) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 523) (523 . 524) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 532) (536 . 537) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 536) (536 . 537) (547 . 551) (572 . 576) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 604) (608 . 609) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 608) (608 . 609) (619 . 623) (t 26130 37960 161443 483000)) (26130 37960 154145 696000) 0 nil])
nil
([nil nil ((619 . 620)) ((#(">" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx)) . 619) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (t 26130 34724 523570 997000)) (26130 34724 514375 896000) 0 nil])
nil
([nil nil ((#("x" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx)) . -228) (undo-tree-id337 . -1) 229) ((228 . 229)) (26130 30296 26629 50000) 0 nil])
([nil nil ((249 . 251)) ((#("em" 0 2 (font-lock-face web-mode-javascript-string-face part-token string tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx)) . 249)) (26130 29371 114033 398000) 0 nil])
([nil nil ((284 . 285)) nil (26130 39062 393174 44000) 0 nil])
([nil nil ((nil rear-nonsticky nil 439 . 440) (nil part-side jsx 439 . 440) (nil jsx-depth 1 439 . 440) (nil tag-name "div" 439 . 440) (nil tag-type end 439 . 440) (nil tag-end t 439 . 440) (nil font-lock-face web-mode-html-tag-bracket-face 439 . 440) (nil part-side jsx 436 . 439) (nil jsx-depth 1 436 . 439) (nil tag-name "div" 436 . 439) (nil tag-type end 436 . 439) (nil font-lock-face web-mode-html-tag-face 436 . 439) (nil part-side jsx 435 . 436) (nil jsx-depth 1 435 . 436) (nil tag-name "div" 435 . 436) (nil tag-type end 435 . 436) (nil font-lock-face web-mode-html-tag-bracket-face 435 . 436) (nil part-side jsx 434 . 435) (nil jsx-depth 1 434 . 435) (nil tag-name "div" 434 . 435) (nil tag-type end 434 . 435) (nil tag-beg 20 434 . 435) (nil font-lock-face web-mode-html-tag-bracket-face 434 . 435) (nil part-side jsx 427 . 434) (nil jsx-depth 1 427 . 434) (nil part-side jsx 426 . 427) (nil jsx-depth 1 426 . 427) (nil tag-name "matrixrainingletters" 426 . 427) (nil tag-type void 426 . 427) (nil tag-end t 426 . 427) (nil font-lock-face web-mode-html-tag-bracket-face 426 . 427) (nil part-side jsx 425 . 426) (nil jsx-depth 1 425 . 426) (nil tag-name "matrixrainingletters" 425 . 426) (nil tag-type void 425 . 426) (nil font-lock-face web-mode-html-tag-bracket-face 425 . 426) (nil part-side jsx 424 . 425) (nil jsx-depth 1 424 . 425) (nil tag-name "matrixrainingletters" 424 . 425) (nil tag-type void 424 . 425) (nil part-side jsx 423 . 424) (nil jsx-depth 1 423 . 424) (nil tag-attr t 423 . 424) (nil tag-attr-end 12 423 . 424) (nil tag-name "matrixrainingletters" 423 . 424) (nil tag-type void 423 . 424) (nil font-lock-face web-mode-html-attr-value-face 423 . 424) (nil part-side jsx 402 . 423) (nil jsx-depth 1 402 . 423) (nil tag-attr t 402 . 423) (nil tag-name "matrixrainingletters" 402 . 423) (nil tag-type void 402 . 423) (nil font-lock-face web-mode-html-attr-value-face 402 . 423) (nil part-side jsx 401 . 402) (nil jsx-depth 1 401 . 402) (nil tag-attr t 401 . 402) (nil tag-name "matrixrainingletters" 401 . 402) (nil tag-type void 401 . 402) (nil font-lock-face web-mode-html-attr-equal-face 401 . 402) (nil part-side jsx 390 . 401) (nil jsx-depth 1 390 . 401) (nil tag-attr t 390 . 401) (nil tag-name "matrixrainingletters" 390 . 401) (nil tag-type void 390 . 401) (nil font-lock-face web-mode-html-attr-name-face 390 . 401) (nil part-side jsx 389 . 390) (nil jsx-depth 1 389 . 390) (nil tag-attr-beg 0 389 . 390) (nil tag-attr t 389 . 390) (nil tag-name "matrixrainingletters" 389 . 390) (nil tag-type void 389 . 390) (nil font-lock-face web-mode-html-attr-name-face 389 . 390) (nil part-side jsx 388 . 389) (nil jsx-depth 1 388 . 389) (nil tag-name "matrixrainingletters" 388 . 389) (nil tag-type void 388 . 389) (nil part-side jsx 368 . 388) (nil jsx-depth 1 368 . 388) (nil tag-name "matrixrainingletters" 368 . 388) (nil tag-type void 368 . 388) (nil font-lock-face web-mode-html-tag-face 368 . 388) (nil part-side jsx 367 . 368) (nil jsx-depth 1 367 . 368) (nil tag-name "matrixrainingletters" 367 . 368) (nil tag-type void 367 . 368) (nil tag-beg 25 367 . 368) (nil font-lock-face web-mode-html-tag-bracket-face 367 . 368) (nil part-side jsx 358 . 367) (nil jsx-depth 1 358 . 367) (nil part-side jsx 357 . 358) (nil jsx-depth 1 357 . 358) (nil tag-name "div" 357 . 358) (nil tag-type start 357 . 358) (nil tag-end t 357 . 358) (nil font-lock-face web-mode-html-tag-bracket-face 357 . 358) (nil part-side jsx 356 . 357) (nil jsx-depth 1 356 . 357) (nil tag-attr t 356 . 357) (nil tag-attr-end 9 356 . 357) (nil tag-name "div" 356 . 357) (nil tag-type start 356 . 357) (nil font-lock-face web-mode-html-attr-value-face 356 . 357) (nil part-side jsx 335 . 356) (nil jsx-depth 1 335 . 356) (nil tag-attr t 335 . 356) (nil tag-name "div" 335 . 356) (nil tag-type start 335 . 356) (nil font-lock-face web-mode-html-attr-value-face 335 . 356) (nil part-side jsx 334 . 335) (nil jsx-depth 1 334 . 335) (nil tag-attr t 334 . 335) (nil tag-name "div" 334 . 335) (nil tag-type start 334 . 335) (nil font-lock-face web-mode-html-attr-equal-face 334 . 335) (nil part-side jsx 326 . 334) (nil jsx-depth 1 326 . 334) (nil tag-attr t 326 . 334) (nil tag-name "div" 326 . 334) (nil tag-type start 326 . 334) (nil font-lock-face web-mode-html-attr-name-face 326 . 334) (nil part-side jsx 325 . 326) (nil jsx-depth 1 325 . 326) (nil tag-attr-beg 0 325 . 326) (nil tag-attr t 325 . 326) (nil tag-name "div" 325 . 326) (nil tag-type start 325 . 326) (nil font-lock-face web-mode-html-attr-name-face 325 . 326) (nil part-side jsx 324 . 325) (nil jsx-depth 1 324 . 325) (nil tag-name "div" 324 . 325) (nil tag-type start 324 . 325) (nil part-side jsx 321 . 324) (nil jsx-depth 1 321 . 324) (nil tag-name "div" 321 . 324) (nil tag-type start 321 . 324) (nil font-lock-face web-mode-html-tag-face 321 . 324) (nil part-side jsx 320 . 321) (nil jsx-depth 1 320 . 321) (nil tag-name "div" 320 . 321) (nil tag-type start 320 . 321) (nil tag-beg 17 320 . 321) (nil font-lock-face web-mode-html-tag-bracket-face 320 . 321) (nil part-side jsx 319 . 320) (nil jsx-depth 1 319 . 320) (319 . 440) (t 26130 38184 184991 369000)) ((#(" <div className=\"absolute inset-0 z-0\">
        <MatrixRainingLetters custom_class=\"absolute inset-0 z-0\" />
      </div>" 0 1 (jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 2 5 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 5 6 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 7 15 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 15 16 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 37 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 37 38 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 38 39 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 39 40 (jsx-depth 1 part-side jsx) 40 48 (jsx-depth 1 part-side jsx) 48 49 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 49 69 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 69 70 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 70 71 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 71 82 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 82 83 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 83 104 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 104 105 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 105 106 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 106 107 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 107 108 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 108 109 (jsx-depth 1 part-side jsx) 109 115 (jsx-depth 1 part-side jsx) 115 116 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 116 117 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 117 120 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 120 121 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx rear-nonsticky nil)) . 319) (undo-tree-id918 . -120) (undo-tree-id919 . -120) (undo-tree-id920 . -120) (nil tag-name "div" 320 . 321) (nil tag-name "div" 321 . 324) (nil tag-name "div" 324 . 325) (nil tag-name "div" 325 . 326) (nil tag-name "div" 326 . 334) (nil tag-name "div" 334 . 335) (nil tag-name "div" 335 . 356) (nil tag-name "div" 356 . 357) (nil tag-name "div" 357 . 358) (nil tag-name "matrixrainingletters" 367 . 368) (nil tag-name "matrixrainingletters" 368 . 388) (nil tag-name "matrixrainingletters" 388 . 389) (nil tag-name "matrixrainingletters" 389 . 390) (nil tag-name "matrixrainingletters" 390 . 401) (nil tag-name "matrixrainingletters" 401 . 402) (nil tag-name "matrixrainingletters" 402 . 423) (nil tag-name "matrixrainingletters" 423 . 424) (nil tag-name "matrixrainingletters" 424 . 425) (nil tag-name "matrixrainingletters" 425 . 426) (nil tag-name "matrixrainingletters" 426 . 427) (nil tag-name "div" 434 . 435) (nil tag-name "div" 435 . 436) (nil tag-name "div" 436 . 439) (nil tag-name "div" 439 . 440) (nil rear-nonsticky t 439 . 440)) (26130 38611 442782 130000) 0 nil])
([nil nil ((265 . 274)) ((#("relative " 0 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 265) (undo-tree-id655 . -9) (undo-tree-id656 . -9) (undo-tree-id657 . -9) (undo-tree-id658 . -9) (undo-tree-id659 . -9) (undo-tree-id660 . -9) (undo-tree-id661 . -9) (undo-tree-id662 . -9) (undo-tree-id663 . -9) (undo-tree-id664 . -9) (undo-tree-id665 . -9) (undo-tree-id666 . -9) (undo-tree-id667 . -9) (undo-tree-id668 . -9) (undo-tree-id669 . -9) (undo-tree-id670 . -9) (undo-tree-id671 . -9) (undo-tree-id672 . -9) (undo-tree-id673 . -9) (t 26130 38043 381523 195000)) (26130 38042 366131 515000) 0 nil])
nil
nil
([nil nil ((#("}" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr-end 0 tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx)) . 228) (undo-tree-id335 . 1) (undo-tree-id336 . 1)) ((228 . 229)) (26130 30295 766582 360000) 0 nil])
([nil nil ((248 . 249) (t 26130 29352 671927 804000)) ((#("0" 0 1 (font-lock-face web-mode-javascript-string-face part-token string tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx)) . 248) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (t 26130 29363 588599 714000)) (26130 29363 580182 567000) 0 nil])
([nil nil ((270 . 275) (t 26130 39062 402625 477000)) nil (26130 39091 375995 291000) 0 nil])
([nil nil ((#("    " 0 4 (jsx-depth 1 part-side jsx)) . -564) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -553) (553 . 554) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 553) (549 . 553) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -517) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -492) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -481) (481 . 482) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 481) (477 . 481) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -468) (468 . 469) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 468) (464 . 468) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -452) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -429) (418 . 420) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 418) (351 . 357) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 351) (#("     " 0 4 (jsx-depth 1 part-side jsx) 4 5 (jsx-depth 1 part-side jsx)) . -312) (undo-tree-id706 . -4) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -236) (236 . 237) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 236) (232 . 236) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -221) (221 . 222) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 221) (217 . 221) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -189) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -164) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -153) (153 . 154) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 153) (149 . 153) (#("    " 0 4 (part-side jsx)) . -142) 439 (t 26130 38186 48326 490000)) ((142 . 146) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 149) (153 . 154) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 153) (153 . 154) (164 . 168) (189 . 193) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 217) (221 . 222) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 221) (221 . 222) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 232) (236 . 237) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 236) (236 . 237) (312 . 317) (351 . 359) (#("		    " 0 6 (jsx-depth 1 part-side jsx)) . 351) (418 . 424) (#("		" 0 2 (jsx-depth 1 part-side jsx)) . 418) (429 . 433) (452 . 456) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 464) (468 . 469) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 468) (468 . 469) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 477) (481 . 482) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 481) (481 . 482) (492 . 496) (517 . 521) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 549) (553 . 554) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 553) (553 . 554) (564 . 568)) (26130 38611 213453 118000) 0 nil])
([nil nil ((274 . 279) (t 26130 38011 8158 863000)) ((#("z-10 " 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 274) (undo-tree-id645 . -5) (undo-tree-id646 . -5) (undo-tree-id647 . -4) (undo-tree-id648 . -4) (undo-tree-id649 . -4) (undo-tree-id650 . -4) (undo-tree-id651 . -4) (undo-tree-id652 . -4) (undo-tree-id653 . -4) (undo-tree-id654 . -4) (t 26130 38032 444846 56000)) (26130 38032 436792 798000) 0 nil])
([nil nil ((#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx)) . -226) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id312 . -1) (undo-tree-id314 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id319 . -1) (#(" " 0 1 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx)) . -227) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id327 . -1) (undo-tree-id329 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id334 . -1) 228) ((226 . 228)) (26130 30295 482372 800000) 0 nil])
nil
([nil nil ((#("w" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -273) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -274) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) 275 (t 26130 39091 399351 775000)) nil (26130 39093 419330 755000) 0 nil])
([nil nil ((#("		<div className=\"absolute inset-0 z-0\">
		    <MatrixRainingLetters custom_class=\"absolute inset-0 z-0\" />
		</div>
" 0 2 (jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 8 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 38 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 38 39 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 39 40 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 40 47 (jsx-depth 1 part-side jsx) 47 48 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 48 68 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 68 69 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 69 70 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 70 81 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 81 82 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 82 103 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 103 104 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 104 105 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 105 106 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 106 107 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 107 110 (jsx-depth 1 part-side jsx) 110 111 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 111 112 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 112 115 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 115 116 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx rear-nonsticky t) 116 117 (jsx-depth 1 part-side jsx)) . 310) (undo-tree-id711 . -115) (undo-tree-id712 . -116) (undo-tree-id713 . -115) (undo-tree-id714 . 1) (undo-tree-id715 . -115) (undo-tree-id716 . -7) (undo-tree-id718 . -115) (undo-tree-id720 . -115) (undo-tree-id722 . -115) (undo-tree-id724 . -2) (undo-tree-id726 . -115) (undo-tree-id728 . -115) (undo-tree-id730 . -115) (undo-tree-id731 . -7) (undo-tree-id733 . -7) 317 (t 26130 38190 481664 68000)) ((310 . 427)) (26130 38610 925314 792000) 0 nil])
nil
([nil nil ((226 . 227)) ((#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx)) . 226) (undo-tree-id662 . -1) (undo-tree-id663 . -1)) (26130 30295 190340 669000) 0 nil])
([nil nil ((273 . 275)) nil (26130 39093 419311 135000) 0 nil])
([nil nil ((148 . 265) 160) ((#("		<div className=\"absolute inset-0 z-0\">
		    <MatrixRainingLetters custom_class=\"absolute inset-0 z-0\" />
		</div>
" 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 8 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 18 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 18 26 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 26 27 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 27 28 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 28 33 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 33 34 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 34 35 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 35 36 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 36 38 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 38 39 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 39 40 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 40 41 (jsx-depth 1 part-side jsx) 41 43 (jsx-depth 1 part-side jsx) 43 47 (jsx-depth 1 part-side jsx) 47 48 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 48 68 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 68 69 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 69 70 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 70 81 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 81 82 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 82 103 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 103 104 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 104 105 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 105 106 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 106 107 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 107 108 (jsx-depth 1 part-side jsx) 108 109 (jsx-depth 1 part-side jsx) 109 110 (jsx-depth 1 part-side jsx) 110 111 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 111 112 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 112 115 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 115 116 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 116 117 (jsx-depth 1 part-side jsx)) . 148) (undo-tree-id914 . -103) (undo-tree-id915 . -103) (undo-tree-id916 . -2) (undo-tree-id917 . -2)) (26130 38610 713677 132000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx)) . 227) (undo-tree-id303 . 1) (undo-tree-id304 . 1)) ((227 . 228)) (26130 30294 568772 404000) 0 nil])
([nil nil ((275 . 281) (t 26130 39093 436022 630000)) nil (26130 39140 461424 937000) 0 nil])
([nil nil ((#("	" 0 1 (jsx-depth 1 part-side jsx)) . -260) (260 . 261) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 260) (256 . 260) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -194) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -153) (153 . 154) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 153) (undo-tree-id708 . -1) (undo-tree-id710 . -1) (149 . 153) 150) ((#("    " 0 4 (jsx-depth 1 part-side jsx)) . 149) (153 . 154) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 153) (153 . 154) (194 . 198) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 256) (260 . 261) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 260) (260 . 261)) (26130 38610 521431 687000) 0 nil])
([nil nil ((566 . 568) (556 . 557) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 556) (541 . 546) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 541) (508 . 510) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 508) (483 . 485) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 483) (427 . 432) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 427) (414 . 419) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 414) (401 . 403) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 401) (378 . 380) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 378) (328 . 333) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 328) (313 . 318) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 313) (284 . 286) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 284) (259 . 261) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 259) (228 . 233) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 228) (163 . 168) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 163) (128 . 129) (#("    " 0 4 (part-side jsx)) . 128) (117 . 119) 226 (t 26130 29473 528652 524000)) ((#("  " 0 2 (part-side jsx)) . 117) (128 . 132) (#("	" 0 1 (part-side jsx)) . 128) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (163 . 169) (#("	    " 0 1 (part-side jsx) 1 5 (part-side jsx)) . 163) (228 . 234) (#("	    " 0 1 (part-side jsx) 1 5 (part-side jsx)) . 228) (259 . 267) (#("		" 0 1 (part-side jsx) 1 2 (part-side jsx)) . 259) (284 . 292) (#("		" 0 1 (part-side jsx) 1 2 (part-side jsx)) . 284) (313 . 319) (#("	    " 0 1 (part-side jsx) 1 5 (part-side jsx)) . 313) (328 . 334) (#("	    " 0 1 (part-side jsx) 1 5 (part-side jsx)) . 328) (378 . 386) (#("		" 0 1 (part-side jsx) 1 2 (part-side jsx)) . 378) (401 . 409) (#("		" 0 1 (part-side jsx) 1 2 (part-side jsx)) . 401) (414 . 420) (#("	    " 0 1 (part-side jsx) 1 5 (part-side jsx)) . 414) (427 . 433) (#("	    " 0 1 (part-side jsx) 1 5 (part-side jsx)) . 427) (483 . 491) (#("		" 0 1 (part-side jsx) 1 2 (part-side jsx)) . 483) (508 . 516) (#("		" 0 1 (part-side jsx) 1 2 (part-side jsx)) . 508) (541 . 547) (#("	    " 0 1 (jsx-depth 1 part-side jsx) 1 5 (jsx-depth 1 part-side jsx)) . 541) (556 . 560) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 556) (#("  " 0 2 (part-side jsx)) . 566)) (26130 30294 222815 567000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -280) (undo-tree-id995 . -1) (undo-tree-id996 . -1) 281) nil (26130 39140 461423 917000) 0 nil])
([nil nil ((#("overflow-auto h-screen bg-red-100" 0 13 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 13 30 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 30 31 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 31 33 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 393) (undo-tree-id897 . -32) (undo-tree-id898 . -32) (undo-tree-id899 . -32) (undo-tree-id900 . -32) (undo-tree-id901 . -32) (undo-tree-id902 . -33) (undo-tree-id903 . -33) 425 (t 26130 38578 925369 344000)) ((393 . 426)) (26130 38610 309743 437000) 0 nil] [nil nil ((230 . 240)) ((#(" h-screen " 0 10 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 230) (undo-tree-id889 . -10) (undo-tree-id890 . -10) (undo-tree-id891 . -9) (undo-tree-id892 . -9) (undo-tree-id893 . -9) (undo-tree-id894 . -9) (undo-tree-id895 . -9) (undo-tree-id896 . -9) (t 26130 38572 852030 194000)) (26130 38572 844207 312000) 0 nil] [nil nil ((189 . 198) (t 26130 38547 188672 285000)) ((#(" h-screen" 0 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 189) (undo-tree-id881 . -9) (undo-tree-id882 . -9) (undo-tree-id883 . -8) (undo-tree-id884 . -8) (undo-tree-id885 . -8) (undo-tree-id886 . -8) (undo-tree-id887 . -8) (undo-tree-id888 . -8) (t 26130 38565 725356 702000)) (26130 38565 715661 133000) 0 nil] [nil nil ((#("relative overflow-auto h-screen bg-red-100" 0 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 9 22 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 22 39 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 39 40 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 40 42 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 384) (undo-tree-id735 . -41) (undo-tree-id736 . -41) (undo-tree-id737 . -41) (undo-tree-id739 . -31) (undo-tree-id741 . -41) (undo-tree-id743 . -41) (undo-tree-id745 . -42) 425 (t 26130 38236 668374 961000)) ((384 . 426)) (26130 38545 536430 144000) 0 nil])
([nil nil ((228 . 233) (228 . 229) 257 (t 26130 29507 415335 469000)) ((#("
" 0 1 (part-side jsx)) . 228) (#("	    " 0 1 (part-side jsx) 1 5 (part-side jsx)) . 228) (undo-tree-id657 . -5) (undo-tree-id658 . -4) (undo-tree-id659 . -4)) (26130 30293 896721 124000) 0 nil] [nil nil ((#("/" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx)) . 225) (undo-tree-id371 . 1) (undo-tree-id372 . 1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (t 26130 29490 891994 198000)) ((225 . 226)) (26130 29506 86754 618000) 0 nil] [nil nil ((#("	    <MatrixRainingLetters custom_class=\"absolute inset-0 z-0\"/>
" 0 5 (jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 6 26 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 26 27 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 27 28 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 28 39 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 39 40 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 40 61 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 61 62 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 62 63 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 63 64 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 64 65 (jsx-depth 1 part-side jsx)) . 163) (undo-tree-id350 . -61) (undo-tree-id351 . 3) (undo-tree-id352 . -61) (undo-tree-id353 . 3) (undo-tree-id354 . -61) (undo-tree-id355 . -61) (undo-tree-id356 . -64) (undo-tree-id357 . -61) (undo-tree-id358 . -61) (undo-tree-id359 . -61) (undo-tree-id360 . -61) (undo-tree-id361 . -61) (undo-tree-id362 . -61) (undo-tree-id363 . -61) (undo-tree-id364 . -65) 224 (t 26130 29481 711989 789000)) ((163 . 228)) (26130 29489 272496 454000) 0 nil])
([nil nil ((280 . 284)) nil (26130 39140 461414 267000) 0 nil])
([nil nil ((393 . 398)) ((#("fixed" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 393) (undo-tree-id904 . -5) (undo-tree-id905 . -5) (undo-tree-id906 . -5) (undo-tree-id907 . -5) (undo-tree-id908 . -4) (undo-tree-id909 . -4) (undo-tree-id910 . -4) (undo-tree-id911 . -4) (undo-tree-id912 . -4) (undo-tree-id913 . -4) (t 26130 38604 998727 643000)) (26130 38604 986872 789000) 0 nil])
nil
nil
([nil nil ((146 . 147) (t 26130 38241 278379 375000)) ((#(" " 0 1 (tag-type start tag-name "div" jsx-depth 1 part-side jsx)) . 146) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (t 26130 38541 111999 800000)) (26130 38540 99998 773000) 0 nil])
([nil nil ((nil rear-nonsticky nil 275 . 276) (nil part-side jsx 275 . 276) (nil jsx-depth 1 275 . 276) (nil tag-name "div" 275 . 276) (nil tag-type start 275 . 276) (nil tag-end t 275 . 276) (nil font-lock-face web-mode-html-tag-bracket-face 275 . 276) (nil part-side jsx 274 . 275) (nil jsx-depth 1 274 . 275) (nil tag-attr t 274 . 275) (nil tag-attr-end 9 274 . 275) (nil tag-name "div" 274 . 275) (nil tag-type start 274 . 275) (nil font-lock-face web-mode-html-attr-value-face 274 . 275) (nil part-side jsx 260 . 274) (nil jsx-depth 1 260 . 274) (nil tag-attr t 260 . 274) (nil tag-name "div" 260 . 274) (nil tag-type start 260 . 274) (nil font-lock-face web-mode-html-attr-value-face 260 . 274) (nil part-side jsx 259 . 260) (nil jsx-depth 1 259 . 260) (nil tag-attr t 259 . 260) (nil tag-name "div" 259 . 260) (nil tag-type start 259 . 260) (nil font-lock-face web-mode-html-attr-equal-face 259 . 260) (nil part-side jsx 251 . 259) (nil jsx-depth 1 251 . 259) (nil tag-attr t 251 . 259) (nil tag-name "div" 251 . 259) (nil tag-type start 251 . 259) (nil font-lock-face web-mode-html-attr-name-face 251 . 259) (nil part-side jsx 250 . 251) (nil jsx-depth 1 250 . 251) (nil tag-attr-beg 0 250 . 251) (nil tag-attr t 250 . 251) (nil tag-name "div" 250 . 251) (nil tag-type start 250 . 251) (nil font-lock-face web-mode-html-attr-name-face 250 . 251) (nil part-side jsx 249 . 250) (nil jsx-depth 1 249 . 250) (nil tag-name "div" 249 . 250) (nil tag-type start 249 . 250) (nil part-side jsx 246 . 249) (nil jsx-depth 1 246 . 249) (nil tag-name "div" 246 . 249) (nil tag-type start 246 . 249) (nil font-lock-face web-mode-html-tag-face 246 . 249) (nil part-side jsx 245 . 246) (nil jsx-depth 1 245 . 246) (nil tag-name "div" 245 . 246) (nil tag-type start 245 . 246) (nil tag-beg 17 245 . 246) (nil font-lock-face web-mode-html-tag-bracket-face 245 . 246) (nil part-side jsx 233 . 245) (nil jsx-depth 1 233 . 245) (233 . 276) 232 (t 26130 29664 758744 375000)) ((#("            <div className=\"relative z-10\">" 0 12 (part-side jsx) 12 13 (part-side jsx) 13 16 (part-side jsx) 16 17 (part-side jsx) 17 18 (part-side jsx) 18 26 (part-side jsx) 26 27 (part-side jsx) 27 28 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 28 41 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 41 42 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 42 43 (part-side jsx rear-nonsticky nil)) . 233) (undo-tree-id654 . -42) (undo-tree-id655 . -42) (undo-tree-id656 . -42) (nil jsx-depth nil 233 . 245) (nil font-lock-face nil 245 . 246) (nil tag-beg nil 245 . 246) (nil tag-type nil 245 . 246) (nil tag-name nil 245 . 246) (nil jsx-depth nil 245 . 246) (nil font-lock-face nil 246 . 249) (nil tag-type nil 246 . 249) (nil tag-name nil 246 . 249) (nil jsx-depth nil 246 . 249) (nil tag-type nil 249 . 250) (nil tag-name nil 249 . 250) (nil jsx-depth nil 249 . 250) (nil font-lock-face nil 250 . 251) (nil tag-type nil 250 . 251) (nil tag-name nil 250 . 251) (nil tag-attr nil 250 . 251) (nil tag-attr-beg nil 250 . 251) (nil jsx-depth nil 250 . 251) (nil font-lock-face nil 251 . 259) (nil tag-type nil 251 . 259) (nil tag-name nil 251 . 259) (nil tag-attr nil 251 . 259) (nil jsx-depth nil 251 . 259) (nil font-lock-face nil 259 . 260) (nil tag-type nil 259 . 260) (nil tag-name nil 259 . 260) (nil tag-attr nil 259 . 260) (nil jsx-depth nil 259 . 260) (nil font-lock-face web-mode-javascript-string-face 261 . 274) (nil font-lock-face web-mode-javascript-string-face 260 . 261) (nil tag-type nil 261 . 274) (nil tag-type nil 260 . 261) (nil tag-name nil 261 . 274) (nil tag-name nil 260 . 261) (nil tag-attr nil 261 . 274) (nil tag-attr nil 260 . 261) (nil jsx-depth nil 261 . 274) (nil jsx-depth nil 260 . 261) (nil font-lock-face web-mode-javascript-string-face 274 . 275) (nil tag-type nil 274 . 275) (nil tag-name nil 274 . 275) (nil tag-attr-end nil 274 . 275) (nil tag-attr nil 274 . 275) (nil jsx-depth nil 274 . 275) (nil font-lock-face nil 275 . 276) (nil tag-end nil 275 . 276) (nil tag-type nil 275 . 276) (nil tag-name nil 275 . 276) (nil jsx-depth nil 275 . 276) (nil rear-nonsticky t 275 . 276)) (26130 30293 634179 371000) 0 nil] [nil nil ((nil rear-nonsticky nil 303 . 304) (nil part-side jsx 303 . 304) (nil jsx-depth 1 303 . 304) (nil tag-name "header" 303 . 304) (nil tag-type start 303 . 304) (nil tag-end t 303 . 304) (nil font-lock-face web-mode-html-tag-bracket-face 303 . 304) (nil part-side jsx 302 . 303) (nil jsx-depth 1 302 . 303) (nil tag-attr t 302 . 303) (nil tag-attr-end 0 302 . 303) (nil tag-name "header" 302 . 303) (nil tag-type start 302 . 303) (nil font-lock-face web-mode-html-attr-name-face 302 . 303) (nil part-side jsx 299 . 302) (nil jsx-depth 1 299 . 302) (nil tag-attr t 299 . 302) (nil tag-name "header" 299 . 302) (nil tag-type start 299 . 302) (nil font-lock-face web-mode-html-attr-name-face 299 . 302) (nil part-side jsx 298 . 299) (nil jsx-depth 1 298 . 299) (nil tag-attr-beg 0 298 . 299) (nil tag-attr t 298 . 299) (nil tag-name "header" 298 . 299) (nil tag-type start 298 . 299) (nil font-lock-face web-mode-html-attr-name-face 298 . 299) (nil part-side jsx 289 . 298) (nil jsx-depth 1 289 . 298) (nil tag-name "header" 289 . 298) (nil tag-type start 289 . 298) (nil part-side jsx 288 . 289) (nil jsx-depth 1 288 . 289) (nil tag-attr t 288 . 289) (nil tag-attr-end 9 288 . 289) (nil tag-name "header" 288 . 289) (nil tag-type start 288 . 289) (nil font-lock-face web-mode-html-attr-value-face 288 . 289) (nil part-side jsx 261 . 288) (nil jsx-depth 1 261 . 288) (nil tag-attr t 261 . 288) (nil tag-name "header" 261 . 288) (nil tag-type start 261 . 288) (nil font-lock-face web-mode-html-attr-value-face 261 . 288) (261 . 304) 233 (t 26130 29664 758744 375000)) ((#("            <div className=\"relative z-10\">" 0 27 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 27 28 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 28 37 (tag-type start tag-name "header" jsx-depth 1 part-side jsx) 37 38 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 38 41 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 41 42 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr-end 0 tag-attr t jsx-depth 1 part-side jsx) 42 43 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "header" jsx-depth 1 part-side jsx rear-nonsticky nil)) . 261) (undo-tree-id396 . -42) (undo-tree-id397 . -42) (nil tag-name "header" 261 . 288) (nil tag-name "header" 288 . 289) (nil tag-name "header" 289 . 298) (nil tag-name "header" 298 . 299) (nil tag-name "header" 299 . 302) (nil tag-name "header" 302 . 303) (nil tag-name "header" 303 . 304) (nil rear-nonsticky t 303 . 304)) (26130 29666 366512 197000) 0 nil])
([nil nil ((554 . 560) 553) ((#("
	    " 0 6 (jsx-depth 1 part-side jsx)) . 554) (undo-tree-id385 . -6) (undo-tree-id386 . -6) (undo-tree-id387 . -6) (undo-tree-id388 . -6) (undo-tree-id389 . -6) (undo-tree-id390 . -6) (undo-tree-id391 . -6) (undo-tree-id392 . -6) (undo-tree-id393 . -5) (undo-tree-id394 . -5) (undo-tree-id395 . -5)) (26130 29505 790809 958000) 0 nil])
([nil nil ((128 . 193) 157) ((#("	    <MatrixRainingLetters custom_class=\"absolute inset-0 z-0\"/>
" 0 5 (part-side jsx) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 jsx-beg 1 part-side jsx) 6 26 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 26 27 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 27 28 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 28 39 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 39 40 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 40 61 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 61 62 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 62 63 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 63 64 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 64 65 (jsx-depth 1 part-side jsx)) . 128) (undo-tree-id365 . -65) (undo-tree-id366 . -64) (undo-tree-id367 . -5) (undo-tree-id368 . -5) (undo-tree-id369 . -5) (undo-tree-id370 . -5) (t 26130 29486 51991 873000)) (26130 29486 44792 229000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -280) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -281) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (#("w" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -282) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -283) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) 284 (t 26130 39140 472786 26000)) nil (26130 39146 353567 42000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 188 . 189) (nil part-side jsx 188 . 189) (nil jsx-depth 1 188 . 189) (nil tag-attr t 188 . 189) (nil tag-attr-end 0 188 . 189) (nil tag-name "div" 188 . 189) (nil tag-type start 188 . 189) (nil font-lock-face web-mode-html-attr-name-face 188 . 189) (nil part-side jsx 180 . 188) (nil jsx-depth 1 180 . 188) (nil tag-attr t 180 . 188) (nil tag-name "div" 180 . 188) (nil tag-type start 180 . 188) (nil font-lock-face web-mode-html-attr-name-face 180 . 188) (nil part-side jsx 179 . 180) (nil jsx-depth 1 179 . 180) (nil tag-attr-beg 0 179 . 180) (nil tag-attr t 179 . 180) (nil tag-name "div" 179 . 180) (nil tag-type start 179 . 180) (nil font-lock-face web-mode-html-attr-name-face 179 . 180) (nil part-side jsx 178 . 179) (nil jsx-depth 1 178 . 179) (nil tag-name "div" 178 . 179) (nil tag-type start 178 . 179) (nil part-side jsx 177 . 178) (nil jsx-depth 1 177 . 178) (nil tag-attr t 177 . 178) (nil tag-attr-end 0 177 . 178) (nil tag-name "div" 177 . 178) (nil tag-type start 177 . 178) (nil font-lock-face web-mode-html-attr-name-face 177 . 178) (nil part-side jsx 171 . 177) (nil jsx-depth 1 171 . 177) (nil tag-attr t 171 . 177) (nil tag-name "div" 171 . 177) (nil tag-type start 171 . 177) (nil font-lock-face web-mode-html-attr-name-face 171 . 177) (nil part-side jsx 170 . 171) (nil jsx-depth 1 170 . 171) (nil tag-attr-beg 0 170 . 171) (nil tag-attr t 170 . 171) (nil tag-name "div" 170 . 171) (nil tag-type start 170 . 171) (nil font-lock-face web-mode-html-attr-name-face 170 . 171) (nil part-side jsx 169 . 170) (nil jsx-depth 1 169 . 170) (nil tag-name "div" 169 . 170) (nil tag-type start 169 . 170) (nil part-side jsx 168 . 169) (nil jsx-depth 1 168 . 169) (nil tag-attr t 168 . 169) (nil tag-attr-end 0 168 . 169) (nil tag-name "div" 168 . 169) (nil tag-type start 168 . 169) (nil font-lock-face web-mode-html-attr-name-face 168 . 169) (nil part-side jsx 157 . 168) (nil jsx-depth 1 157 . 168) (nil tag-attr t 157 . 168) (nil tag-name "div" 157 . 168) (nil tag-type start 157 . 168) (nil font-lock-face web-mode-html-attr-name-face 157 . 168) (nil part-side jsx 156 . 157) (nil jsx-depth 1 156 . 157) (nil tag-attr-beg 0 156 . 157) (nil tag-attr t 156 . 157) (nil tag-name "div" 156 . 157) (nil tag-type start 156 . 157) (nil font-lock-face web-mode-html-attr-name-face 156 . 157) (nil part-side jsx 155 . 156) (nil jsx-depth 1 155 . 156) (nil tag-name "div" 155 . 156) (nil tag-type start 155 . 156) (nil part-side jsx 154 . 155) (nil jsx-depth 1 154 . 155) (nil tag-attr t 154 . 155) (nil tag-attr-end 0 154 . 155) (nil tag-name "div" 154 . 155) (nil tag-type start 154 . 155) (nil font-lock-face web-mode-html-attr-name-face 154 . 155) (nil part-side jsx 148 . 154) (nil jsx-depth 1 148 . 154) (nil tag-attr t 148 . 154) (nil tag-name "div" 148 . 154) (nil tag-type start 148 . 154) (nil font-lock-face web-mode-html-attr-name-face 148 . 154) (nil part-side jsx 147 . 148) (nil jsx-depth 1 147 . 148) (nil tag-attr-beg 0 147 . 148) (nil tag-attr t 147 . 148) (nil tag-name "div" 147 . 148) (nil tag-type start 147 . 148) (nil font-lock-face web-mode-html-attr-name-face 147 . 148) (147 . 189) 146) ((#("relative overflow-auto h-screen bg-red-100" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 1 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr-end 0 tag-attr t jsx-depth 1 part-side jsx) 8 9 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 10 21 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 21 22 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr-end 0 tag-attr t jsx-depth 1 part-side jsx) 22 23 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 23 24 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 24 30 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 30 31 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr-end 0 tag-attr t jsx-depth 1 part-side jsx) 31 32 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 32 33 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 33 41 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 41 42 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr-end 0 tag-attr t jsx-depth 1 part-side jsx rear-nonsticky nil)) . 147) (undo-tree-id873 . -41) (undo-tree-id874 . -41) (undo-tree-id875 . -41) (undo-tree-id876 . -41) (nil tag-name "div" 147 . 148) (nil tag-name "div" 148 . 154) (nil tag-name "div" 154 . 155) (nil tag-name "div" 155 . 156) (nil tag-name "div" 156 . 157) (nil tag-name "div" 157 . 168) (nil tag-name "div" 168 . 169) (nil tag-name "div" 169 . 170) (nil tag-name "div" 170 . 171) (nil tag-name "div" 171 . 177) (nil tag-name "div" 177 . 178) (nil tag-name "div" 178 . 179) (nil tag-name "div" 179 . 180) (nil tag-name "div" 180 . 188) (nil tag-name "div" 188 . 189) (nil rear-nonsticky t 188 . 189)) (26130 38539 924286 528000) 0 nil])
([nil nil ((600 . 604) (588 . 589) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 588) (552 . 556) (523 . 527) (469 . 470) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 469) (459 . 460) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 459) (443 . 447) (416 . 420) (368 . 369) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 368) (356 . 357) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 356) (324 . 328) (295 . 299) (266 . 267) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 266) (#("            " 0 12 (jsx-depth 1 part-side jsx)) . -233) 275) ((233 . 245) (266 . 270) (#("	" 0 1 (part-side jsx)) . 266) (#("    " 0 4 (part-side jsx)) . 295) (#("    " 0 4 (part-side jsx)) . 324) (356 . 360) (#("	" 0 1 (part-side jsx)) . 356) (368 . 372) (#("	" 0 1 (part-side jsx)) . 368) (#("    " 0 4 (part-side jsx)) . 416) (#("    " 0 4 (part-side jsx)) . 443) (459 . 463) (#("	" 0 1 (part-side jsx)) . 459) (469 . 473) (#("	" 0 1 (part-side jsx)) . 469) (#("    " 0 4 (part-side jsx)) . 523) (#("    " 0 4 (part-side jsx)) . 552) (588 . 592) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 588) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 600)) (26130 30293 358293 802000) 0 nil])
nil
([nil nil ((560 . 583)) ((#("</MatrixRainingLetters>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 2 22 (font-lock-face web-mode-html-tag-face tag-type end tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 22 23 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "matrixrainingletters" jsx-depth 1 part-side jsx)) . 560) (undo-tree-id375 . -23) (undo-tree-id376 . -23) (undo-tree-id377 . -23) (undo-tree-id378 . -23) (undo-tree-id379 . -22) (undo-tree-id380 . -22) (undo-tree-id381 . -22) (undo-tree-id382 . -22) (undo-tree-id383 . -22) (undo-tree-id384 . -22) (t 26130 29500 438665 450000)) (26130 29500 432288 875000) 0 nil])
nil
([nil nil ((280 . 284)) nil (26130 39146 353558 562000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -158) (undo-tree-id746 . -1) 159 (#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx)) . 158) (156 . 158) (#(":" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -156) (undo-tree-id748 . -1) (#("=" 0 1 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -157) (undo-tree-id750 . -1) 158 (157 . 158) (#("=" 0 1 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -157) (undo-tree-id752 . -1) (#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -158) (undo-tree-id754 . -1) 159 (157 . 161) (147 . 157) (t 26130 38243 201714 548000)) ((#("className:" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 1 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 147) (#("=\"\" " 0 1 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 10 tag-attr t jsx-depth 1 part-side jsx) 3 4 (tag-type start tag-name "div" jsx-depth 1 part-side jsx)) . 157) (157 . 159) (#("=" 0 1 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 157) (156 . 158) (#("=\"" 0 1 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 156) (158 . 159) (158 . 159)) (26130 38539 753376 271000) 0 nil])
([nil nil ((598 . 601) 597) ((#("
		" 0 2 (jsx-depth 1 part-side jsx) 2 3 (jsx-depth 1 part-side jsx)) . 598) (undo-tree-id652 . -2) (undo-tree-id653 . -2)) (26130 30293 100159 835000) 0 nil])
nil
([nil nil ((#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -283) (undo-tree-id997 . -1) (undo-tree-id998 . -1) 284) nil (26130 39146 353558 32000) 0 nil])
([nil nil ((200 . 201)) ((#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx)) . 200) (undo-tree-id872 . 1)) (26130 38539 593388 934000) 0 nil])
([nil nil ((#("	" 0 1 (jsx-depth 1 part-side jsx)) . -604) (604 . 605) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 604) (undo-tree-id407 . -1) (600 . 604) (601 . 607) (t 26130 29673 305414 520000)) ((#("</div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 2 5 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx)) . 601) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 600) (604 . 605) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 604) (604 . 605)) (26130 30292 847539 684000) 0 nil])
([nil nil ((283 . 287)) nil (26130 39146 353548 982000) 0 nil])
([nil nil ((438 . 447) (t 26130 38252 678390 291000)) ((#(" relative" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 1 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 438) (undo-tree-id867 . -1) (undo-tree-id868 . -8) (undo-tree-id869 . -1) (undo-tree-id870 . -9) (undo-tree-id871 . -9)) (26130 38539 425395 803000) 0 nil])
([nil nil ((#(" className=\"z-10\"" 0 1 (tag-type start tag-name "header" jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 2 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 12 15 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 15 16 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx)) . 274) (undo-tree-id398 . -16) (undo-tree-id399 . -16) (undo-tree-id400 . -16) (undo-tree-id401 . -15) (undo-tree-id402 . -16) (undo-tree-id404 . -17) 290) ((274 . 291)) (26130 30292 587885 923000) 0 nil])
([nil nil ((#("flex " 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 270) (undo-tree-id1022 . -1) (undo-tree-id1023 . -4) (undo-tree-id1024 . -5) (undo-tree-id1025 . -5) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -5) (t 26130 39146 362798 139000)) nil (26130 39203 141930 837000) 0 nil])
([nil nil ((447 . 449) (t 26130 38277 898414 439000)) ((#(" z" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 447) (undo-tree-id865 . -2) (undo-tree-id866 . -2)) (26130 38539 265301 604000) 0 nil])
([nil nil ((212 . 213) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . -212) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id415 . -1) (undo-tree-id417 . -1) (undo-tree-id419 . -1) 213 (#("inset-0 " 0 8 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 213) (undo-tree-id420 . -7) (undo-tree-id421 . -7) (undo-tree-id422 . -7) (undo-tree-id423 . -7) (undo-tree-id425 . -8) 220 (t 26130 29681 835417 892000)) ((212 . 221) (#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 212)) (26130 30292 363213 138000) 0 nil])
([nil nil ((296 . 309) (t 26130 39203 152914 918000)) nil (26130 39230 784318 658000) 0 nil])
([nil nil ((449 . 450) (t 26130 38279 605082 740000)) ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 449) (undo-tree-id863 . -1) (undo-tree-id864 . -1)) (26130 38539 89397 949000) 0 nil])
([nil nil ((#("    " 0 4 (jsx-depth 1 part-side jsx)) . 587) (t 26130 29786 578792 545000)) ((587 . 591)) (26130 30292 163534 581000) 0 nil])
([nil nil ((270 . 276) (t 26130 39230 796305 96000)) nil (26130 39268 493199 932000) 0 nil])
([nil nil ((450 . 452) (t 26130 38281 551751 269000)) ((#("10" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 450) (undo-tree-id861 . -2) (undo-tree-id862 . -2)) (26130 38538 924148 112000) 0 nil])
([nil nil ((129 . 170) (#("<div className=\"relative h-full\">" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 4 5 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 6 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 14 15 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 15 31 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 31 32 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 32 33 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx)) . 129) (undo-tree-id497 . -33) (undo-tree-id498 . -33) 163 (t 26130 29788 702126 717000)) ((129 . 162) (#("{/* <div className=\"relative h-full\"> */}" 0 1 (part-side jsx) 1 2 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 2 3 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 3 4 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 4 19 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 19 20 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 20 28 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 28 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 35 36 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 36 37 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 37 38 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 38 39 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 39 40 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment part-side jsx) 40 41 (part-side jsx)) . 129) (undo-tree-id649 . 6) (undo-tree-id650 . -28) (undo-tree-id651 . -28)) (26130 30291 983580 999000) 0 nil] [nil nil ((216 . 223) (t 26130 29718 202098 905000)) ((#(" height" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 216) (undo-tree-id491 . -7) (undo-tree-id492 . -7) (undo-tree-id493 . -7) (undo-tree-id494 . -7) (t 26130 29784 955458 573000)) (26130 29783 941070 946000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 270) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (t 26130 39268 503049 306000)) nil (26130 39272 158159 159000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -447) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id760 . -1) (#("z" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -448) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id765 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -449) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id770 . -1) (#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -450) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id775 . -1) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -451) (undo-tree-id777 . -1) (undo-tree-id779 . -1) 452 (t 26130 38283 151752 803000)) ((447 . 452)) (26130 38538 769312 74000) 0 nil])
([nil nil ((595 . 609) (#("</div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 2 5 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx)) . 595) (undo-tree-id495 . -6) (undo-tree-id496 . -6) 602) ((595 . 601) (#("{/* </div> */}" 0 1 (part-side jsx) 1 2 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 2 12 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 12 13 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment part-side jsx) 13 14 (part-side jsx)) . 595)) (26130 30291 810075 615000) 0 nil])
([nil nil ((#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . -217) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id431 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . -218) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id436 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . -219) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id441 . -1) (#("g" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . -220) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id446 . -1) (#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . -221) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id451 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . -222) (undo-tree-id453 . -1) (undo-tree-id455 . -1) 223 (t 26130 29727 478769 232000)) ((217 . 223)) (26130 29783 593395 638000) 0 nil])
([nil nil ((#("column" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 280) (undo-tree-id1033 . -5) (undo-tree-id1034 . -6) (undo-tree-id1035 . -6) (t 26130 39272 173056 855000)) nil (26130 39292 650875 969000) 0 nil])
([nil nil ((#("absolute" 0 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 224) (undo-tree-id813 . -7) (undo-tree-id815 . -8) (t 26130 38431 95227 783000)) ((224 . 232)) (26130 38538 625410 785000) 0 nil] [nil nil ((447 . 453) (t 26130 38380 331845 865000)) ((#(" fixed" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 447) (undo-tree-id802 . -6) (undo-tree-id803 . -6) (undo-tree-id804 . -6) (undo-tree-id805 . -6) (undo-tree-id806 . -6) (undo-tree-id807 . -6) (undo-tree-id808 . -6) (undo-tree-id809 . -6) (undo-tree-id810 . -6) (undo-tree-id811 . -6) (undo-tree-id812 . -6)) (26130 38429 214636 317000) 0 nil] [nil nil ((200 . 206) (t 26130 38289 388425 441000)) ((#(" fixed" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 200) (undo-tree-id780 . -6) (undo-tree-id781 . -6) (undo-tree-id782 . -6) (undo-tree-id783 . -6) (undo-tree-id784 . -6) (undo-tree-id785 . -6) (undo-tree-id786 . -5) (undo-tree-id787 . -5) (undo-tree-id788 . -5) (undo-tree-id789 . -5) (undo-tree-id790 . -5) (undo-tree-id791 . -5) (t 26130 38364 635164 163000)) (26130 38364 624268 290000) 0 nil])
([nil nil ((#("    " 0 4 (part-side jsx)) . -539) (#("	" 0 1 (part-side jsx)) . -528) (#("	    " 0 1 (part-side jsx) 1 5 (part-side jsx)) . -496) (#("	    " 0 1 (part-side jsx) 1 5 (part-side jsx)) . -472) (#("	" 0 1 (part-side jsx)) . -420) (#("	" 0 1 (part-side jsx)) . -411) (#("	    " 0 1 (part-side jsx) 1 5 (part-side jsx)) . -399) (#("	    " 0 1 (part-side jsx) 1 5 (part-side jsx)) . -377) (#("	" 0 1 (part-side jsx)) . -331) (#("	" 0 1 (part-side jsx)) . -320) (#("	    " 0 1 (part-side jsx) 1 5 (part-side jsx)) . -292) (#("	    " 0 1 (part-side jsx) 1 5 (part-side jsx)) . -268) (#("	" 0 1 (part-side jsx)) . -258) (#("    " 0 4 (part-side jsx)) . -225) (#("    " 0 4 (part-side jsx)) . -172) 583 (t 26130 29795 75462 565000)) ((172 . 176) (225 . 229) (258 . 259) (268 . 273) (292 . 297) (320 . 321) (331 . 332) (377 . 382) (399 . 404) (411 . 412) (420 . 421) (472 . 477) (496 . 501) (528 . 529) (539 . 543)) (26130 30291 635559 820000) 0 nil])
([nil nil ((#("custom_class" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 1 12 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 190) (undo-tree-id466 . -11) (undo-tree-id467 . -11) (undo-tree-id468 . -11) (undo-tree-id469 . -11) (undo-tree-id471 . -12) 201 (t 26130 29744 698776 24000)) ((190 . 202)) (26130 29783 261606 79000) 0 nil] [nil nil ((217 . 223) (t 26130 29729 808770 150000)) ((#("h-full" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 217) (undo-tree-id456 . -6) (undo-tree-id457 . -6) (undo-tree-id458 . -6) (undo-tree-id459 . -6) (undo-tree-id460 . -5) (undo-tree-id461 . -5) (undo-tree-id462 . -5) (undo-tree-id463 . -5) (undo-tree-id464 . -5) (undo-tree-id465 . -5) (t 26130 29731 768770 923000)) (26130 29731 761614 574000) 0 nil])
([nil nil ((280 . 283)) nil (26130 39292 650864 709000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 224) (t 26130 38444 851907 623000)) ((224 . 225)) (26130 38538 469294 826000) 0 nil])
([nil nil ((453 . 461) (t 26130 38389 145187 620000)) ((#(" inset-0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 1 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 453) (undo-tree-id792 . -8) (undo-tree-id793 . -8) (undo-tree-id794 . -8) (undo-tree-id795 . -8) (undo-tree-id796 . -7) (undo-tree-id797 . -7) (undo-tree-id798 . -7) (undo-tree-id799 . -7) (undo-tree-id800 . -7) (undo-tree-id801 . -7) (t 26130 38421 785218 869000)) (26130 38421 777637 915000) 0 nil])
nil
([nil nil ((547 . 567) (#("{/* </div> */}" 0 1 (part-side jsx) 1 2 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 2 12 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 12 13 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment part-side jsx) 13 14 (part-side jsx)) . 547) (undo-tree-id534 . -14) 562) ((547 . 561) (#("/* {/* </div> */} */" 0 1 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 1 15 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 15 16 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment part-side jsx) 16 17 (part-side jsx) 17 20 (part-side jsx)) . 547)) (26130 30291 463588 376000) 0 nil] [nil nil ((#("	{/* </div> */}
" 0 1 (part-side jsx) 1 2 (part-side jsx) 2 3 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 3 13 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 13 14 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment part-side jsx) 14 15 (part-side jsx) 15 16 (part-side jsx)) . 546) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -15) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -16) 547 (t 26130 29798 5463 720000)) ((546 . 562)) (26130 29828 218890 61000) 0 nil])
([nil nil ((190 . 199) (t 26130 29755 598780 324000)) ((#("className" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 1 9 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 190) (t 26130 29781 632123 928000)) (26130 29780 618347 502000) 0 nil])
nil
([nil nil ((#("justify-center align-center" 0 27 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 284) (undo-tree-id1036 . -26) (undo-tree-id1037 . -26) (undo-tree-id1038 . -26) (undo-tree-id1039 . -14) (undo-tree-id1040 . -26) (undo-tree-id1041 . -26) (undo-tree-id1042 . -27) (undo-tree-id1043 . -27) 310 (t 26130 39292 663098 998000)) nil (26130 39402 414337 724000) 0 nil])
([nil nil ((#("relative" 0 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 430) (undo-tree-id854 . -7) (undo-tree-id855 . -8) (undo-tree-id856 . -8) (t 26130 38480 751941 999000)) ((430 . 438)) (26130 38538 325359 387000) 0 nil] [nil nil ((#("    " 0 4 (jsx-depth 1 part-side jsx)) . -314) (undo-tree-id823 . -4) (318 . 324) (312 . 318) (t 26130 38450 851913 367000) 311) ((#("
	    " 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx) 2 6 (jsx-depth 1 part-side jsx)) . 312) (#("</div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 2 5 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx)) . 318) (314 . 318) (t 26130 38473 535268 423000)) (26130 38472 516661 20000) 0 nil])
nil
([nil nil ((547 . 561) (#("/* {/* </div> */}" 0 1 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 1 15 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 15 16 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment part-side jsx) 16 17 (part-side jsx)) . 547) 568) ((547 . 564) (#("{/* </div> */}" 0 1 (part-side jsx) 1 2 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 2 3 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 3 4 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 4 5 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 5 6 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 6 9 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 9 10 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 10 12 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 12 13 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment part-side jsx) 13 14 (part-side jsx)) . 547)) (26130 30291 279480 99000) 0 nil])
([nil nil ((#("	{/* <div className=\"relative h-full\"> */}
" 0 1 (part-side jsx) 1 2 (part-side jsx) 2 3 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 3 40 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 40 41 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment part-side jsx) 41 42 (part-side jsx) 42 43 (part-side jsx)) . 128) (undo-tree-id500 . -42) (undo-tree-id501 . -1) (undo-tree-id502 . -43) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -43) 129) ((128 . 171) (t 26130 29818 785471 918000)) (26130 29818 778222 247000) 0 nil])
([nil nil ((201 . 209) (#("absolute" 0 7 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 201) (undo-tree-id473 . -7) (undo-tree-id475 . -8) (t 26130 29758 778781 579000)) ((201 . 209) (#("relative" 0 8 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 201) (t 26130 29777 665455 696000)) (26130 29776 657280 450000) 0 nil])
([nil nil ((280 . 286) (#("row" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 280) (undo-tree-id1128 . -2) (undo-tree-id1129 . -2) (undo-tree-id1130 . -2) (undo-tree-id1131 . -3) (undo-tree-id1132 . -3) (undo-tree-id1133 . -2) (undo-tree-id1134 . -3) (undo-tree-id1135 . -3) (t 26130 39403 433326 782000)) nil (26130 39418 567645 267000) 0 nil] [nil nil ((285 . 289) (t 26130 39374 446600 506000)) ((#("ites" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 285) (undo-tree-id1126 . -4) (undo-tree-id1127 . -4)) (26130 39401 990355 126000) 0 nil] [nil nil ((284 . 296) (t 26130 39327 873171 399000)) ((#("align-center" 0 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 284) (t 26130 39360 976572 807000)) (26130 39372 742706 917000) 0 nil] [nil nil ((#("row" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 280) (undo-tree-id1046 . -2) (undo-tree-id1047 . -2) (undo-tree-id1048 . -2) (undo-tree-id1049 . -2) (undo-tree-id1050 . -2) (undo-tree-id1051 . -3) (undo-tree-id1052 . -3) (t 26130 39317 993151 86000)) ((280 . 283)) (26130 39326 442250 95000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 430) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1)) ((430 . 431)) (26130 38538 170222 89000) 0 nil])
([nil nil ((#("	    </div>
" 0 5 (jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 7 10 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 11 12 (jsx-depth 1 part-side jsx)) . 301) (undo-tree-id816 . -11) (undo-tree-id818 . -6) (undo-tree-id819 . -6) (undo-tree-id821 . -12) 307) ((301 . 313)) (26130 38471 680667 670000) 0 nil])
([nil nil ((#("{" 0 1 (part-side jsx)) . 547) (undo-tree-id533 . -1)) ((547 . 548)) (26130 30291 83359 159000) 0 nil])
nil
([nil nil ((#("	<div className=\"relative h-full\">
" 0 1 (part-side jsx) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 2 5 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 5 6 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 7 15 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 15 16 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 32 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 32 33 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 33 34 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 34 35 (jsx-depth 1 part-side jsx)) . 128) (undo-tree-id483 . -34) (undo-tree-id484 . -34) (undo-tree-id485 . -35) (undo-tree-id486 . -33) (undo-tree-id487 . -33) (undo-tree-id488 . -33) (undo-tree-id489 . -33) (undo-tree-id490 . -35) 161 (t 26130 29770 205452 754000)) ((128 . 163)) (26130 29776 489276 104000) 0 nil])
([nil nil ((#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 283) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (t 26130 39418 580024 595000)) nil (26130 39439 453969 970000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -288) (undo-tree-id1108 . -1) 289) ((288 . 289)) (26130 39401 702617 734000) 0 nil])
([nil nil ((281 . 286) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -281) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) 282 (280 . 282) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -280) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -281) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (#("w" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -282) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) 283 (t 26130 39360 976572 807000)) ((280 . 283) (#("cl" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 280) (281 . 282) (#("olumn" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 281)) (26130 39372 739097 427000) 0 nil])
([nil nil ((280 . 285)) ((#("colun" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 280) (undo-tree-id1061 . -4) (undo-tree-id1062 . -4) (undo-tree-id1063 . -4) (undo-tree-id1064 . -4) (undo-tree-id1065 . -4) (undo-tree-id1066 . -4) (undo-tree-id1067 . -5) (undo-tree-id1068 . -4) (undo-tree-id1069 . -5)) (26130 39325 742261 639000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -429) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id842 . -1) (undo-tree-id844 . -1) (undo-tree-id846 . -1) (undo-tree-id848 . -1) (undo-tree-id850 . -1) 430) ((429 . 430)) (26130 38538 21669 202000) 0 nil])
([nil nil ((#("	    <div className=\"inset-0 z-0\">
" 0 5 (jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 9 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 9 10 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 11 19 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 19 20 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 20 21 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 21 22 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 22 27 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 27 28 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 28 29 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 29 30 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 30 32 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 32 33 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 33 34 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 34 35 (jsx-depth 1 part-side jsx)) . 203) (undo-tree-id824 . -34) (undo-tree-id825 . -34) (undo-tree-id826 . -34) (undo-tree-id827 . -34) (undo-tree-id828 . -33) (undo-tree-id829 . -33) (undo-tree-id830 . -33) (undo-tree-id831 . -33) (undo-tree-id832 . -33) (undo-tree-id833 . -33) (undo-tree-id834 . -35) 236 (t 26130 38460 198588 984000)) ((203 . 238) (t 26130 38468 191929 973000)) (26130 38468 165832 649000) 0 nil])
([nil nil ((#("/" 0 1 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx)) . 547) (undo-tree-id531 . -1)) ((547 . 548)) (26130 30290 863257 686000) 0 nil])
([nil nil ((#("	</div>
" 0 1 (jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx) 7 8 (part-side jsx)) . 549) (undo-tree-id477 . -7) (undo-tree-id478 . -6) (undo-tree-id479 . -6) (undo-tree-id480 . -6) (undo-tree-id481 . -6) (undo-tree-id482 . -8) 555) ((549 . 557)) (26130 29776 362991 258000) 0 nil])
([nil nil ((#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 283) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1)) nil (26130 39439 453968 810000) 0 nil])
([nil nil ((288 . 298)) ((#("ms-center " 0 10 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 288)) (26130 39401 526259 173000) 0 nil])
nil
([nil nil ((#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -284) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) 285) ((284 . 285)) (26130 39325 62269 930000) 0 nil])
([nil nil ((429 . 434) (t 26130 38497 375291 256000)) ((#(" z-10" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 429) (undo-tree-id857 . -5) (undo-tree-id858 . -5) (undo-tree-id859 . -5) (undo-tree-id860 . -5) (t 26130 38507 671967 782000)) (26130 38507 663549 798000) 0 nil])
nil
([nil nil ((#("*" 0 1 (part-side jsx)) . 547) (undo-tree-id529 . -1)) ((547 . 548)) (26130 30290 639212 781000) 0 nil])
([nil nil ((#("    " 0 4 (jsx-depth 1 part-side jsx)) . -524) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -513) (513 . 514) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 513) (509 . 513) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -477) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -452) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -399) (399 . 400) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 399) (395 . 399) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -386) (386 . 387) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 386) (382 . 386) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -370) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -347) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -300) (300 . 301) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 300) (296 . 300) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -285) (285 . 286) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 285) (281 . 285) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -253) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -228) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -217) (217 . 218) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 217) (213 . 217) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -180) (undo-tree-id476 . -4) (#("    " 0 4 (part-side jsx)) . -129) 554) ((129 . 133) (180 . 184) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 213) (217 . 218) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 217) (217 . 218) (228 . 232) (253 . 257) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 281) (285 . 286) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 285) (285 . 286) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 296) (300 . 301) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 300) (300 . 301) (347 . 351) (370 . 374) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 382) (386 . 387) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 386) (386 . 387) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 395) (399 . 400) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 399) (399 . 400) (452 . 456) (477 . 481) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 509) (513 . 514) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 513) (513 . 514) (524 . 528) (t 26130 29774 775454 556000)) (26130 29774 767226 411000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 283) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1)) nil (26130 39439 453964 900000) 0 nil])
([nil nil ((#("row" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 280) (undo-tree-id1110 . -2) (undo-tree-id1111 . -2) (undo-tree-id1112 . -2) (undo-tree-id1113 . -3) (undo-tree-id1114 . -3) (undo-tree-id1115 . -2) (undo-tree-id1116 . -3) (undo-tree-id1117 . -3) (t 26130 39393 883307 143000)) ((280 . 283)) (26130 39401 378414 126000) 0 nil])
([nil nil ((284 . 286)) ((#("mn" 0 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 284) (undo-tree-id1053 . -2) (undo-tree-id1054 . -2) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (t 26130 39322 766494 232000)) (26130 39322 753959 120000) 0 nil])
nil
([nil nil ((#(" */} */" 0 2 (part-side jsx) 2 3 (part-side jsx) 3 4 (part-side jsx) 4 7 (part-side jsx)) . 554) (undo-tree-id526 . -6)) ((554 . 561)) (26130 30290 435215 691000) 0 nil])
nil
([nil nil ((283 . 296) (t 26130 39439 466734 216000)) nil (26130 39446 517963 445000) 0 nil])
([nil nil ((280 . 286)) ((#("column" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 280) (undo-tree-id1118 . -6) (undo-tree-id1119 . -6) (undo-tree-id1120 . -5) (undo-tree-id1121 . -5) (undo-tree-id1122 . -5) (undo-tree-id1123 . -5) (undo-tree-id1124 . -5) (undo-tree-id1125 . -5) (t 26130 39400 666654 424000)) (26130 39400 655488 734000) 0 nil])
nil
([nil nil ((#("{/*" 0 1 (part-side jsx) 1 2 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 2 3 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx)) . 129) (undo-tree-id517 . -2) (undo-tree-id519 . -3) (undo-tree-id521 . -3) (undo-tree-id522 . -3) (undo-tree-id524 . -3) 132) ((129 . 132)) (26130 30290 231381 901000) 0 nil])
([nil nil ((326 . 327) (322 . 326) (t 26130 39446 530082 77000) 295) nil (26130 39537 874125 910000) 0 nil])
nil
([nil nil ((#("}" 0 1 (part-side jsx)) . 166) (undo-tree-id541 . -1) (t 26130 29839 495480 88000)) ((166 . 167)) (26130 30290 15531 785000) 0 nil])
([nil nil ((nil rear-nonsticky nil 330 . 331) (nil part-side jsx 327 . 331) (nil jsx-depth 1 327 . 331) (327 . 331) 326) nil (26130 39537 874125 520000) 0 nil])
([nil nil ((#("/" 0 1 (part-side jsx)) . 165) (undo-tree-id539 . -1)) ((165 . 166)) (26130 30289 807288 109000) 0 nil])
([nil nil ((#("	  pfull
" 0 4 (jsx-depth 1 part-side jsx) 4 7 (jsx-depth 1 part-side jsx) 7 8 (jsx-depth 1 part-side jsx rear-nonsticky t) 8 9 (jsx-depth 1 part-side jsx)) . 323) (undo-tree-id1146 . -4) (undo-tree-id1147 . -8) (undo-tree-id1148 . 1) (undo-tree-id1149 . -4) (undo-tree-id1150 . -7) 330) nil (26130 39537 874124 700000) 0 nil])
([nil nil ((#("*" 0 1 (part-side jsx)) . 164) (undo-tree-id536 . -1)) ((164 . 165)) (26130 30289 635755 328000) 0 nil])
([nil nil ((#("	  " 0 3 (jsx-depth 1 part-side jsx)) . -323) (undo-tree-id1145 . -3) 326 (323 . 326) (323 . 324) 337) nil (26130 39537 874120 60000) 0 nil])
([nil nil ((#(" " 0 1 (part-side jsx)) . 162) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (#(" " 0 1 (jsx-depth 1 part-side jsx)) . -540) (#(" " 0 1 (part-side jsx)) . -129) 162 (t 26130 29841 22147 356000)) ((129 . 130) (540 . 541) (162 . 163)) (26130 30289 479319 275000) 0 nil])
([nil nil ((nil rear-nonsticky nil 443 . 444) (nil part-side jsx 443 . 444) (nil jsx-depth 1 443 . 444) (nil tag-name "div" 443 . 444) (nil tag-type end 443 . 444) (nil tag-end t 443 . 444) (nil font-lock-face web-mode-html-tag-bracket-face 443 . 444) (nil part-side jsx 440 . 443) (nil jsx-depth 1 440 . 443) (nil tag-name "div" 440 . 443) (nil tag-type end 440 . 443) (nil font-lock-face web-mode-html-tag-face 440 . 443) (nil part-side jsx 439 . 440) (nil jsx-depth 1 439 . 440) (nil tag-name "div" 439 . 440) (nil tag-type end 439 . 440) (nil font-lock-face web-mode-html-tag-bracket-face 439 . 440) (nil part-side jsx 438 . 439) (nil jsx-depth 1 438 . 439) (nil tag-name "div" 438 . 439) (nil tag-type end 438 . 439) (nil tag-beg 20 438 . 439) (nil font-lock-face web-mode-html-tag-bracket-face 438 . 439) (nil part-side jsx 431 . 438) (nil jsx-depth 1 431 . 438) (nil part-side jsx 430 . 431) (nil jsx-depth 1 430 . 431) (nil tag-name "matrixrainingletters" 430 . 431) (nil tag-type void 430 . 431) (nil tag-end t 430 . 431) (nil font-lock-face web-mode-html-tag-bracket-face 430 . 431) (nil part-side jsx 429 . 430) (nil jsx-depth 1 429 . 430) (nil tag-name "matrixrainingletters" 429 . 430) (nil tag-type void 429 . 430) (nil font-lock-face web-mode-html-tag-bracket-face 429 . 430) (nil part-side jsx 428 . 429) (nil jsx-depth 1 428 . 429) (nil tag-name "matrixrainingletters" 428 . 429) (nil tag-type void 428 . 429) (nil part-side jsx 427 . 428) (nil jsx-depth 1 427 . 428) (nil tag-attr t 427 . 428) (nil tag-attr-end 12 427 . 428) (nil tag-name "matrixrainingletters" 427 . 428) (nil tag-type void 427 . 428) (nil font-lock-face web-mode-html-attr-value-face 427 . 428) (nil part-side jsx 406 . 427) (nil jsx-depth 1 406 . 427) (nil tag-attr t 406 . 427) (nil tag-name "matrixrainingletters" 406 . 427) (nil tag-type void 406 . 427) (nil font-lock-face web-mode-html-attr-value-face 406 . 427) (nil part-side jsx 405 . 406) (nil jsx-depth 1 405 . 406) (nil tag-attr t 405 . 406) (nil tag-name "matrixrainingletters" 405 . 406) (nil tag-type void 405 . 406) (nil font-lock-face web-mode-html-attr-equal-face 405 . 406) (nil part-side jsx 394 . 405) (nil jsx-depth 1 394 . 405) (nil tag-attr t 394 . 405) (nil tag-name "matrixrainingletters" 394 . 405) (nil tag-type void 394 . 405) (nil font-lock-face web-mode-html-attr-name-face 394 . 405) (nil part-side jsx 393 . 394) (nil jsx-depth 1 393 . 394) (nil tag-attr-beg 0 393 . 394) (nil tag-attr t 393 . 394) (nil tag-name "matrixrainingletters" 393 . 394) (nil tag-type void 393 . 394) (nil font-lock-face web-mode-html-attr-name-face 393 . 394) (nil part-side jsx 392 . 393) (nil jsx-depth 1 392 . 393) (nil tag-name "matrixrainingletters" 392 . 393) (nil tag-type void 392 . 393) (nil part-side jsx 372 . 392) (nil jsx-depth 1 372 . 392) (nil tag-name "matrixrainingletters" 372 . 392) (nil tag-type void 372 . 392) (nil font-lock-face web-mode-html-tag-face 372 . 392) (nil part-side jsx 371 . 372) (nil jsx-depth 1 371 . 372) (nil tag-name "matrixrainingletters" 371 . 372) (nil tag-type void 371 . 372) (nil tag-beg 25 371 . 372) (nil font-lock-face web-mode-html-tag-bracket-face 371 . 372) (nil part-side jsx 362 . 371) (nil jsx-depth 1 362 . 371) (nil part-side jsx 361 . 362) (nil jsx-depth 1 361 . 362) (nil tag-name "div" 361 . 362) (nil tag-type start 361 . 362) (nil tag-end t 361 . 362) (nil font-lock-face web-mode-html-tag-bracket-face 361 . 362) (nil part-side jsx 360 . 361) (nil jsx-depth 1 360 . 361) (nil tag-attr t 360 . 361) (nil tag-attr-end 9 360 . 361) (nil tag-name "div" 360 . 361) (nil tag-type start 360 . 361) (nil font-lock-face web-mode-html-attr-value-face 360 . 361) (nil part-side jsx 339 . 360) (nil jsx-depth 1 339 . 360) (nil tag-attr t 339 . 360) (nil tag-name "div" 339 . 360) (nil tag-type start 339 . 360) (nil font-lock-face web-mode-html-attr-value-face 339 . 360) (nil part-side jsx 338 . 339) (nil jsx-depth 1 338 . 339) (nil tag-attr t 338 . 339) (nil tag-name "div" 338 . 339) (nil tag-type start 338 . 339) (nil font-lock-face web-mode-html-attr-equal-face 338 . 339) (nil part-side jsx 330 . 338) (nil jsx-depth 1 330 . 338) (nil tag-attr t 330 . 338) (nil tag-name "div" 330 . 338) (nil tag-type start 330 . 338) (nil font-lock-face web-mode-html-attr-name-face 330 . 338) (nil part-side jsx 329 . 330) (nil jsx-depth 1 329 . 330) (nil tag-attr-beg 0 329 . 330) (nil tag-attr t 329 . 330) (nil tag-name "div" 329 . 330) (nil tag-type start 329 . 330) (nil font-lock-face web-mode-html-attr-name-face 329 . 330) (nil part-side jsx 328 . 329) (nil jsx-depth 1 328 . 329) (nil tag-name "div" 328 . 329) (nil tag-type start 328 . 329) (nil part-side jsx 325 . 328) (nil jsx-depth 1 325 . 328) (nil tag-name "div" 325 . 328) (nil tag-type start 325 . 328) (nil font-lock-face web-mode-html-tag-face 325 . 328) (nil part-side jsx 324 . 325) (nil jsx-depth 1 324 . 325) (nil tag-name "div" 324 . 325) (nil tag-type start 324 . 325) (nil tag-beg 17 324 . 325) (nil font-lock-face web-mode-html-tag-bracket-face 324 . 325) (nil part-side jsx 323 . 324) (nil jsx-depth 1 323 . 324) (323 . 444) (t 26130 39537 886936 616000)) nil (26130 39542 839084 880000) 0 nil])
([nil nil ((212 . 219) (t 26130 29864 342156 555000)) ((#(" h-full" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 1 2 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 2 3 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 3 4 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 4 5 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 5 6 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 6 7 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 212) (undo-tree-id647 . -7) (undo-tree-id648 . -7)) (26130 30289 319514 388000) 0 nil] [nil nil ((#("relative" 0 8 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 145) (undo-tree-id548 . -7) (undo-tree-id549 . -8) (undo-tree-id550 . -8) (t 26130 29853 285485 528000)) ((145 . 153)) (26130 29862 505089 452000) 0 nil] [nil nil ((#("absolute" 0 7 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 7 8 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 200) (undo-tree-id542 . -7) (undo-tree-id543 . -8) (undo-tree-id544 . -8)) ((200 . 208) (t 26130 29850 558817 786000)) (26130 29850 551123 441000) 0 nil])
([nil nil ((#(" <div className=\"absolute inset-0 z-0\">
        <MatrixRainingLetters custom_class=\"absolute inset-0 z-0\" />
      </div>
" 0 1 (jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 2 5 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 5 6 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 7 15 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 15 16 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 37 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 37 38 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 38 39 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 39 48 (jsx-depth 1 part-side jsx) 48 49 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 49 69 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 69 70 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 70 71 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 71 82 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 82 83 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 83 104 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 104 105 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 105 106 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 106 107 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 107 108 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 108 115 (jsx-depth 1 part-side jsx) 115 116 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 116 117 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 117 120 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 120 121 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx rear-nonsticky t) 121 122 (jsx-depth 1 part-side jsx)) . 323) (undo-tree-id1151 . -120) (undo-tree-id1152 . -121) (undo-tree-id1153 . 1) (undo-tree-id1154 . -120) (undo-tree-id1155 . -11) (undo-tree-id1156 . -120) (undo-tree-id1157 . -120) (undo-tree-id1158 . -120) (undo-tree-id1159 . -120) (undo-tree-id1160 . -120) (undo-tree-id1161 . -120) (undo-tree-id1162 . -11) (undo-tree-id1163 . -120) (undo-tree-id1164 . -11) (undo-tree-id1165 . -122) 334 (t 26130 39542 866946 858000)) nil (26130 39565 814041 749000) 0 nil])
([nil nil ((219 . 226) (t 26130 29870 408825 616000)) ((#(" w-full" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 1 2 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 2 3 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 3 4 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 4 5 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 5 6 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 6 7 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 219) (undo-tree-id645 . -1) (undo-tree-id646 . -1)) (26130 30289 164573 57000) 0 nil])
([nil nil ((145 . 153)) ((#("absolute" 0 8 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 145) (undo-tree-id551 . -8) (undo-tree-id552 . -8) (undo-tree-id553 . -8) (undo-tree-id554 . -8) (undo-tree-id555 . -7) (undo-tree-id556 . -7) (undo-tree-id557 . -7) (undo-tree-id558 . -7) (undo-tree-id559 . -7) (undo-tree-id560 . -7) (t 26130 29857 648820 583000)) (26130 29857 640679 818000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 323 . 324) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -444) (322 . 445) 258) nil (26130 39567 422608 504000) 0 nil] [nil nil ((247 . 369) 258) ((#(" <div className=\"absolute inset-0 z-0\">
        <MatrixRainingLetters custom_class=\"absolute inset-0 z-0\" />
      </div>
" 0 1 (jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 2 5 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 5 6 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 7 15 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 15 16 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 37 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 37 38 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 38 39 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 39 48 (jsx-depth 1 part-side jsx) 48 49 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 49 69 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 69 70 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 70 71 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 71 82 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 82 83 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 83 104 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 104 105 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 105 106 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 106 107 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 107 108 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 108 115 (jsx-depth 1 part-side jsx) 115 116 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 116 117 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 117 120 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 120 121 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 121 122 (jsx-depth 1 part-side jsx)) . 247) (undo-tree-id1166 . -122) (undo-tree-id1167 . -121) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (t 26130 39559 746981 573000)) (26130 39559 734222 530000) 0 nil])
([nil nil ((#("h" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . -213) (undo-tree-id561 . -1) (undo-tree-id563 . -1) (#("-" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . -214) (undo-tree-id564 . -1) (undo-tree-id566 . -1) (#("f" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . -215) (undo-tree-id567 . -1) (undo-tree-id569 . -1) (#("u" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . -216) (undo-tree-id570 . -1) (undo-tree-id572 . -1) (#("l" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . -217) (undo-tree-id573 . -1) (undo-tree-id575 . -1) (#("l" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . -218) (undo-tree-id576 . -1) (undo-tree-id578 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . -219) (undo-tree-id579 . -1) 220 (t 26130 29877 345495 19000)) ((213 . 220)) (26130 30289 127 865000) 0 nil])
nil
([nil nil ((570 . 572) (560 . 561) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 560) (545 . 550) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 545) (512 . 514) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 512) (487 . 489) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 487) (473 . 478) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 473) (460 . 465) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 460) (447 . 449) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 447) (424 . 426) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 424) (undo-tree-id1172 . 8) (undo-tree-id1173 . 8) (415 . 417) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 415) (348 . 354) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 348) (307 . 309) (#(" " 0 1 (jsx-depth 1 part-side jsx rear-nonsticky t)) . 307) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (232 . 237) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 232) (217 . 222) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 217) (188 . 190) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 188) (163 . 165) (#("        " 0 8 (jsx-depth 1 part-side jsx)) . 163) (149 . 154) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 149) (142 . 143) (#("    " 0 3 (part-side jsx) 3 4 (part-side jsx)) . 142) (130 . 132) 324 (t 26130 39567 436997 387000)) nil (26130 39620 716210 666000) 0 nil])
nil
([nil nil ((#("l" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 213) (#("l" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 213) (#("u" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 213) (#("f" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 213) (#("-" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 213) (#("w" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 213) (t 26130 29883 762164 217000)) ((213 . 214) (213 . 214) (213 . 214) (213 . 214) (213 . 214) (213 . 214)) (26130 30288 839300 426000) 0 nil])
([nil nil ((#("		<div className=\"absolute inset-0 z-0\">
		    <MatrixRainingLetters custom_class=\"absolute inset-0 z-0\" />
		</div>
" 0 2 (jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 8 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 38 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 38 39 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 39 40 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 40 41 (jsx-depth 1 part-side jsx) 41 47 (jsx-depth 1 part-side jsx) 47 48 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 48 68 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 68 69 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 69 70 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 70 81 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 81 82 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 82 83 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 83 84 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 84 85 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 85 86 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 86 87 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 87 88 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 88 89 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 89 90 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 90 91 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 91 92 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 92 103 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 103 104 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 104 105 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 105 106 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 106 107 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 107 108 (jsx-depth 1 part-side jsx) 108 110 (jsx-depth 1 part-side jsx) 110 111 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 111 112 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 112 115 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 115 116 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 116 117 (jsx-depth 1 part-side jsx)) . 307) (undo-tree-id1224 . -116) (undo-tree-id1225 . -116) (undo-tree-id1226 . 25) (undo-tree-id1227 . -10) (undo-tree-id1228 . -116) (undo-tree-id1229 . -108) (undo-tree-id1230 . -83) (undo-tree-id1231 . -83) (undo-tree-id1232 . -83) (undo-tree-id1233 . -83) (undo-tree-id1234 . -83) (undo-tree-id1235 . -83) (undo-tree-id1236 . -82) (undo-tree-id1237 . -82) (undo-tree-id1238 . -82) (undo-tree-id1239 . -82) (undo-tree-id1240 . -83) (undo-tree-id1241 . -10) (undo-tree-id1242 . -10) (undo-tree-id1243 . -10) (undo-tree-id1244 . -10) (undo-tree-id1245 . -10) (undo-tree-id1246 . -10) (undo-tree-id1247 . -10) (undo-tree-id1248 . -116) (undo-tree-id1249 . -10) (undo-tree-id1250 . -116) (undo-tree-id1251 . -117) 423 (t 26130 39621 737109 58000)) nil (26130 39630 22121 330000) 0 nil] [nil nil ((#("		<div className=\"absolute inset-0 z-0\">
" 0 2 (jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 8 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 38 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 38 39 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 39 40 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 40 41 (jsx-depth 1 part-side jsx)) . 307) (undo-tree-id1192 . -40) (undo-tree-id1194 . -10) (undo-tree-id1195 . -10) (undo-tree-id1197 . -41) 317 (t 26130 39568 623666 495000)) ((307 . 348)) (26130 39620 459972 534000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 212) (undo-tree-id612 . -1) (undo-tree-id614 . -1) (undo-tree-id616 . -1) (undo-tree-id618 . -1) (undo-tree-id620 . -1) (undo-tree-id622 . -1) (t 26130 29929 482182 253000)) ((212 . 213)) (26130 30288 679585 469000) 0 nil] [nil nil ((213 . 218)) ((#("bg-cv" 0 4 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 4 5 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 213) (undo-tree-id593 . -4) (undo-tree-id594 . -4) (undo-tree-id595 . -4) (undo-tree-id596 . -4) (undo-tree-id597 . -4) (undo-tree-id598 . -4) (undo-tree-id599 . -4) (undo-tree-id600 . -4) (undo-tree-id601 . -5) (undo-tree-id602 . -4) (undo-tree-id603 . -5)) (26130 29928 160965 183000) 0 nil])
([nil nil ((304 . 308) (t 26130 39630 33792 787000)) nil (26130 39635 931606 696000) 0 nil])
([nil nil ((#("		</div>
" 0 2 (jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 4 7 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 8 9 (jsx-depth 1 part-side jsx)) . 374) (undo-tree-id1181 . -8) (undo-tree-id1182 . -8) (undo-tree-id1183 . -9) (undo-tree-id1184 . -9) (undo-tree-id1185 . -9) (undo-tree-id1187 . -7) (undo-tree-id1189 . -7) (undo-tree-id1191 . -9) 381) ((374 . 383)) (26130 39620 260127 876000) 0 nil])
([nil nil ((#(" h-full" 0 7 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 153) (undo-tree-id604 . -6) (undo-tree-id605 . -6) (undo-tree-id606 . -6) (undo-tree-id608 . -6) (undo-tree-id610 . -7)) ((153 . 160) (t 26130 29993 332207 458000)) (26130 29992 326588 602000) 0 nil])
([nil nil ((#("v" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . -217) (undo-tree-id581 . -1) (undo-tree-id582 . -1) 218) ((217 . 218)) (26130 29927 784895 609000) 0 nil])
([nil nil ((315 . 318) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -315) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) 316 (308 . 316) (t 26130 39635 943804 943000)) nil (26130 39800 902084 939000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 280) (undo-tree-id1180 . -1)) ((280 . 281)) (26130 39620 52100 164000) 0 nil])
([nil nil ((nil rear-nonsticky nil 395 . 396) (#("
" 0 1 (part-side jsx)) . -447) (394 . 448) 393 (t 26130 29946 718855 728000)) ((#("
	<MatrixRainingLetters custom_class=\"absolute z-0\"/>
" 0 1 (part-side jsx) 1 2 (part-side jsx rear-nonsticky nil) 2 37 (part-side jsx) 37 38 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 38 50 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 50 51 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 51 53 (part-side jsx) 53 54 (part-side jsx)) . 394) (undo-tree-id634 . -53) (undo-tree-id635 . -1) (undo-tree-id636 . -53) (undo-tree-id637 . -2) (undo-tree-id638 . -2) (undo-tree-id639 . -2) (undo-tree-id640 . -2) (undo-tree-id641 . -2) (undo-tree-id642 . -2) (undo-tree-id643 . -2) (undo-tree-id644 . -2) (447 . 448) (nil rear-nonsticky t 395 . 396) (t 26130 29987 475538 481000)) (26130 29987 472252 160000) 0 nil] [nil nil ((153 . 160) (t 26130 29934 455517 549000)) ((#(" w-full" 0 7 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 153) (undo-tree-id624 . -7) (undo-tree-id625 . -7) (undo-tree-id626 . -7) (undo-tree-id627 . -7) (undo-tree-id628 . -6) (undo-tree-id629 . -6) (undo-tree-id630 . -6) (undo-tree-id631 . -6) (undo-tree-id632 . -6) (undo-tree-id633 . -6) (t 26130 29941 788853 781000)) (26130 29941 786297 429000) 0 nil])
([nil nil ((217 . 221)) ((#("over" 0 4 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 217) (undo-tree-id583 . -4) (undo-tree-id584 . -4) (undo-tree-id585 . -4) (undo-tree-id586 . -4) (undo-tree-id587 . -3) (undo-tree-id588 . -3) (undo-tree-id589 . -3) (undo-tree-id590 . -3) (undo-tree-id591 . -3) (undo-tree-id592 . -3) (t 26130 29922 435512 807000)) (26130 29922 425789 826000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -304) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) 305 (#("bg-yellow-300" 0 13 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 305) (undo-tree-id1281 . -12) (undo-tree-id1282 . -12) (undo-tree-id1283 . -12) (undo-tree-id1284 . -12) (undo-tree-id1285 . -12) (undo-tree-id1286 . -12) (undo-tree-id1287 . -12) (undo-tree-id1288 . -12) (undo-tree-id1289 . -12) (undo-tree-id1290 . -12) (undo-tree-id1291 . -12) (undo-tree-id1292 . -12) (undo-tree-id1293 . -12) (undo-tree-id1294 . -12) (undo-tree-id1295 . -12) (undo-tree-id1296 . -13) (undo-tree-id1297 . -13) 317 (t 26130 39640 227147 83000)) nil (26130 39812 152416 983000) 0 nil] [nil nil ((nil rear-nonsticky nil 332 . 333) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -1578) (320 . 1579) 317 (t 26130 39640 227147 83000)) ((#("
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
            this is the first pannel
" 0 1 (jsx-depth 1 part-side jsx) 1 12 (jsx-depth 1 part-side jsx) 12 13 (jsx-depth 1 part-side jsx rear-nonsticky nil) 13 17 (jsx-depth 1 part-side jsx) 17 50 (jsx-depth 1 part-side jsx) 50 54 (jsx-depth 1 part-side jsx) 54 87 (jsx-depth 1 part-side jsx) 87 91 (jsx-depth 1 part-side jsx) 91 124 (jsx-depth 1 part-side jsx) 124 128 (jsx-depth 1 part-side jsx) 128 161 (jsx-depth 1 part-side jsx) 161 165 (jsx-depth 1 part-side jsx) 165 198 (jsx-depth 1 part-side jsx) 198 202 (jsx-depth 1 part-side jsx) 202 235 (jsx-depth 1 part-side jsx) 235 239 (jsx-depth 1 part-side jsx) 239 272 (jsx-depth 1 part-side jsx) 272 276 (jsx-depth 1 part-side jsx) 276 309 (jsx-depth 1 part-side jsx) 309 313 (jsx-depth 1 part-side jsx) 313 346 (jsx-depth 1 part-side jsx) 346 350 (jsx-depth 1 part-side jsx) 350 383 (jsx-depth 1 part-side jsx) 383 387 (jsx-depth 1 part-side jsx) 387 420 (jsx-depth 1 part-side jsx) 420 424 (jsx-depth 1 part-side jsx) 424 457 (jsx-depth 1 part-side jsx) 457 461 (jsx-depth 1 part-side jsx) 461 494 (jsx-depth 1 part-side jsx) 494 498 (jsx-depth 1 part-side jsx) 498 531 (jsx-depth 1 part-side jsx) 531 535 (jsx-depth 1 part-side jsx) 535 568 (jsx-depth 1 part-side jsx) 568 572 (jsx-depth 1 part-side jsx) 572 605 (jsx-depth 1 part-side jsx) 605 609 (jsx-depth 1 part-side jsx) 609 642 (jsx-depth 1 part-side jsx) 642 646 (jsx-depth 1 part-side jsx) 646 679 (jsx-depth 1 part-side jsx) 679 683 (jsx-depth 1 part-side jsx) 683 716 (jsx-depth 1 part-side jsx) 716 720 (jsx-depth 1 part-side jsx) 720 753 (jsx-depth 1 part-side jsx) 753 757 (jsx-depth 1 part-side jsx) 757 790 (jsx-depth 1 part-side jsx) 790 794 (jsx-depth 1 part-side jsx) 794 827 (jsx-depth 1 part-side jsx) 827 831 (jsx-depth 1 part-side jsx) 831 864 (jsx-depth 1 part-side jsx) 864 868 (jsx-depth 1 part-side jsx) 868 901 (jsx-depth 1 part-side jsx) 901 905 (jsx-depth 1 part-side jsx) 905 938 (jsx-depth 1 part-side jsx) 938 942 (jsx-depth 1 part-side jsx) 942 975 (jsx-depth 1 part-side jsx) 975 979 (jsx-depth 1 part-side jsx) 979 1012 (jsx-depth 1 part-side jsx) 1012 1016 (jsx-depth 1 part-side jsx) 1016 1049 (jsx-depth 1 part-side jsx) 1049 1053 (jsx-depth 1 part-side jsx) 1053 1086 (jsx-depth 1 part-side jsx) 1086 1090 (jsx-depth 1 part-side jsx) 1090 1123 (jsx-depth 1 part-side jsx) 1123 1127 (jsx-depth 1 part-side jsx) 1127 1160 (jsx-depth 1 part-side jsx) 1160 1164 (jsx-depth 1 part-side jsx) 1164 1197 (jsx-depth 1 part-side jsx) 1197 1201 (jsx-depth 1 part-side jsx) 1201 1234 (jsx-depth 1 part-side jsx) 1234 1238 (jsx-depth 1 part-side jsx) 1238 1258 (jsx-depth 1 part-side jsx) 1258 1259 (jsx-depth 1 part-side jsx)) . 320) (undo-tree-id1254 . -1258) (undo-tree-id1255 . -1258) (undo-tree-id1256 . -1) (undo-tree-id1257 . -13) (undo-tree-id1258 . -13) (1578 . 1579) (nil rear-nonsticky t 332 . 333)) (26130 39800 898866 390000) 0 nil])
([nil nil ((#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 348) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (t 26130 39589 277042 303000)) ((348 . 349)) (26130 39619 856107 56000) 0 nil] [nil nil ((303 . 312)) ((#(" absolute" 0 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 303) (undo-tree-id1198 . -9) (undo-tree-id1199 . -9) (undo-tree-id1200 . -8) (undo-tree-id1201 . -8) (undo-tree-id1202 . -8) (undo-tree-id1203 . -8) (undo-tree-id1204 . -8) (undo-tree-id1205 . -8) (t 26130 39583 937031 320000)) (26130 39583 924038 656000) 0 nil])
nil
nil
nil
([nil nil ((#("		" 0 2 (jsx-depth 1 part-side jsx)) . -307) (undo-tree-id1298 . -2) (undo-tree-id1299 . -2) (undo-tree-id1300 . -2) (undo-tree-id1301 . -2) 309 (306 . 309) (t 26130 39812 194167 417000) 303) nil (26130 39819 206830 414000) 0 nil])
nil
([nil nil ((348 . 349)) ((#("w" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 348) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1)) (26130 39619 667959 512000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 427 . 428) (nil part-side jsx 427 . 428) (nil jsx-depth 1 427 . 428) (nil tag-name "div" 427 . 428) (nil tag-type end 427 . 428) (nil tag-end t 427 . 428) (nil font-lock-face web-mode-html-tag-bracket-face 427 . 428) (nil part-side jsx 424 . 427) (nil jsx-depth 1 424 . 427) (nil tag-name "div" 424 . 427) (nil tag-type end 424 . 427) (nil font-lock-face web-mode-html-tag-face 424 . 427) (nil part-side jsx 423 . 424) (nil jsx-depth 1 423 . 424) (nil tag-name "div" 423 . 424) (nil tag-type end 423 . 424) (nil font-lock-face web-mode-html-tag-bracket-face 423 . 424) (nil part-side jsx 422 . 423) (nil jsx-depth 1 422 . 423) (nil tag-name "div" 422 . 423) (nil tag-type end 422 . 423) (nil tag-beg 20 422 . 423) (nil font-lock-face web-mode-html-tag-bracket-face 422 . 423) (nil part-side jsx 415 . 422) (nil jsx-depth 1 415 . 422) (nil part-side jsx 414 . 415) (nil jsx-depth 1 414 . 415) (nil tag-name "matrixrainingletters" 414 . 415) (nil tag-type void 414 . 415) (nil tag-end t 414 . 415) (nil font-lock-face web-mode-html-tag-bracket-face 414 . 415) (nil part-side jsx 413 . 414) (nil jsx-depth 1 413 . 414) (nil tag-name "matrixrainingletters" 413 . 414) (nil tag-type void 413 . 414) (nil font-lock-face web-mode-html-tag-bracket-face 413 . 414) (nil part-side jsx 412 . 413) (nil jsx-depth 1 412 . 413) (nil tag-name "matrixrainingletters" 412 . 413) (nil tag-type void 412 . 413) (nil part-side jsx 411 . 412) (nil jsx-depth 1 411 . 412) (nil tag-attr t 411 . 412) (nil tag-attr-end 12 411 . 412) (nil tag-name "matrixrainingletters" 411 . 412) (nil tag-type void 411 . 412) (nil font-lock-face web-mode-html-attr-value-face 411 . 412) (nil part-side jsx 390 . 411) (nil jsx-depth 1 390 . 411) (nil tag-attr t 390 . 411) (nil tag-name "matrixrainingletters" 390 . 411) (nil tag-type void 390 . 411) (nil font-lock-face web-mode-html-attr-value-face 390 . 411) (nil part-side jsx 389 . 390) (nil jsx-depth 1 389 . 390) (nil tag-attr t 389 . 390) (nil tag-name "matrixrainingletters" 389 . 390) (nil tag-type void 389 . 390) (nil font-lock-face web-mode-html-attr-equal-face 389 . 390) (nil part-side jsx 378 . 389) (nil jsx-depth 1 378 . 389) (nil tag-attr t 378 . 389) (nil tag-name "matrixrainingletters" 378 . 389) (nil tag-type void 378 . 389) (nil font-lock-face web-mode-html-attr-name-face 378 . 389) (nil part-side jsx 377 . 378) (nil jsx-depth 1 377 . 378) (nil tag-attr-beg 0 377 . 378) (nil tag-attr t 377 . 378) (nil tag-name "matrixrainingletters" 377 . 378) (nil tag-type void 377 . 378) (nil font-lock-face web-mode-html-attr-name-face 377 . 378) (nil part-side jsx 376 . 377) (nil jsx-depth 1 376 . 377) (nil tag-name "matrixrainingletters" 376 . 377) (nil tag-type void 376 . 377) (nil part-side jsx 356 . 376) (nil jsx-depth 1 356 . 376) (nil tag-name "matrixrainingletters" 356 . 376) (nil tag-type void 356 . 376) (nil font-lock-face web-mode-html-tag-face 356 . 376) (nil part-side jsx 355 . 356) (nil jsx-depth 1 355 . 356) (nil tag-name "matrixrainingletters" 355 . 356) (nil tag-type void 355 . 356) (nil tag-beg 25 355 . 356) (nil font-lock-face web-mode-html-tag-bracket-face 355 . 356) (nil part-side jsx 346 . 355) (nil jsx-depth 1 346 . 355) (nil part-side jsx 345 . 346) (nil jsx-depth 1 345 . 346) (nil tag-name "div" 345 . 346) (nil tag-type start 345 . 346) (nil tag-end t 345 . 346) (nil font-lock-face web-mode-html-tag-bracket-face 345 . 346) (nil part-side jsx 344 . 345) (nil jsx-depth 1 344 . 345) (nil tag-attr t 344 . 345) (nil tag-attr-end 9 344 . 345) (nil tag-name "div" 344 . 345) (nil tag-type start 344 . 345) (nil font-lock-face web-mode-html-attr-value-face 344 . 345) (nil part-side jsx 323 . 344) (nil jsx-depth 1 323 . 344) (nil tag-attr t 323 . 344) (nil tag-name "div" 323 . 344) (nil tag-type start 323 . 344) (nil font-lock-face web-mode-html-attr-value-face 323 . 344) (nil part-side jsx 322 . 323) (nil jsx-depth 1 322 . 323) (nil tag-attr t 322 . 323) (nil tag-name "div" 322 . 323) (nil tag-type start 322 . 323) (nil font-lock-face web-mode-html-attr-equal-face 322 . 323) (nil part-side jsx 314 . 322) (nil jsx-depth 1 314 . 322) (nil tag-attr t 314 . 322) (nil tag-name "div" 314 . 322) (nil tag-type start 314 . 322) (nil font-lock-face web-mode-html-attr-name-face 314 . 322) (nil part-side jsx 313 . 314) (nil jsx-depth 1 313 . 314) (nil tag-attr-beg 0 313 . 314) (nil tag-attr t 313 . 314) (nil tag-name "div" 313 . 314) (nil tag-type start 313 . 314) (nil font-lock-face web-mode-html-attr-name-face 313 . 314) (nil part-side jsx 312 . 313) (nil jsx-depth 1 312 . 313) (nil tag-name "div" 312 . 313) (nil tag-type start 312 . 313) (nil part-side jsx 309 . 312) (nil jsx-depth 1 309 . 312) (nil tag-name "div" 309 . 312) (nil tag-type start 309 . 312) (nil font-lock-face web-mode-html-tag-face 309 . 312) (nil part-side jsx 308 . 309) (nil jsx-depth 1 308 . 309) (nil tag-name "div" 308 . 309) (nil tag-type start 308 . 309) (nil tag-beg 17 308 . 309) (nil font-lock-face web-mode-html-tag-bracket-face 308 . 309) (nil part-side jsx 307 . 308) (nil jsx-depth 1 307 . 308) (307 . 428)) nil (26130 39819 206818 303000) 0 nil])
([nil nil ((#("w" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . -348) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) 349 (t 26130 39612 610423 622000)) ((348 . 349)) (26130 39619 434274 655000) 0 nil])
([nil nil ((#(" <div className=\"absolute inset-0 z-0\">
" 0 1 (jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 2 5 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 5 6 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 7 15 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 15 16 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 37 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 37 38 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 38 39 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 39 40 (jsx-depth 1 part-side jsx)) . 307) (undo-tree-id1312 . -39) (undo-tree-id1313 . -11) (undo-tree-id1314 . -11) (undo-tree-id1315 . -11) (undo-tree-id1316 . -11) (undo-tree-id1317 . -40) 318 (t 26130 39819 214181 854000)) nil (26130 39833 310565 455000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 348) (undo-tree-id1208 . 1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 348) (undo-tree-id1209 . 1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 348) (undo-tree-id1210 . 1) (#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 348) (undo-tree-id1211 . 1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 348) (undo-tree-id1212 . 1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 348) (undo-tree-id1213 . 1) (#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 348) (undo-tree-id1214 . 1) (#("b" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 348) (undo-tree-id1215 . 1)) ((348 . 349) (348 . 349) (348 . 349) (348 . 349) (348 . 349) (348 . 349) (348 . 349) (348 . 349) (t 26130 39615 347095 917000)) (26130 39615 338840 221000) 0 nil])
([nil nil ((#("      </div>
" 0 6 (jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 8 11 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx rear-nonsticky t) 12 13 (jsx-depth 1 part-side jsx)) . 376) (undo-tree-id1302 . -12) (undo-tree-id1303 . 1) (undo-tree-id1304 . -13) (undo-tree-id1305 . -11) (undo-tree-id1306 . -11) (undo-tree-id1307 . -11) (undo-tree-id1308 . -11) (undo-tree-id1309 . -11) (undo-tree-id1310 . -11) (undo-tree-id1311 . -13) 387) nil (26130 39833 310563 25000) 0 nil])
nil
([nil nil ((304 . 308)) nil (26130 39833 310550 675000) 0 nil])
([nil nil ((#("absolute inset-0 z-0" 0 20 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 355) (undo-tree-id1318 . -19) (undo-tree-id1319 . -19) (undo-tree-id1320 . -19) (undo-tree-id1321 . -19) (undo-tree-id1322 . -19) (undo-tree-id1323 . -20) (undo-tree-id1324 . -20) 374 (t 26130 39833 324210 873000)) nil (26130 39843 193376 479000) 0 nil])
([nil nil ((308 . 317) (t 26130 39843 200897 852000)) nil (26130 39852 272100 787000) 0 nil])
([nil nil ((317 . 323) (t 26130 39852 280916 525000)) nil (26130 39864 522365 34000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -317) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -318) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -319) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (#("x" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -320) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -321) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -322) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) 323 (t 26130 39864 534275 58000)) nil (26130 39867 905242 75000) 0 nil])
([nil nil ((#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -309) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (#("b" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -310) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -311) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -312) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -313) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -314) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -315) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -316) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) 317 (t 26130 39867 927615 370000)) nil (26130 39972 602131 858000) 0 nil])
([nil nil ((309 . 317) (t 26130 39972 611163 991000)) nil (26130 39992 858603 409000) 0 nil])
([nil nil ((364 . 372) (t 26130 39992 871203 223000)) nil (26130 40003 960568 699000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -280) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -281) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) 282 (t 26130 40003 971222 558000)) nil (26130 40019 1146 89000) 0 nil])
([nil nil ((280 . 281)) nil (26130 40019 1130 319000) 0 nil])
([nil nil ((316 . 327) (t 26130 40019 11248 746000)) nil (26130 40024 734852 88000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -316) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -317) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -318) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -319) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -320) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -321) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -322) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -323) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -324) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -325) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -326) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) 327 (t 26130 40024 741258 722000)) nil (26130 40032 2097 500000) 0 nil])
([nil nil ((#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 295) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (t 26130 40032 11271 380000)) nil (26130 40495 584511 516000) 0 nil])
([nil nil ((290 . 296) (#("auto" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 290) (undo-tree-id1692 . -3) (undo-tree-id1693 . -4) (undo-tree-id1694 . -4) (undo-tree-id1695 . -4) (undo-tree-id1696 . -4) (undo-tree-id1697 . -4) (undo-tree-id1698 . -4) (t 26130 40496 598747 8000)) nil (26130 40500 614451 408000) 0 nil] [nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 295) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 295) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 295) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 295) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 295) (#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 295) (#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 295) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 295)) ((295 . 296) (295 . 296) (295 . 296) (295 . 296) (295 . 296) (295 . 296) (295 . 296) (295 . 296)) (26130 40494 980429 718000) 0 nil])
([nil nil ((297 . 299) (t 26130 40500 622087 347000)) nil (26130 40541 911274 666000) 0 nil])
([nil nil ((#("overflow-auto z-0 relative" 0 13 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 13 26 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 281) (undo-tree-id1532 . -25) (undo-tree-id1533 . -25) (undo-tree-id1534 . -13) (undo-tree-id1535 . 12) (undo-tree-id1536 . -25) (undo-tree-id1537 . -14) (undo-tree-id1538 . -14) (undo-tree-id1539 . -14) (undo-tree-id1541 . -18) (undo-tree-id1543 . -13) (undo-tree-id1545 . -13) (undo-tree-id1546 . -13) (undo-tree-id1548 . -13) (undo-tree-id1549 . -13) (undo-tree-id1550 . -25) (undo-tree-id1552 . -26) 306 (t 26130 40045 694628 542000)) ((281 . 307)) (26130 40494 648407 571000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -297) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -298) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) 299) nil (26130 40541 911273 516000) 0 nil])
([nil nil ((147 . 151)) ((#(" cla" 0 1 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr-end 0 tag-attr t jsx-depth 1 part-side jsx)) . 147) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -4) (undo-tree-id1691 . -4)) (26130 40494 318353 130000) 0 nil])
([nil nil ((297 . 298)) nil (26130 40578 180783 597000) 0 nil])
([nil nil ((157 . 160) (148 . 157) (#("classN" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr-end 0 tag-attr t jsx-depth 1 part-side jsx)) . -148) (undo-tree-id1555 . -3) (undo-tree-id1556 . -6) (undo-tree-id1558 . -6) 154 (151 . 154) (t 26130 40262 545006 131000)) ((#("ssN" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr-end 0 tag-attr t jsx-depth 1 part-side jsx)) . 151) (undo-tree-id1681 . -3) (148 . 154) (#("className" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 1 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr-end 0 tag-attr t jsx-depth 1 part-side jsx)) . 148) (undo-tree-id1682 . -9) (undo-tree-id1683 . -9) (undo-tree-id1684 . -9) (#("=\"\"" 0 1 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx)) . 157) (undo-tree-id1685 . -2) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1)) (26130 40493 939021 661000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 310) (undo-tree-id1716 . -1) (t 26130 40579 212224 190000)) nil (26130 40651 352633 262000) 0 nil] [nil nil ((#("absolute" 0 8 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 365) (undo-tree-id1704 . -7) (undo-tree-id1705 . -8) (undo-tree-id1706 . -8) (t 26130 40541 922159 258000)) ((365 . 373) (t 26130 40578 18888 779000)) (26130 40576 997025 453000) 0 nil])
([nil nil ((nil rear-nonsticky nil 184 . 185) (nil part-side jsx 159 . 185) (nil jsx-depth 1 159 . 185) (nil tag-attr t 159 . 185) (nil tag-name "div" 159 . 185) (nil tag-type start 159 . 185) (nil font-lock-face web-mode-html-attr-value-face 159 . 185) (159 . 185) 158) ((#("overflow-auto z-0 relative" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 12 13 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 13 14 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 14 25 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 25 26 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx rear-nonsticky nil)) . 159) (nil tag-name "div" 184 . 185) (nil tag-name "div" 173 . 184) (nil tag-name "div" 172 . 173) (nil tag-name "div" 171 . 172) (nil tag-name "div" 170 . 171) (nil tag-name "div" 169 . 170) (nil tag-name "div" 168 . 169) (nil tag-name "div" 167 . 168) (nil tag-name "div" 166 . 167) (nil tag-name "div" 165 . 166) (nil tag-name "div" 164 . 165) (nil tag-name "div" 163 . 164) (nil tag-name "div" 162 . 163) (nil tag-name "div" 161 . 162) (nil tag-name "div" 160 . 161) (nil tag-name "div" 159 . 160) (nil rear-nonsticky t 184 . 185)) (26130 40493 596459 18000) 0 nil])
([nil nil ((310 . 315) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -310) (undo-tree-id1717 . 1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -311) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -312) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -313) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -314) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (#("v" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -315) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -316) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) 317 (t 26130 40651 365683 160000)) nil (26130 40654 861667 62000) 0 nil])
([nil nil ((365 . 373)) ((#("relative" 0 8 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 365) (undo-tree-id1707 . -8) (undo-tree-id1708 . -8) (undo-tree-id1709 . -8) (undo-tree-id1710 . -7) (undo-tree-id1711 . -7) (undo-tree-id1712 . -7) (undo-tree-id1713 . -7) (undo-tree-id1714 . -7) (undo-tree-id1715 . -7) (t 26130 40572 755546 282000)) (26130 40572 745545 189000) 0 nil])
([nil nil ((#("        <MatrixRainingLetters custom_class=\"absolute\" />
" 0 8 (jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 9 29 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 29 30 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 30 31 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 31 42 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 42 43 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 43 52 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 52 53 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 53 54 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 54 55 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 55 56 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 56 57 (jsx-depth 1 part-side jsx)) . 323) (undo-tree-id1559 . -56) (undo-tree-id1560 . -57) (undo-tree-id1562 . -49) (undo-tree-id1563 . -49) (undo-tree-id1565 . -57) 372 (t 26130 40266 138345 723000)) ((323 . 380)) (26130 40493 272603 943000) 0 nil])
([nil nil ((#("fixed" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 310) (undo-tree-id1772 . -4) (undo-tree-id1773 . -4) (undo-tree-id1774 . -4) (undo-tree-id1775 . -4) (undo-tree-id1776 . -5) (t 26130 40654 872355 933000)) nil (26130 40671 45835 712000) 0 nil])
nil
([nil nil ((188 . 245) 200) ((#("        <MatrixRainingLetters custom_class=\"absolute\" />
" 0 8 (jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 9 29 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 29 30 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 30 31 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 31 42 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 42 43 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 43 52 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 52 53 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 53 54 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 54 55 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 55 56 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 56 57 (jsx-depth 1 part-side jsx)) . 188)) (26130 40493 80487 317000) 0 nil])
([nil nil ((#("overflow-scroll h-screen z-0 " 0 15 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 15 17 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 17 18 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 18 19 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 19 20 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 20 21 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 21 22 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 22 23 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 23 24 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 24 25 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 25 29 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 281) (undo-tree-id1779 . -28) (undo-tree-id1780 . -28) (undo-tree-id1781 . -28) (undo-tree-id1782 . -24) (undo-tree-id1783 . -24) (undo-tree-id1784 . -24) (undo-tree-id1785 . -29) (undo-tree-id1786 . -9) (undo-tree-id1787 . -9) (undo-tree-id1788 . -29) (undo-tree-id1789 . -14) (undo-tree-id1790 . -14) (undo-tree-id1791 . -14) (undo-tree-id1792 . -29) (undo-tree-id1793 . -29) (undo-tree-id1794 . -29) (undo-tree-id1795 . -29) (undo-tree-id1796 . -29) (undo-tree-id1797 . -29) (undo-tree-id1798 . -29) (undo-tree-id1799 . -29) (undo-tree-id1800 . -29) (undo-tree-id1801 . -20) (undo-tree-id1802 . -28) (undo-tree-id1803 . -20) (undo-tree-id1804 . -28) (undo-tree-id1805 . -29) (undo-tree-id1806 . -29) 309 (t 26130 40671 59050 783000)) nil (26130 41641 183437 168000) 0 nil])
([nil nil ((196 . 200) 257 (t 26130 40271 388354 863000)) ((#("    " 0 4 (jsx-depth 1 part-side jsx)) . 196)) (26130 40492 876547 971000) 0 nil])
([nil nil ((155 . 160) (#("e" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr-end 0 tag-attr t jsx-depth 1 part-side jsx)) . -155) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) 156 (147 . 156)) nil (26130 41641 183418 578000) 0 nil])
([nil nil ((381 . 389) (t 26130 40278 135033 278000)) ((#("relative" 0 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 381) (undo-tree-id1672 . -8) (undo-tree-id1673 . -8) (undo-tree-id1674 . -8) (undo-tree-id1675 . -8) (undo-tree-id1676 . -8) (undo-tree-id1677 . -8) (undo-tree-id1678 . -8) (undo-tree-id1679 . -8) (undo-tree-id1680 . -8)) (26130 40492 705606 450000) 0 nil])
([nil nil ((nil rear-nonsticky nil 187 . 188) (nil part-side jsx 159 . 188) (nil jsx-depth 1 159 . 188) (nil tag-attr t 159 . 188) (nil tag-name "div" 159 . 188) (nil tag-type start 159 . 188) (nil font-lock-face web-mode-html-attr-value-face 159 . 188) (159 . 188) 158) nil (26130 41641 183406 328000) 0 nil])
([nil nil ((389 . 396) (t 26130 40293 955060 825000)) ((#(" fixed " 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 389) (undo-tree-id1662 . -6) (undo-tree-id1663 . -6) (undo-tree-id1664 . 1) (undo-tree-id1665 . -6) (undo-tree-id1666 . -6) (undo-tree-id1667 . -6) (undo-tree-id1668 . -6) (undo-tree-id1669 . -6) (undo-tree-id1670 . -6) (undo-tree-id1671 . -6)) (26130 40492 560183 825000) 0 nil])
([nil nil ((#("        <MatrixRainingLetters custom_class=\"absolute\" />
" 0 8 (jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 9 29 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 29 30 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 30 31 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 31 42 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 42 43 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 43 44 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 44 52 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 52 53 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 53 54 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 54 55 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 55 56 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 56 57 (jsx-depth 1 part-side jsx)) . 326) (undo-tree-id1807 . -56) (undo-tree-id1808 . -44) (undo-tree-id1809 . -57) (undo-tree-id1810 . -44) (undo-tree-id1811 . -44) (undo-tree-id1812 . -52) (undo-tree-id1813 . -52) (undo-tree-id1814 . -44) (undo-tree-id1815 . -52) (undo-tree-id1816 . -52) (undo-tree-id1817 . -57) 378 (t 26130 41641 197489 543000)) nil (26130 41644 889567 873000) 0 nil])
([nil nil ((404 . 409) (#(":" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -404) (undo-tree-id1566 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -405) (undo-tree-id1568 . -1) (#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -406) (undo-tree-id1570 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -407) (undo-tree-id1572 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . -408) (undo-tree-id1574 . -1) 409 (395 . 409) (t 26130 40297 575067 129000)) ((#(" overflow:auto" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 1 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 12 13 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 13 14 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 395) (undo-tree-id1648 . -9) (undo-tree-id1649 . -9) (undo-tree-id1650 . -9) (undo-tree-id1651 . -9) (undo-tree-id1652 . -9) (undo-tree-id1653 . -9) (undo-tree-id1654 . -9) (404 . 409) (#("-auto" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx) 1 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 404) (undo-tree-id1655 . -1) (undo-tree-id1656 . -4) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1)) (26130 40492 412851 216000) 0 nil])
([nil nil ((191 . 248) 203) nil (26130 41644 889554 843000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 159) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -159) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1580 . -1) (#("v" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -160) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1585 . -1) 161 (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -161) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1590 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -162) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1595 . -1) (#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -163) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1600 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -164) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1605 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -165) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1610 . -1) (#("w" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -166) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1615 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -167) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1620 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -168) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1625 . -1) (#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -169) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1630 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -170) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1635 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -171) (undo-tree-id1637 . -1) (undo-tree-id1639 . -1) 172 (t 26130 40325 248448 647000)) ((159 . 172) (159 . 160)) (26130 40492 264505 53000) 0 nil])
([nil nil ((260 . 261) (t 26130 41644 904163 160000)) nil (26130 41898 110819 945000) 0 nil])
([nil nil ((171 . 177) (t 26130 40331 665126 487000)) ((#(" fixed" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 171)) (26130 40492 109414 873000) 0 nil])
([nil nil ((261 . 269) (t 26130 41898 121304 584000)) nil (26130 41900 829217 831000) 0 nil])
([nil nil ((397 . 403) (#("auto" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 397) (undo-tree-id1640 . -3) (undo-tree-id1641 . -4) (undo-tree-id1642 . -4) (t 26130 40457 432012 142000)) ((397 . 401) (#("scroll" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t jsx-depth 1 part-side jsx)) . 397) (undo-tree-id1643 . -5) (undo-tree-id1644 . -5) (undo-tree-id1645 . -5) (undo-tree-id1646 . -5) (undo-tree-id1647 . -5) (t 26130 40487 345397 563000)) (26130 40487 338133 997000) 0 nil])
([nil nil ((268 . 271) (t 26130 41900 841309 684000)) nil (26130 41902 238055 663000) 0 nil])
nil
([nil nil ((271 . 272) (t 26130 41902 251312 330000)) nil (26130 41910 3164 724000) 0 nil])
([nil nil ((#("{" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -271) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) 272) nil (26130 41910 3164 394000) 0 nil])
([nil nil ((271 . 272)) nil (26130 41910 3163 274000) 0 nil])
([nil nil ((#("(" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -271) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) 272) nil (26130 41910 3163 34000) 0 nil])
([nil nil ((271 . 272)) nil (26130 41910 3162 194000) 0 nil])
([nil nil ((#("#" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -271) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) 272) nil (26130 41910 3161 954000) 0 nil])
([nil nil ((271 . 273)) nil (26130 41910 3161 24000) 0 nil])
([nil nil ((#("|" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -271) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (#("[" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -272) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) 273) nil (26130 41910 3160 634000) 0 nil])
([nil nil ((271 . 272)) nil (26130 41910 3158 654000) 0 nil])
([nil nil ((#("|" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -271) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) 272) nil (26130 41910 3157 954000) 0 nil])
([nil nil ((271 . 272)) nil (26130 41910 3148 574000) 0 nil])
([nil nil ((272 . 277) (t 26130 41910 14660 224000)) nil (26130 41913 108516 398000) 0 nil])
([nil nil ((277 . 288) (t 26130 41913 117999 377000)) nil (26130 41922 907492 716000) 0 nil])
([nil nil ((288 . 291)) nil (26130 41922 907492 416000) 0 nil])
([nil nil ((#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -289) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (#("g" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -290) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) 291) nil (26130 41922 907491 776000) 0 nil])
([nil nil ((289 . 296)) nil (26130 41922 907489 106000) 0 nil])
([nil nil ((#("Ã¨" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -295) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) 296) nil (26130 41922 907488 416000) 0 nil])
([nil nil ((295 . 301)) nil (26130 41922 907479 216000) 0 nil])
([nil nil ((301 . 303) (t 26130 41922 918017 756000)) nil (26130 41924 527375 440000) 0 nil])
([nil nil ((303 . 304) (t 26130 41924 538020 794000)) nil (26130 41937 794939 885000) 0 nil])
([nil nil ((#("}" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -303) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) 304 (t 26130 41937 808045 677000)) nil (26130 41940 360333 364000) 0 nil])
([nil nil ((303 . 305)) nil (26130 41940 360330 424000) 0 nil])
([nil nil ((#("@" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -304) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) 305) nil (26130 42210 569456 161000) 0 nil])
([nil nil ((#("[url('../public/img/logo_h.jpg" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 1 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 4 29 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 29 30 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 271) (undo-tree-id1843 . -29) (undo-tree-id1844 . -29) (undo-tree-id1845 . -29) (undo-tree-id1846 . -29) (undo-tree-id1847 . -29) (undo-tree-id1848 . -29) (undo-tree-id1849 . -29) (undo-tree-id1850 . -30) (undo-tree-id1851 . -30) (t 26130 41940 368050 477000)) nil (26130 42214 955056 575000) 0 nil] [nil nil ((#("'" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 300) (#("g" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 300) (t 26130 41940 368050 477000)) ((300 . 301) (300 . 301)) (26130 42210 567685 437000) 0 nil])
([nil nil ((#(")" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 271) (undo-tree-id1852 . 1) (undo-tree-id1853 . 1) (#("'" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 271) (undo-tree-id1854 . 1) (t 26130 42214 968537 449000)) nil (26130 42216 296307 844000) 0 nil])
nil
([nil nil ((#("]" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 271) (undo-tree-id1855 . 1) (undo-tree-id1856 . 1) (undo-tree-id1857 . -1) (t 26130 42216 308539 733000)) nil (26130 42217 453564 315000) 0 nil])
([nil nil ((271 . 277) (t 26130 42217 465208 369000)) nil (26130 42220 294330 742000) 0 nil])
([nil nil ((266 . 270) (t 26130 42220 308546 546000)) nil (26130 42461 93146 914000) 0 nil])
([nil nil ((272 . 275) (t 26130 42461 105623 311000)) nil (26130 42469 273602 710000) 0 nil])
([nil nil ((#("(" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -274) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) 275) nil (26130 42469 273602 30000) 0 nil])
([nil nil ((274 . 280)) nil (26130 42469 273592 500000) 0 nil])
([nil nil ((#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -275) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -276) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -277) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -278) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -279) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) 280 (t 26130 42469 285637 240000)) nil (26130 42482 852618 152000) 0 nil])
([nil nil ((275 . 279)) nil (26130 42482 852598 722000) 0 nil])
([nil nil ((288 . 293) (t 26130 42482 865660 369000)) nil (26130 42525 160846 624000) 0 nil])
([nil nil ((#("	" 0 1 (jsx-depth 1 part-side jsx)) . -248) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) 249 (248 . 249) (248 . 249) 261 (t 26130 42526 185734 145000)) nil (26130 42531 90924 261000) 0 nil] [nil nil ((#("	    <header className=\" h-1/5 bg-header z-10\">
		{/* Header content */}
		<h1>Welcome to My App</h1>
	    </header>
" 0 5 (jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "header" jsx-depth 1 part-side jsx) 6 12 (font-lock-face web-mode-html-tag-face tag-type start tag-name "header" jsx-depth 1 part-side jsx) 12 13 (tag-type start tag-name "header" jsx-depth 1 part-side jsx) 13 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 14 15 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 15 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 17 22 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 22 23 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 23 25 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 25 31 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 31 45 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 45 46 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 46 47 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "header" jsx-depth 1 part-side jsx) 47 50 (jsx-depth 1 part-side jsx) 50 51 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 51 52 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 52 70 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 70 71 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 71 72 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 72 75 (jsx-depth 1 part-side jsx) 75 76 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 76 78 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 78 79 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 79 96 (jsx-depth 1 part-side jsx) 96 97 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 97 98 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 98 100 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 100 101 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 101 107 (jsx-depth 1 part-side jsx) 107 108 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "header" jsx-depth 1 part-side jsx) 108 109 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 109 115 (font-lock-face web-mode-html-tag-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 115 116 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "header" jsx-depth 1 part-side jsx) 116 117 (jsx-depth 1 part-side jsx)) . 248) (undo-tree-id1894 . -116) (undo-tree-id1895 . -116) (undo-tree-id1896 . 72) (undo-tree-id1897 . -44) (undo-tree-id1898 . -116) (undo-tree-id1899 . -116) (undo-tree-id1900 . -115) (undo-tree-id1901 . -115) (undo-tree-id1902 . -115) (undo-tree-id1903 . -12) (undo-tree-id1904 . -34) (undo-tree-id1905 . -44) (undo-tree-id1906 . -44) (undo-tree-id1907 . -44) (undo-tree-id1908 . -46) (undo-tree-id1909 . -116) (undo-tree-id1910 . -44) (undo-tree-id1911 . -116) (undo-tree-id1912 . -117) 364 (t 26130 42507 792369 488000)) ((248 . 365)) (26130 42524 457321 25000) 0 nil])
([nil nil ((#("	    " 0 5 (jsx-depth 1 part-side jsx)) . -366) (undo-tree-id1931 . -5) (undo-tree-id1932 . -5) (undo-tree-id1933 . -5) (undo-tree-id1934 . -5) 371 (365 . 371) 351) nil (26130 42532 962726 617000) 0 nil] [nil nil ((#("		" 0 2 (jsx-depth 1 part-side jsx)) . -351) (undo-tree-id1919 . -2) (undo-tree-id1920 . -2) (undo-tree-id1921 . -2) (undo-tree-id1922 . -2) 353 (351 . 353) (351 . 352)) ((#("
" 0 1 (jsx-depth 1 part-side jsx)) . 351) (undo-tree-id1927 . 1) (#("		" 0 2 (jsx-depth 1 part-side jsx)) . 351) (undo-tree-id1928 . -2) (undo-tree-id1929 . -2) (undo-tree-id1930 . -2) (351 . 353)) (26130 42531 88610 725000) 0 nil])
([nil nil ((nil rear-nonsticky nil 145 . 146) (141 . 258)) ((#("	    <header className=\" h-1/5 bg-header z-10\">
		{/* Header content */}
		<h1>Welcome to My App</h1>
	    </header>
" 0 4 (part-side jsx) 4 5 (part-side jsx rear-nonsticky nil) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "header" jsx-depth 1 jsx-beg 1 part-side jsx) 6 12 (font-lock-face web-mode-html-tag-face tag-type start tag-name "header" jsx-depth 1 part-side jsx) 12 13 (tag-type start tag-name "header" jsx-depth 1 part-side jsx) 13 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 14 22 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 22 23 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 23 45 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 45 46 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 46 47 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "header" jsx-depth 1 part-side jsx) 47 50 (jsx-depth 1 part-side jsx) 50 51 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 51 52 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 52 70 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 70 71 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 71 72 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 72 75 (jsx-depth 1 part-side jsx) 75 76 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 76 78 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 78 79 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 79 96 (jsx-depth 1 part-side jsx) 96 97 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 97 98 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 98 100 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 100 101 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 101 107 (jsx-depth 1 part-side jsx) 107 108 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "header" jsx-depth 1 part-side jsx) 108 109 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 109 115 (font-lock-face web-mode-html-tag-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 115 116 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "header" jsx-depth 1 part-side jsx) 116 117 (jsx-depth 1 part-side jsx)) . 141) (undo-tree-id1913 . -117) (undo-tree-id1914 . -116) (undo-tree-id1915 . -5) (undo-tree-id1916 . -5) (undo-tree-id1917 . -5) (undo-tree-id1918 . -5) (nil rear-nonsticky t 145 . 146) (t 26130 42523 759063 345000)) (26130 42523 751333 831000) 0 nil])
([nil nil ((289 . 298) (t 26130 42532 989079 66000)) nil (26130 42545 188470 671000) 0 nil])
nil
nil
([nil nil ((276 . 277) (#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 276) (undo-tree-id1935 . -1) (t 26130 42545 199099 859000)) nil (26130 42554 8481 361000) 0 nil])
([nil nil ((278 . 279) (#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 278) (undo-tree-id1936 . -1) (t 26130 42554 15781 540000)) nil (26130 42559 999873 635000) 0 nil])
([nil nil ((278 . 279) (#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 278) (undo-tree-id1937 . -1) (278 . 279) (#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 278) (undo-tree-id1938 . -1) (t 26130 42560 12458 421000)) nil (26130 42564 456643 299000) 0 nil])
([nil nil ((278 . 279) (#("7" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 278) (undo-tree-id1939 . -1) (t 26130 42564 469132 678000)) nil (26130 42568 281794 538000) 0 nil])
([nil nil ((280 . 286) (t 26130 42568 292472 522000)) nil (26130 42578 980869 594000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -279) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (#("w" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -280) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -281) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -282) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (#("/" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -283) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -284) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -285) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) 286 (t 26130 42578 992490 745000)) nil (26130 42584 641648 7000) 0 nil])
([nil nil ((279 . 290)) nil (26130 42584 641628 107000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -279) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -280) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -281) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -282) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -283) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -284) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (#("p" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -285) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -286) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -287) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -288) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -289) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) 290 (t 26130 42584 652500 384000)) nil (26130 42590 512438 614000) 0 nil])
([nil nil ((279 . 280)) nil (26130 42590 512411 464000) 0 nil])
([nil nil ((#("		<h1>Welcome to My App</h1>
" 0 2 (jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 3 5 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 6 23 (jsx-depth 1 part-side jsx) 23 24 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 24 25 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 25 27 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 27 28 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 28 29 (jsx-depth 1 part-side jsx)) . 331) (undo-tree-id2028 . -28) (undo-tree-id2029 . 2) (undo-tree-id2030 . -25) (undo-tree-id2031 . -25) (undo-tree-id2032 . -25) (undo-tree-id2033 . -25) (undo-tree-id2034 . -25) (undo-tree-id2035 . -25) (undo-tree-id2036 . -27) (undo-tree-id2037 . -27) (undo-tree-id2038 . -27) (undo-tree-id2039 . -27) (undo-tree-id2040 . -27) (undo-tree-id2041 . -27) (undo-tree-id2042 . -26) (undo-tree-id2043 . -26) (undo-tree-id2044 . -26) (undo-tree-id2045 . -26) (undo-tree-id2046 . -26) (undo-tree-id2047 . -26) (undo-tree-id2048 . -26) (undo-tree-id2049 . -26) (undo-tree-id2050 . -29) 357 (t 26130 42590 532510 398000)) nil (26130 42599 747711 830000) 0 nil])
([nil nil ((330 . 333) (t 26130 42599 759192 778000) 312) nil (26130 42620 887874 54000) 0 nil])
([nil nil ((333 . 335)) nil (26130 42620 887873 544000) 0 nil])
([nil nil ((333 . 342) (#("h1" 0 2 (jsx-depth 1 part-side jsx)) . -333) (undo-tree-id2051 . -2) (undo-tree-id2052 . -2) (undo-tree-id2053 . -2) 335) nil (26130 42620 887872 834000) 0 nil])
([nil nil ((337 . 348)) nil (26130 42620 887863 474000) 0 nil])
([nil nil ((351 . 354) (#("4" 0 1 (jsx-depth 1 part-side jsx)) . -351) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (#("4" 0 1 (jsx-depth 1 part-side jsx)) . -352) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (#("7" 0 1 (jsx-depth 1 part-side jsx)) . -353) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) 354 (348 . 354) (t 26130 42620 899228 781000)) nil (26130 42627 620782 821000) 0 nil])
([nil nil ((nil rear-nonsticky nil 310 . 311) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -362) (305 . 363) 274 (t 26130 42627 632573 581000)) nil (26130 42646 627788 96000) 0 nil])
([nil nil ((#("    " 0 4 (jsx-depth 1 part-side jsx)) . -250) (undo-tree-id2085 . -4) (undo-tree-id2086 . -4) (undo-tree-id2087 . -4) (undo-tree-id2088 . -4) (undo-tree-id2089 . -4) (undo-tree-id2090 . -4) (undo-tree-id2091 . -4) (undo-tree-id2092 . -4) (undo-tree-id2093 . -4) (undo-tree-id2094 . -4) (undo-tree-id2095 . -4) (undo-tree-id2096 . -4) (254 . 313) (#("<header className=\" h-2/6 bg-header relative z-10\">" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "header" jsx-depth 1 part-side jsx) 1 7 (font-lock-face web-mode-html-tag-face tag-type start tag-name "header" jsx-depth 1 part-side jsx) 7 8 (tag-type start tag-name "header" jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 12 17 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 17 18 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 18 20 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 20 22 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 22 23 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 23 24 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 24 26 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 26 49 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 49 50 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 50 51 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "header" jsx-depth 1 part-side jsx)) . 254) (undo-tree-id2097 . -51) (undo-tree-id2098 . -20) (undo-tree-id2099 . -20) (undo-tree-id2100 . -20) (undo-tree-id2101 . -20) (undo-tree-id2102 . -20) (undo-tree-id2103 . -20) 306) nil (26130 42646 627787 486000) 0 nil])
([nil nil ((350 . 353) (#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -350) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) 351 (350 . 351) (#("7" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -350) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -351) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -352) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) 353 (350 . 353) (#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -350) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) 351 (345 . 351) (#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -345) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) 346 (344 . 346) (#("header" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 344) (undo-tree-id2082 . -5) (undo-tree-id2083 . -6) (undo-tree-id2084 . -6)) nil (26130 42652 674492 251000) 0 nil])
([nil nil ((341 . 348) (t 26130 42653 692617 963000)) nil (26130 42667 587420 373000) 0 nil] [nil nil ((#("z" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 363) (undo-tree-id2069 . -1)) ((363 . 364)) (26130 42652 159851 483000) 0 nil])
([nil nil ((#("w-full " 0 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 341) (undo-tree-id2106 . -6) (undo-tree-id2107 . -6) (undo-tree-id2108 . -6) (undo-tree-id2109 . -6) (undo-tree-id2110 . -7) (undo-tree-id2111 . -7) (undo-tree-id2112 . -6) (undo-tree-id2113 . -6) (undo-tree-id2114 . -6) (undo-tree-id2115 . -6) (undo-tree-id2116 . -6) (undo-tree-id2117 . -6) (undo-tree-id2118 . -6) (undo-tree-id2119 . -6) (undo-tree-id2120 . -6) (undo-tree-id2121 . -6) (undo-tree-id2122 . -6) (undo-tree-id2123 . -6) (undo-tree-id2124 . -6) (undo-tree-id2125 . -6) (undo-tree-id2126 . -6) (undo-tree-id2127 . -6) (undo-tree-id2128 . -6) (undo-tree-id2129 . -7) (undo-tree-id2130 . -7) (t 26130 42667 599308 313000)) nil (26130 42711 275695 919000) 0 nil])
([nil nil ((#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 363) (#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 363) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 363)) ((363 . 364) (363 . 364) (363 . 364)) (26130 42651 698438 441000) 0 nil])
([nil nil ((334 . 338) (t 26130 42711 289382 720000)) nil (26130 42722 679 211000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -362) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2063 . -1) (undo-tree-id2065 . -1) (undo-tree-id2067 . -1) 363) ((362 . 363) (t 26130 42646 635939 279000)) (26130 42651 533976 252000) 0 nil])
([nil nil ((338 . 339) (t 26130 42722 12734 315000)) nil (26130 42727 501162 587000) 0 nil])
([nil nil ((364 . 365) (362 . 364) (t 26130 42646 635939 279000)) ((#("uu" 0 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 362) (undo-tree-id2104 . -2) (undo-tree-id2105 . -2) (#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 364)) (26130 42651 532111 848000) 0 nil])
([nil nil ((339 . 351) (t 26130 42727 512743 682000)) nil (26130 42730 468636 576000) 0 nil])
nil
([nil nil ((351 . 361) (t 26130 42730 482748 740000)) nil (26130 42734 604919 116000) 0 nil])
([nil nil ((361 . 366)) nil (26130 42734 604916 16000) 0 nil])
([nil nil ((#("b" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 376) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (t 26130 42734 616089 113000)) nil (26130 42745 56467 973000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 376) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1)) nil (26130 42745 56464 793000) 0 nil])
([nil nil ((#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 376) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1)) nil (26130 42745 56463 433000) 0 nil])
([nil nil ((#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 376) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1)) nil (26130 42745 56461 893000) 0 nil])
([nil nil ((#("k" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 376) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1)) nil (26130 42745 56459 523000) 0 nil])
([nil nil ((376 . 379)) nil (26130 42745 56450 23000) 0 nil])
([nil nil ((#("red" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 376) (undo-tree-id2141 . -2) (undo-tree-id2142 . -3) (undo-tree-id2143 . -3) (undo-tree-id2144 . -2) (undo-tree-id2145 . -2) (undo-tree-id2146 . -2) (undo-tree-id2147 . -2) (undo-tree-id2148 . -3) (undo-tree-id2149 . -3) (t 26130 42745 66106 909000)) nil (26130 42749 109091 630000) 0 nil])
([nil nil ((376 . 381)) nil (26130 42749 109078 860000) 0 nil])
([nil nil ((#("b" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -376) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -377) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -378) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -379) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (#("k" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -380) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) 381 (t 26130 42749 122780 484000)) nil (26130 42753 414323 600000) 0 nil])
([nil nil ((376 . 380)) nil (26130 42753 414306 619000) 0 nil])
([nil nil ((#("blue" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 376) (undo-tree-id2182 . -3) (undo-tree-id2183 . -4) (undo-tree-id2184 . -4) (undo-tree-id2185 . -3) (undo-tree-id2186 . -3) (undo-tree-id2187 . -3) (undo-tree-id2188 . -3) (undo-tree-id2189 . -3) (undo-tree-id2190 . -3) (undo-tree-id2191 . -4) (undo-tree-id2192 . -4) (t 26130 42753 426121 147000)) nil (26130 42791 240340 800000) 0 nil])
([nil nil ((376 . 377)) nil (26130 42791 240336 910000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -376) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) 377) nil (26130 42791 240336 680000) 0 nil])
([nil nil ((376 . 378)) nil (26130 42791 240335 460000) 0 nil])
([nil nil ((#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -377) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) 378) nil (26130 42791 240335 110000) 0 nil])
([nil nil ((377 . 381)) nil (26130 42791 240333 570000) 0 nil])
([nil nil ((#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 381) (undo-tree-id2174 . 1) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 381) (undo-tree-id2175 . 1) (#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 381) (undo-tree-id2176 . 1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 381) (undo-tree-id2177 . 1)) nil (26130 42791 240330 520000) 0 nil])
([nil nil ((428 . 439) (t 26130 42791 252852 235000)) nil (26130 42800 317423 964000) 0 nil])
([nil nil ((439 . 445) (t 26130 42800 329534 359000)) nil (26130 42802 885425 29000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "h1" jsx-depth 1 part-side jsx)) . 428) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (t 26130 42802 899538 736000)) nil (26130 42813 237685 132000) 0 nil])
([nil nil ((428 . 432) (#("text" 0 1 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "h1text-color-white" jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "h1text-color-white" jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "h1text-color-white" jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "h1text-color-white" jsx-depth 1 part-side jsx)) . 428) (undo-tree-id2193 . -3) (undo-tree-id2194 . 4) (undo-tree-id2195 . -4) (undo-tree-id2196 . -4)) nil (26130 42813 237683 572000) 0 nil])
([nil nil ((428 . 429)) nil (26130 42813 237672 432000) 0 nil])
([nil nil ((#("font" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 1 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 429) (undo-tree-id2199 . -3) (undo-tree-id2200 . -4) (undo-tree-id2201 . -4) (t 26130 42813 252889 701000)) nil (26130 42830 239796 195000) 0 nil])
([nil nil ((429 . 434)) nil (26130 42830 239786 735000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 438) (#("i" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 438) (#("h" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 438) (#("w" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 438) (#("-" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 438) (#("r" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 438) (#("o" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 438) (#("l" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 438) (#("o" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 438) (#("c" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 438) (#("e" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . -438) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (#("Ã¨" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . -439) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) 440 (#("-" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 440) (439 . 440) (#("Ã¨" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . -439) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) 440 (434 . 440) (t 26130 42830 252918 653000)) nil (26130 42836 765770 266000) 0 nil])
([nil nil ((#("\"" 0 1 (tag-type start tag-name "h1" jsx-depth 1 part-side jsx)) . 441) (440 . 441) (429 . 442) (t 26130 42836 779596 437000)) nil (26130 42847 563747 813000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "h1" jsx-depth 1 part-side jsx)) . 440) (#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx)) . 440)) nil (26130 42847 563747 93000) 0 nil])
([nil nil ((450 . 451)) nil (26130 42847 563744 563000) 0 nil])
([nil nil ((450 . 458) (t 26130 42847 576281 491000)) nil (26130 42876 738710 414000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 456) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (t 26130 42876 752997 846000)) nil (26130 42880 743358 889000) 0 nil])
([nil nil ((#("g" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 456) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1)) nil (26130 42880 743356 429000) 0 nil])
([nil nil ((456 . 458)) nil (26130 42880 743347 249000) 0 nil])
([nil nil ((456 . 457) (t 26130 42880 756337 998000)) nil (26130 42888 645746 428000) 0 nil])
([nil nil ((#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . -456) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) 457 (t 26130 42888 686351 505000)) nil (26130 42893 863611 187000) 0 nil])
([nil nil ((456 . 457)) nil (26130 42893 863600 607000) 0 nil])
([nil nil ((367 . 369) (t 26130 42893 876360 343000)) nil (26130 43651 426797 293000) 0 nil])
([nil nil ((369 . 373) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -369) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) 370 (369 . 370) (t 26130 43651 437896 57000)) nil (26130 43655 383850 368000) 0 nil])
([nil nil ((369 . 370) (t 26130 43655 394571 161000)) nil (26130 43658 764876 971000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 367) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1)) nil (26130 43725 97578 301000) 0 nil])
([nil nil ((#("w" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 367) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (t 26130 43726 124722 5000)) nil (26130 43732 631267 429000) 0 nil] [nil nil ((366 . 373) (t 26130 43715 128031 886000)) ((#(" center" 0 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 366) (undo-tree-id2235 . -7) (undo-tree-id2236 . -7) (undo-tree-id2237 . -6) (undo-tree-id2238 . -6) (undo-tree-id2239 . -6) (undo-tree-id2240 . -6) (undo-tree-id2241 . -6) (undo-tree-id2242 . -6) (t 26130 43720 601376 892000)) (26130 43720 590679 674000) 0 nil] [nil nil ((366 . 384) (t 26130 43658 777911 712000)) ((#(" align-self-center" 0 18 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 366) (undo-tree-id2225 . -18) (undo-tree-id2226 . -18) (undo-tree-id2227 . -17) (undo-tree-id2228 . -17) (undo-tree-id2229 . -17) (undo-tree-id2230 . -17) (undo-tree-id2231 . -17) (undo-tree-id2232 . -17) (undo-tree-id2233 . -17) (undo-tree-id2234 . -17) (t 26130 43675 911281 584000)) (26130 43675 900390 742000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 367) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1)) nil (26130 43732 631266 389000) 0 nil])
nil
nil
([nil nil ((#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 367) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1)) nil (26130 43732 631264 759000) 0 nil])
([nil nil ((#("/" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 367) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1)) nil (26130 43732 631263 789000) 0 nil])
([nil nil ((#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 367) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1)) nil (26130 43732 631262 689000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 367) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1)) nil (26130 43732 631259 339000) 0 nil])
([nil nil ((#("		" 0 2 (jsx-depth 1 part-side jsx)) . -398) (undo-tree-id2273 . -2) 400 (397 . 400) (t 26130 43732 641402 570000) 396) nil (26130 43793 277932 452000) 0 nil])
([nil nil ((nil rear-nonsticky nil 498 . 499) (nil part-side jsx 498 . 499) (nil jsx-depth 1 498 . 499) (nil tag-name "header" 498 . 499) (nil tag-type start 498 . 499) (nil tag-end t 498 . 499) (nil font-lock-face web-mode-html-tag-bracket-face 498 . 499) (nil part-side jsx 497 . 498) (nil jsx-depth 1 497 . 498) (nil tag-attr t 497 . 498) (nil tag-attr-end 9 497 . 498) (nil tag-name "header" 497 . 498) (nil tag-type start 497 . 498) (nil font-lock-face web-mode-html-attr-value-face 497 . 498) (nil part-side jsx 428 . 497) (nil jsx-depth 1 428 . 497) (nil tag-attr t 428 . 497) (nil tag-name "header" 428 . 497) (nil tag-type start 428 . 497) (nil font-lock-face web-mode-html-attr-value-face 428 . 497) (nil part-side jsx 427 . 428) (nil jsx-depth 1 427 . 428) (nil tag-attr t 427 . 428) (nil tag-name "header" 427 . 428) (nil tag-type start 427 . 428) (nil font-lock-face web-mode-html-attr-equal-face 427 . 428) (nil part-side jsx 419 . 427) (nil jsx-depth 1 419 . 427) (nil tag-attr t 419 . 427) (nil tag-name "header" 419 . 427) (nil tag-type start 419 . 427) (nil font-lock-face web-mode-html-attr-name-face 419 . 427) (nil part-side jsx 418 . 419) (nil jsx-depth 1 418 . 419) (nil tag-attr-beg 0 418 . 419) (nil tag-attr t 418 . 419) (nil tag-name "header" 418 . 419) (nil tag-type start 418 . 419) (nil font-lock-face web-mode-html-attr-name-face 418 . 419) (nil part-side jsx 417 . 418) (nil jsx-depth 1 417 . 418) (nil tag-name "header" 417 . 418) (nil tag-type start 417 . 418) (nil part-side jsx 411 . 417) (nil jsx-depth 1 411 . 417) (nil tag-name "header" 411 . 417) (nil tag-type start 411 . 417) (nil font-lock-face web-mode-html-tag-face 411 . 417) (nil part-side jsx 410 . 411) (nil jsx-depth 1 410 . 411) (nil tag-name "header" 410 . 411) (nil tag-type start 410 . 411) (nil tag-beg 17 410 . 411) (nil font-lock-face web-mode-html-tag-bracket-face 410 . 411) (nil part-side jsx 398 . 410) (nil jsx-depth 1 398 . 410) (398 . 499)) nil (26130 43793 277930 692000) 0 nil])
([nil nil ((#("	    <header className=\"flex items-center justify-center h-2/6 bg-black relative z-10\">
" 0 4 (jsx-depth 1 part-side jsx) 4 5 (jsx-depth 1 part-side jsx rear-nonsticky t) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "header" jsx-depth 1 part-side jsx) 6 12 (font-lock-face web-mode-html-tag-face tag-type start tag-name "header" jsx-depth 1 part-side jsx) 12 13 (tag-type start tag-name "header" jsx-depth 1 part-side jsx) 13 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 14 22 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 22 23 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 23 80 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 80 81 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 81 82 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 82 83 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 83 84 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 84 85 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 85 86 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 86 87 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "header" jsx-depth 1 part-side jsx) 87 88 (jsx-depth 1 part-side jsx)) . 310) (undo-tree-id2255 . -19) (undo-tree-id2256 . -87) (undo-tree-id2257 . -57) (undo-tree-id2258 . -63) (undo-tree-id2259 . -57) (undo-tree-id2260 . -57) (undo-tree-id2261 . -87) (undo-tree-id2262 . -88) (undo-tree-id2263 . -19) (undo-tree-id2264 . -19) (undo-tree-id2265 . -19) (undo-tree-id2266 . -19) (undo-tree-id2267 . -19) (undo-tree-id2268 . -19) (undo-tree-id2269 . -57) (undo-tree-id2270 . -19) (undo-tree-id2271 . -19) (undo-tree-id2272 . -88) 329) nil (26130 43793 277925 372000) 0 nil])
([nil nil ((#("	    " 0 5 (jsx-depth 1 part-side jsx)) . -310) (undo-tree-id2294 . -5) (undo-tree-id2295 . -5) (undo-tree-id2296 . -5) (undo-tree-id2297 . -5) 315 (309 . 315) (t 26130 43793 284865 235000) 308) nil (26130 43836 965334 984000) 0 nil])
([nil nil ((nil rear-nonsticky nil 595 . 596) (nil part-side jsx 595 . 596) (nil jsx-depth 1 595 . 596) (nil tag-name "header" 595 . 596) (nil tag-type end 595 . 596) (nil tag-end t 595 . 596) (nil font-lock-face web-mode-html-tag-bracket-face 595 . 596) (nil part-side jsx 589 . 595) (nil jsx-depth 1 589 . 595) (nil tag-name "header" 589 . 595) (nil tag-type end 589 . 595) (nil font-lock-face web-mode-html-tag-face 589 . 595) (nil part-side jsx 588 . 589) (nil jsx-depth 1 588 . 589) (nil tag-name "header" 588 . 589) (nil tag-type end 588 . 589) (nil font-lock-face web-mode-html-tag-bracket-face 588 . 589) (nil part-side jsx 587 . 588) (nil jsx-depth 1 587 . 588) (nil tag-name "header" 587 . 588) (nil tag-type end 587 . 588) (nil tag-beg 20 587 . 588) (nil font-lock-face web-mode-html-tag-bracket-face 587 . 588) (nil part-side jsx 574 . 587) (nil jsx-depth 1 574 . 587) (nil part-side jsx 573 . 574) (nil jsx-depth 1 573 . 574) (nil tag-name "div" 573 . 574) (nil tag-type end 573 . 574) (nil tag-end t 573 . 574) (nil font-lock-face web-mode-html-tag-bracket-face 573 . 574) (nil part-side jsx 570 . 573) (nil jsx-depth 1 570 . 573) (nil tag-name "div" 570 . 573) (nil tag-type end 570 . 573) (nil font-lock-face web-mode-html-tag-face 570 . 573) (nil part-side jsx 569 . 570) (nil jsx-depth 1 569 . 570) (nil tag-name "div" 569 . 570) (nil tag-type end 569 . 570) (nil font-lock-face web-mode-html-tag-bracket-face 569 . 570) (nil part-side jsx 568 . 569) (nil jsx-depth 1 568 . 569) (nil tag-name "div" 568 . 569) (nil tag-type end 568 . 569) (nil tag-beg 20 568 . 569) (nil font-lock-face web-mode-html-tag-bracket-face 568 . 569) (nil part-side jsx 551 . 568) (nil jsx-depth 1 551 . 568) (nil part-side jsx 550 . 551) (nil jsx-depth 1 550 . 551) (nil tag-name "h1" 550 . 551) (nil tag-type end 550 . 551) (nil tag-end t 550 . 551) (nil font-lock-face web-mode-html-tag-bracket-face 550 . 551) (nil part-side jsx 548 . 550) (nil jsx-depth 1 548 . 550) (nil tag-name "h1" 548 . 550) (nil tag-type end 548 . 550) (nil font-lock-face web-mode-html-tag-face 548 . 550) (nil part-side jsx 547 . 548) (nil jsx-depth 1 547 . 548) (nil tag-name "h1" 547 . 548) (nil tag-type end 547 . 548) (nil font-lock-face web-mode-html-tag-bracket-face 547 . 548) (nil part-side jsx 546 . 547) (nil jsx-depth 1 546 . 547) (nil tag-name "h1" 546 . 547) (nil tag-type end 546 . 547) (nil tag-beg 20 546 . 547) (nil font-lock-face web-mode-html-tag-bracket-face 546 . 547) (nil part-side jsx 529 . 546) (nil jsx-depth 1 529 . 546) (nil part-side jsx 528 . 529) (nil jsx-depth 1 528 . 529) (nil tag-name "h1" 528 . 529) (nil tag-type start 528 . 529) (nil tag-end t 528 . 529) (nil font-lock-face web-mode-html-tag-bracket-face 528 . 529) (nil part-side jsx 527 . 528) (nil jsx-depth 1 527 . 528) (nil tag-attr t 527 . 528) (nil tag-attr-end 9 527 . 528) (nil tag-name "h1" 527 . 528) (nil tag-type start 527 . 528) (nil font-lock-face web-mode-html-attr-value-face 527 . 528) (nil part-side jsx 507 . 527) (nil jsx-depth 1 507 . 527) (nil tag-attr t 507 . 527) (nil tag-name "h1" 507 . 527) (nil tag-type start 507 . 527) (nil font-lock-face web-mode-html-attr-value-face 507 . 527) (nil part-side jsx 506 . 507) (nil jsx-depth 1 506 . 507) (nil tag-attr t 506 . 507) (nil tag-name "h1" 506 . 507) (nil tag-type start 506 . 507) (nil font-lock-face web-mode-html-attr-equal-face 506 . 507) (nil part-side jsx 498 . 506) (nil jsx-depth 1 498 . 506) (nil tag-attr t 498 . 506) (nil tag-name "h1" 498 . 506) (nil tag-type start 498 . 506) (nil font-lock-face web-mode-html-attr-name-face 498 . 506) (nil part-side jsx 497 . 498) (nil jsx-depth 1 497 . 498) (nil tag-attr-beg 0 497 . 498) (nil tag-attr t 497 . 498) (nil tag-name "h1" 497 . 498) (nil tag-type start 497 . 498) (nil font-lock-face web-mode-html-attr-name-face 497 . 498) (nil part-side jsx 496 . 497) (nil jsx-depth 1 496 . 497) (nil tag-name "h1" 496 . 497) (nil tag-type start 496 . 497) (nil part-side jsx 494 . 496) (nil jsx-depth 1 494 . 496) (nil tag-name "h1" 494 . 496) (nil tag-type start 494 . 496) (nil font-lock-face web-mode-html-tag-face 494 . 496) (nil part-side jsx 493 . 494) (nil jsx-depth 1 493 . 494) (nil tag-name "h1" 493 . 494) (nil tag-type start 493 . 494) (nil tag-beg 17 493 . 494) (nil font-lock-face web-mode-html-tag-bracket-face 493 . 494) (nil part-side jsx 472 . 493) (nil jsx-depth 1 472 . 493) (nil part-side jsx 471 . 472) (nil jsx-depth 1 471 . 472) (nil tag-name "div" 471 . 472) (nil tag-type start 471 . 472) (nil tag-end t 471 . 472) (nil font-lock-face web-mode-html-tag-bracket-face 471 . 472) (nil part-side jsx 470 . 471) (nil jsx-depth 1 470 . 471) (nil tag-attr t 470 . 471) (nil tag-attr-end 9 470 . 471) (nil tag-name "div" 470 . 471) (nil tag-type start 470 . 471) (nil font-lock-face web-mode-html-attr-value-face 470 . 471) (nil part-side jsx 430 . 470) (nil jsx-depth 1 430 . 470) (nil tag-attr t 430 . 470) (nil tag-name "div" 430 . 470) (nil tag-type start 430 . 470) (nil font-lock-face web-mode-html-attr-value-face 430 . 470) (nil part-side jsx 429 . 430) (nil jsx-depth 1 429 . 430) (nil tag-attr t 429 . 430) (nil tag-name "div" 429 . 430) (nil tag-type start 429 . 430) (nil font-lock-face web-mode-html-attr-equal-face 429 . 430) (nil part-side jsx 421 . 429) (nil jsx-depth 1 421 . 429) (nil tag-attr t 421 . 429) (nil tag-name "div" 421 . 429) (nil tag-type start 421 . 429) (nil font-lock-face web-mode-html-attr-name-face 421 . 429) (nil part-side jsx 420 . 421) (nil jsx-depth 1 420 . 421) (nil tag-attr-beg 0 420 . 421) (nil tag-attr t 420 . 421) (nil tag-name "div" 420 . 421) (nil tag-type start 420 . 421) (nil font-lock-face web-mode-html-attr-name-face 420 . 421) (nil part-side jsx 419 . 420) (nil jsx-depth 1 419 . 420) (nil tag-name "div" 419 . 420) (nil tag-type start 419 . 420) (nil part-side jsx 416 . 419) (nil jsx-depth 1 416 . 419) (nil tag-name "div" 416 . 419) (nil tag-type start 416 . 419) (nil font-lock-face web-mode-html-tag-face 416 . 419) (nil part-side jsx 415 . 416) (nil jsx-depth 1 415 . 416) (nil tag-name "div" 415 . 416) (nil tag-type start 415 . 416) (nil tag-beg 17 415 . 416) (nil font-lock-face web-mode-html-tag-bracket-face 415 . 416) (nil part-side jsx 398 . 415) (nil jsx-depth 1 398 . 415) (nil part-side jsx 397 . 398) (nil jsx-depth 2 397 . 398) (nil jsx-end 2 397 . 398) (nil font-lock-face web-mode-block-delimiter-face 397 . 398) (nil part-side jsx 396 . 397) (nil jsx-depth 2 396 . 397) (nil part-token comment 396 . 397) (nil syntax-table (12) 396 . 397) (nil font-lock-face web-mode-javascript-comment-face 396 . 397) (nil part-side jsx 378 . 396) (nil jsx-depth 2 378 . 396) (nil part-token comment 378 . 396) (nil font-lock-face web-mode-javascript-comment-face 378 . 396) (nil part-side jsx 377 . 378) (nil jsx-depth 2 377 . 378) (nil part-token comment 377 . 378) (nil syntax-table (11) 377 . 378) (nil font-lock-face web-mode-javascript-comment-face 377 . 378) (nil part-side jsx 376 . 377) (nil jsx-depth 2 376 . 377) (nil jsx-beg 2 376 . 377) (nil font-lock-face web-mode-block-delimiter-face 376 . 377) (nil part-side jsx 359 . 376) (nil jsx-depth 1 359 . 376) (nil part-side jsx 358 . 359) (nil jsx-depth 1 358 . 359) (nil tag-name "header" 358 . 359) (nil tag-type start 358 . 359) (nil tag-end t 358 . 359) (nil font-lock-face web-mode-html-tag-bracket-face 358 . 359) (nil part-side jsx 357 . 358) (nil jsx-depth 1 357 . 358) (nil tag-attr t 357 . 358) (nil tag-attr-end 9 357 . 358) (nil tag-name "header" 357 . 358) (nil tag-type start 357 . 358) (nil font-lock-face web-mode-html-attr-value-face 357 . 358) (nil part-side jsx 328 . 357) (nil jsx-depth 1 328 . 357) (nil tag-attr t 328 . 357) (nil tag-name "header" 328 . 357) (nil tag-type start 328 . 357) (nil font-lock-face web-mode-html-attr-value-face 328 . 357) (nil part-side jsx 327 . 328) (nil jsx-depth 1 327 . 328) (nil tag-attr t 327 . 328) (nil tag-name "header" 327 . 328) (nil tag-type start 327 . 328) (nil font-lock-face web-mode-html-attr-equal-face 327 . 328) (nil part-side jsx 319 . 327) (nil jsx-depth 1 319 . 327) (nil tag-attr t 319 . 327) (nil tag-name "header" 319 . 327) (nil tag-type start 319 . 327) (nil font-lock-face web-mode-html-attr-name-face 319 . 327) (nil part-side jsx 318 . 319) (nil jsx-depth 1 318 . 319) (nil tag-attr-beg 0 318 . 319) (nil tag-attr t 318 . 319) (nil tag-name "header" 318 . 319) (nil tag-type start 318 . 319) (nil font-lock-face web-mode-html-attr-name-face 318 . 319) (nil part-side jsx 317 . 318) (nil jsx-depth 1 317 . 318) (nil tag-name "header" 317 . 318) (nil tag-type start 317 . 318) (nil part-side jsx 311 . 317) (nil jsx-depth 1 311 . 317) (nil tag-name "header" 311 . 317) (nil tag-type start 311 . 317) (nil font-lock-face web-mode-html-tag-face 311 . 317) (nil part-side jsx 310 . 311) (nil jsx-depth 1 310 . 311) (nil tag-name "header" 310 . 311) (nil tag-type start 310 . 311) (nil tag-beg 17 310 . 311) (nil font-lock-face web-mode-html-tag-bracket-face 310 . 311) (310 . 596)) nil (26130 43836 965330 454000) 0 nil])
([nil nil ((#("            <header className=\"flex items-center justify-center w-full h-2/6 bg-black relative z-10\">
		{/* Header content */}
		<h1 className=\"text-white text-7xl\">Welcome to SO1337</h1>
	    </header>
" 0 12 (jsx-depth 1 part-side jsx) 12 13 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "header" jsx-depth 1 part-side jsx) 13 19 (font-lock-face web-mode-html-tag-face tag-type start tag-name "header" jsx-depth 1 part-side jsx) 19 20 (tag-type start tag-name "header" jsx-depth 1 part-side jsx) 20 21 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 21 29 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 29 30 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 30 99 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 99 100 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 100 101 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "header" jsx-depth 1 part-side jsx rear-nonsticky t) 101 104 (jsx-depth 1 part-side jsx) 104 105 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 105 106 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 106 124 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 124 125 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 125 126 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 126 129 (jsx-depth 1 part-side jsx) 129 130 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 130 132 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 132 133 (tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 133 134 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 134 142 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 142 143 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 143 144 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 144 145 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 145 153 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 153 163 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 163 164 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 164 165 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 165 182 (jsx-depth 1 part-side jsx) 182 183 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 183 184 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 184 186 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 186 187 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 187 188 (jsx-depth 1 part-side jsx) 188 193 (jsx-depth 1 part-side jsx) 193 194 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "header" jsx-depth 1 part-side jsx) 194 195 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 195 201 (font-lock-face web-mode-html-tag-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 201 202 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "header" jsx-depth 1 part-side jsx) 202 203 (jsx-depth 1 part-side jsx)) . 597) (undo-tree-id2274 . -201) (undo-tree-id2275 . -202) (undo-tree-id2276 . -20) (undo-tree-id2277 . -201) (undo-tree-id2278 . -201) (undo-tree-id2279 . -201) (undo-tree-id2280 . -203) (undo-tree-id2281 . -132) (undo-tree-id2282 . -26) (undo-tree-id2283 . -26) (undo-tree-id2284 . -26) (undo-tree-id2285 . -26) (undo-tree-id2286 . -26) (undo-tree-id2287 . -26) (undo-tree-id2288 . -26) (undo-tree-id2289 . -20) (undo-tree-id2290 . -201) (undo-tree-id2291 . -20) (undo-tree-id2292 . -201) (undo-tree-id2293 . -203) 798) nil (26130 43836 965318 534000) 0 nil])
([nil nil ((774 . 775) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 774) (738 . 742) (709 . 713) (697 . 698) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 697) (687 . 688) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 687) (671 . 675) (644 . 648) (594 . 595) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 594) (580 . 582) (#("            " 0 12 (jsx-depth 1 part-side jsx)) . 580) (569 . 573) (491 . 494) (#("                    " 0 20 (jsx-depth 1 part-side jsx)) . 491) (429 . 433) (386 . 390) (318 . 320) (254 . 258) (199 . 203) 597) nil (26130 43836 964885 783000) 0 nil])
([nil nil ((345 . 351) (t 26130 43837 24958 516000)) nil (26130 43854 449244 650000) 0 nil])
([nil nil ((349 . 350) (#("7" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 349) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1)) nil (26130 43854 449243 920000) 0 nil])
([nil nil ((347 . 348) (#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 347) (undo-tree-id2298 . -1)) nil (26130 43854 449238 940000) 0 nil])
([nil nil ((339 . 344) (t 26130 43854 461662 369000)) nil (26130 43882 928706 617000) 0 nil])
([nil nil ((#("h-2/6 w-4/6 bg-black relative z-10" 0 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 11 34 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 344) (undo-tree-id2304 . -33) (undo-tree-id2305 . -33) (undo-tree-id2306 . 34) (undo-tree-id2307 . -33) (undo-tree-id2308 . -10) (undo-tree-id2309 . -33) (undo-tree-id2310 . -10) (undo-tree-id2311 . -33) (undo-tree-id2312 . -34) (undo-tree-id2313 . -34) 377 (t 26130 43882 941723 108000)) nil (26130 43887 395746 596000) 0 nil])
([nil nil ((nil rear-nonsticky nil 464 . 465) (nil part-side jsx 431 . 465) (nil jsx-depth 1 431 . 465) (nil tag-attr t 431 . 465) (nil tag-name "div" 431 . 465) (nil tag-type start 431 . 465) (nil font-lock-face web-mode-html-attr-value-face 431 . 465) (431 . 465) 430 (t 26130 43887 405065 961000)) nil (26130 43888 479031 344000) 0 nil])
([nil nil ((465 . 466) (t 26130 43888 491734 945000)) nil (26130 43890 325002 938000) 0 nil])
([nil nil ((343 . 348) (t 26130 43890 341738 890000)) nil (26130 43905 348367 955000) 0 nil])
([nil nil ((344 . 359) (#("just" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -344) (undo-tree-id2314 . -4) (undo-tree-id2315 . -4) 348) nil (26130 43905 348365 155000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -354) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -355) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -356) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -357) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -358) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) 359 (t 26130 43905 361770 923000)) nil (26130 43907 717088 531000) 0 nil])
([nil nil ((#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -352) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -353) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (t 26130 43907 731775 977000)) nil (26130 43910 17213 23000) 0 nil])
([nil nil ((352 . 358)) nil (26130 43910 17199 683000) 0 nil])
([nil nil ((358 . 365) (t 26130 43910 28447 541000)) nil (26130 43916 484146 213000) 0 nil])
([nil nil ((365 . 368) (t 26130 43916 498461 339000)) nil (26130 43918 397528 936000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -363) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (#("p" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -364) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (#("x" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -365) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -366) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -367) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) 368 (t 26130 43918 415132 94000)) nil (26130 43923 621254 864000) 0 nil])
([nil nil ((363 . 367) (t 26130 43923 635143 227000)) nil (26130 43929 832427 983000) 0 nil])
([nil nil ((#("(" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -366) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) 367) nil (26130 43929 832426 963000) 0 nil])
([nil nil ((366 . 368)) nil (26130 43929 832416 933000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 363) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (t 26130 43929 845156 471000)) nil (26130 43938 553454 649000) 0 nil])
([nil nil ((#("p" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 359) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1)) nil (26130 43938 553453 349000) 0 nil])
([nil nil ((#("y" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 359) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1)) nil (26130 43938 553452 319000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 359) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1)) nil (26130 43938 553451 9000) 0 nil])
([nil nil ((#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 359) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1)) nil (26130 43938 553447 889000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 513) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (t 26130 43938 565175 67000)) nil (26130 43969 164573 559000) 0 nil])
([nil nil ((#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 513) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1)) nil (26130 43969 164572 719000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 513) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1)) nil (26130 43969 164571 769000) 0 nil])
([nil nil ((#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 513) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1)) nil (26130 43969 164570 249000) 0 nil])
([nil nil ((#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 513) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1)) nil (26130 43969 164569 279000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 513) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1)) nil (26130 43969 164568 79000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 513) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1)) nil (26130 43969 164565 239000) 0 nil])
([nil nil ((451 . 454) (t 26130 43969 178573 688000)) nil (26130 43978 503758 251000) 0 nil])
([nil nil ((454 . 456)) nil (26130 43978 503755 61000) 0 nil])
([nil nil ((#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -454) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -455) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) 456 (t 26130 43978 515260 267000)) nil (26130 43982 76860 586000) 0 nil])
([nil nil ((454 . 455)) nil (26130 43982 76857 186000) 0 nil])
([nil nil ((#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -454) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) 455) nil (26130 43982 76856 276000) 0 nil])
([nil nil ((454 . 455)) nil (26130 43982 76846 836000) 0 nil])
([nil nil ((455 . 456) (t 26130 43982 88601 220000)) nil (26130 43985 287232 41000) 0 nil])
([nil nil ((#("			" 0 3 (jsx-depth 1 part-side jsx)) . -583) (undo-tree-id2417 . -3) (undo-tree-id2418 . -3) (undo-tree-id2419 . -3) (undo-tree-id2420 . -3) 586 (582 . 586) (t 26130 43985 308608 87000) 581) nil (26130 45380 588920 832000) 0 nil])
([nil nil ((nil rear-nonsticky nil 719 . 720) (nil part-side jsx 719 . 720) (nil jsx-depth 1 719 . 720) (nil tag-name "div" 719 . 720) (nil tag-type end 719 . 720) (nil tag-end t 719 . 720) (nil font-lock-face web-mode-html-tag-bracket-face 719 . 720) (nil part-side jsx 716 . 719) (nil jsx-depth 1 716 . 719) (nil tag-name "div" 716 . 719) (nil tag-type end 716 . 719) (nil font-lock-face web-mode-html-tag-face 716 . 719) (nil part-side jsx 715 . 716) (nil jsx-depth 1 715 . 716) (nil tag-name "div" 715 . 716) (nil tag-type end 715 . 716) (nil font-lock-face web-mode-html-tag-bracket-face 715 . 716) (nil part-side jsx 714 . 715) (nil jsx-depth 1 714 . 715) (nil tag-name "div" 714 . 715) (nil tag-type end 714 . 715) (nil tag-beg 20 714 . 715) (nil font-lock-face web-mode-html-tag-bracket-face 714 . 715) (nil part-side jsx 697 . 714) (nil jsx-depth 1 697 . 714) (nil part-side jsx 696 . 697) (nil jsx-depth 1 696 . 697) (nil tag-name "h1" 696 . 697) (nil tag-type end 696 . 697) (nil tag-end t 696 . 697) (nil font-lock-face web-mode-html-tag-bracket-face 696 . 697) (nil part-side jsx 694 . 696) (nil jsx-depth 1 694 . 696) (nil tag-name "h1" 694 . 696) (nil tag-type end 694 . 696) (nil font-lock-face web-mode-html-tag-face 694 . 696) (nil part-side jsx 693 . 694) (nil jsx-depth 1 693 . 694) (nil tag-name "h1" 693 . 694) (nil tag-type end 693 . 694) (nil font-lock-face web-mode-html-tag-bracket-face 693 . 694) (nil part-side jsx 692 . 693) (nil jsx-depth 1 692 . 693) (nil tag-name "h1" 692 . 693) (nil tag-type end 692 . 693) (nil tag-beg 20 692 . 693) (nil font-lock-face web-mode-html-tag-bracket-face 692 . 693) (nil part-side jsx 675 . 692) (nil jsx-depth 1 675 . 692) (nil part-side jsx 674 . 675) (nil jsx-depth 1 674 . 675) (nil tag-name "h1" 674 . 675) (nil tag-type start 674 . 675) (nil tag-end t 674 . 675) (nil font-lock-face web-mode-html-tag-bracket-face 674 . 675) (nil part-side jsx 673 . 674) (nil jsx-depth 1 673 . 674) (nil tag-attr t 673 . 674) (nil tag-attr-end 9 673 . 674) (nil tag-name "h1" 673 . 674) (nil tag-type start 673 . 674) (nil font-lock-face web-mode-html-attr-value-face 673 . 674) (nil part-side jsx 653 . 673) (nil jsx-depth 1 653 . 673) (nil tag-attr t 653 . 673) (nil tag-name "h1" 653 . 673) (nil tag-type start 653 . 673) (nil font-lock-face web-mode-html-attr-value-face 653 . 673) (nil part-side jsx 652 . 653) (nil jsx-depth 1 652 . 653) (nil tag-attr t 652 . 653) (nil tag-name "h1" 652 . 653) (nil tag-type start 652 . 653) (nil font-lock-face web-mode-html-attr-equal-face 652 . 653) (nil part-side jsx 644 . 652) (nil jsx-depth 1 644 . 652) (nil tag-attr t 644 . 652) (nil tag-name "h1" 644 . 652) (nil tag-type start 644 . 652) (nil font-lock-face web-mode-html-attr-name-face 644 . 652) (nil part-side jsx 643 . 644) (nil jsx-depth 1 643 . 644) (nil tag-attr-beg 0 643 . 644) (nil tag-attr t 643 . 644) (nil tag-name "h1" 643 . 644) (nil tag-type start 643 . 644) (nil font-lock-face web-mode-html-attr-name-face 643 . 644) (nil part-side jsx 642 . 643) (nil jsx-depth 1 642 . 643) (nil tag-name "h1" 642 . 643) (nil tag-type start 642 . 643) (nil part-side jsx 640 . 642) (nil jsx-depth 1 640 . 642) (nil tag-name "h1" 640 . 642) (nil tag-type start 640 . 642) (nil font-lock-face web-mode-html-tag-face 640 . 642) (nil part-side jsx 639 . 640) (nil jsx-depth 1 639 . 640) (nil tag-name "h1" 639 . 640) (nil tag-type start 639 . 640) (nil tag-beg 17 639 . 640) (nil font-lock-face web-mode-html-tag-bracket-face 639 . 640) (nil part-side jsx 618 . 639) (nil jsx-depth 1 618 . 639) (nil part-side jsx 617 . 618) (nil jsx-depth 1 617 . 618) (nil tag-name "div" 617 . 618) (nil tag-type start 617 . 618) (nil tag-end t 617 . 618) (nil font-lock-face web-mode-html-tag-bracket-face 617 . 618) (nil part-side jsx 616 . 617) (nil jsx-depth 1 616 . 617) (nil tag-attr t 616 . 617) (nil tag-attr-end 9 616 . 617) (nil tag-name "div" 616 . 617) (nil tag-type start 616 . 617) (nil font-lock-face web-mode-html-attr-value-face 616 . 617) (nil part-side jsx 609 . 616) (nil jsx-depth 1 609 . 616) (nil tag-attr t 609 . 616) (nil tag-name "div" 609 . 616) (nil tag-type start 609 . 616) (nil font-lock-face web-mode-html-attr-value-face 609 . 616) (nil part-side jsx 608 . 609) (nil jsx-depth 1 608 . 609) (nil tag-attr t 608 . 609) (nil tag-name "div" 608 . 609) (nil tag-type start 608 . 609) (nil font-lock-face web-mode-html-attr-equal-face 608 . 609) (nil part-side jsx 600 . 608) (nil jsx-depth 1 600 . 608) (nil tag-attr t 600 . 608) (nil tag-name "div" 600 . 608) (nil tag-type start 600 . 608) (nil font-lock-face web-mode-html-attr-name-face 600 . 608) (nil part-side jsx 599 . 600) (nil jsx-depth 1 599 . 600) (nil tag-attr-beg 0 599 . 600) (nil tag-attr t 599 . 600) (nil tag-name "div" 599 . 600) (nil tag-type start 599 . 600) (nil font-lock-face web-mode-html-attr-name-face 599 . 600) (nil part-side jsx 598 . 599) (nil jsx-depth 1 598 . 599) (nil tag-name "div" 598 . 599) (nil tag-type start 598 . 599) (nil part-side jsx 595 . 598) (nil jsx-depth 1 595 . 598) (nil tag-name "div" 595 . 598) (nil tag-type start 595 . 598) (nil font-lock-face web-mode-html-tag-face 595 . 598) (nil part-side jsx 594 . 595) (nil jsx-depth 1 594 . 595) (nil tag-name "div" 594 . 595) (nil tag-type start 594 . 595) (nil tag-beg 17 594 . 595) (nil font-lock-face web-mode-html-tag-bracket-face 594 . 595) (nil part-side jsx 583 . 594) (nil jsx-depth 1 583 . 594) (583 . 720)) nil (26130 45380 588911 912000) 0 nil])
([nil nil ((677 . 680) (#("                " 0 16 (jsx-depth 1 part-side jsx)) . 677) (611 . 618) (#("                    " 0 20 (jsx-depth 1 part-side jsx)) . 611) (583 . 586) (#("           " 0 11 (jsx-depth 1 part-side jsx)) . 583) 719) nil (26130 45571 49815 632000) 0 nil])
([nil nil ((#("			<div className=\"glitch\">
			    <h1 className=\"text-white text-7xl\">Welcome to SO1337</h1>
			</div>
" 0 3 (jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 4 7 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 9 17 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 18 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 18 25 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 25 26 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 26 27 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 27 35 (jsx-depth 1 part-side jsx) 35 36 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 36 38 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 38 39 (tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 39 40 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 40 48 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 48 49 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 49 69 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 69 70 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 70 71 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 71 88 (jsx-depth 1 part-side jsx) 88 89 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 89 90 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 90 92 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 92 93 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 93 97 (jsx-depth 1 part-side jsx) 97 98 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 98 99 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 99 102 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 102 103 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx rear-nonsticky t) 103 104 (jsx-depth 1 part-side jsx)) . 583) (undo-tree-id2450 . -102) (undo-tree-id2451 . -103) (undo-tree-id2452 . 1) (undo-tree-id2453 . -102) (undo-tree-id2454 . -8) (undo-tree-id2455 . -8) (undo-tree-id2456 . -8) (undo-tree-id2457 . -8) (undo-tree-id2458 . -8) (undo-tree-id2459 . -8) (t 26130 45572 67923 99000)) ((583 . 687) (t 26130 45535 607874 344000)) (26130 45574 150371 636000) 0 nil])
([nil nil ((#("			" 0 3 (jsx-depth 1 part-side jsx)) . 583) (undo-tree-id2460 . -3) (583 . 586) (583 . 584)) ((#("
" 0 1 (jsx-depth 1 part-side jsx)) . 583) (undo-tree-id2448 . 1) (#("			" 0 3 (jsx-depth 1 part-side jsx)) . 583) (undo-tree-id2449 . -3) (583 . 586) (t 26130 45530 807867 925000)) (26130 46087 883848 300000) 0 nil])
([nil nil ((nil rear-nonsticky nil 729 . 730) (nil part-side jsx 729 . 730) (nil jsx-depth 1 729 . 730) (nil tag-name "div" 729 . 730) (nil tag-type end 729 . 730) (nil tag-end t 729 . 730) (nil font-lock-face web-mode-html-tag-bracket-face 729 . 730) (nil part-side jsx 726 . 729) (nil jsx-depth 1 726 . 729) (nil tag-name "div" 726 . 729) (nil tag-type end 726 . 729) (nil font-lock-face web-mode-html-tag-face 726 . 729) (nil part-side jsx 725 . 726) (nil jsx-depth 1 725 . 726) (nil tag-name "div" 725 . 726) (nil tag-type end 725 . 726) (nil font-lock-face web-mode-html-tag-bracket-face 725 . 726) (nil part-side jsx 724 . 725) (nil jsx-depth 1 724 . 725) (nil tag-name "div" 724 . 725) (nil tag-type end 724 . 725) (nil tag-beg 20 724 . 725) (nil font-lock-face web-mode-html-tag-bracket-face 724 . 725) (nil part-side jsx 721 . 724) (nil jsx-depth 1 721 . 724) (nil part-side jsx 720 . 721) (nil jsx-depth 1 720 . 721) (nil tag-name "h2" 720 . 721) (nil tag-type end 720 . 721) (nil tag-end t 720 . 721) (nil font-lock-face web-mode-html-tag-bracket-face 720 . 721) (nil part-side jsx 718 . 720) (nil jsx-depth 1 718 . 720) (nil tag-name "h2" 718 . 720) (nil tag-type end 718 . 720) (nil font-lock-face web-mode-html-tag-face 718 . 720) (nil part-side jsx 717 . 718) (nil jsx-depth 1 717 . 718) (nil tag-name "h2" 717 . 718) (nil tag-type end 717 . 718) (nil font-lock-face web-mode-html-tag-bracket-face 717 . 718) (nil part-side jsx 716 . 717) (nil jsx-depth 1 716 . 717) (nil tag-name "h2" 716 . 717) (nil tag-type end 716 . 717) (nil tag-beg 20 716 . 717) (nil font-lock-face web-mode-html-tag-bracket-face 716 . 717) (nil part-side jsx 715 . 716) (nil jsx-depth 1 715 . 716) (nil tag-name "span" 715 . 716) (nil tag-type end 715 . 716) (nil tag-end t 715 . 716) (nil font-lock-face web-mode-html-tag-bracket-face 715 . 716) (nil part-side jsx 711 . 715) (nil jsx-depth 1 711 . 715) (nil tag-name "span" 711 . 715) (nil tag-type end 711 . 715) (nil font-lock-face web-mode-html-tag-face 711 . 715) (nil part-side jsx 710 . 711) (nil jsx-depth 1 710 . 711) (nil tag-name "span" 710 . 711) (nil tag-type end 710 . 711) (nil font-lock-face web-mode-html-tag-bracket-face 710 . 711) (nil part-side jsx 709 . 710) (nil jsx-depth 1 709 . 710) (nil tag-name "span" 709 . 710) (nil tag-type end 709 . 710) (nil tag-beg 20 709 . 710) (nil font-lock-face web-mode-html-tag-bracket-face 709 . 710) (nil part-side jsx 706 . 709) (nil jsx-depth 1 706 . 709) (nil part-side jsx 705 . 706) (nil jsx-depth 1 705 . 706) (nil tag-name "span" 705 . 706) (nil tag-type start 705 . 706) (nil tag-end t 705 . 706) (nil font-lock-face web-mode-html-tag-bracket-face 705 . 706) (nil part-side jsx 701 . 705) (nil jsx-depth 1 701 . 705) (nil tag-name "span" 701 . 705) (nil tag-type start 701 . 705) (nil font-lock-face web-mode-html-tag-face 701 . 705) (nil part-side jsx 700 . 701) (nil jsx-depth 1 700 . 701) (nil tag-name "span" 700 . 701) (nil tag-type start 700 . 701) (nil tag-beg 16 700 . 701) (nil font-lock-face web-mode-html-tag-bracket-face 700 . 701) (nil part-side jsx 699 . 700) (nil jsx-depth 1 699 . 700) (nil tag-name "h2" 699 . 700) (nil tag-type start 699 . 700) (nil tag-end t 699 . 700) (nil font-lock-face web-mode-html-tag-bracket-face 699 . 700) (nil part-side jsx 698 . 699) (nil jsx-depth 1 698 . 699) (nil tag-attr t 698 . 699) (nil tag-attr-end 9 698 . 699) (nil tag-name "h2" 698 . 699) (nil tag-type start 698 . 699) (nil font-lock-face web-mode-html-attr-value-face 698 . 699) (nil part-side jsx 694 . 698) (nil jsx-depth 1 694 . 698) (nil tag-attr t 694 . 698) (nil tag-name "h2" 694 . 698) (nil tag-type start 694 . 698) (nil font-lock-face web-mode-html-attr-value-face 694 . 698) (nil part-side jsx 693 . 694) (nil jsx-depth 1 693 . 694) (nil tag-attr t 693 . 694) (nil tag-name "h2" 693 . 694) (nil tag-type start 693 . 694) (nil font-lock-face web-mode-html-attr-equal-face 693 . 694) (nil part-side jsx 685 . 693) (nil jsx-depth 1 685 . 693) (nil tag-attr t 685 . 693) (nil tag-name "h2" 685 . 693) (nil tag-type start 685 . 693) (nil font-lock-face web-mode-html-attr-custom-face 685 . 693) (nil part-side jsx 684 . 685) (nil jsx-depth 1 684 . 685) (nil tag-attr-beg 1 684 . 685) (nil tag-attr t 684 . 685) (nil tag-name "h2" 684 . 685) (nil tag-type start 684 . 685) (nil font-lock-face web-mode-html-attr-custom-face 684 . 685) (nil part-side jsx 683 . 684) (nil jsx-depth 1 683 . 684) (nil tag-name "h2" 683 . 684) (nil tag-type start 683 . 684) (nil part-side jsx 682 . 683) (nil jsx-depth 1 682 . 683) (nil tag-attr t 682 . 683) (nil tag-attr-end 5 682 . 683) (nil tag-name "h2" 682 . 683) (nil tag-type start 682 . 683) (nil font-lock-face web-mode-html-attr-value-face 682 . 683) (nil part-side jsx 663 . 682) (nil jsx-depth 1 663 . 682) (nil tag-attr t 663 . 682) (nil tag-name "h2" 663 . 682) (nil tag-type start 663 . 682) (nil font-lock-face web-mode-html-attr-value-face 663 . 682) (nil part-side jsx 662 . 663) (nil jsx-depth 1 662 . 663) (nil tag-attr t 662 . 663) (nil tag-name "h2" 662 . 663) (nil tag-type start 662 . 663) (nil font-lock-face web-mode-html-attr-equal-face 662 . 663) (nil part-side jsx 658 . 662) (nil jsx-depth 1 658 . 662) (nil tag-attr t 658 . 662) (nil tag-name "h2" 658 . 662) (nil tag-type start 658 . 662) (nil font-lock-face web-mode-html-attr-name-face 658 . 662) (nil part-side jsx 657 . 658) (nil jsx-depth 1 657 . 658) (nil tag-attr-beg 0 657 . 658) (nil tag-attr t 657 . 658) (nil tag-name "h2" 657 . 658) (nil tag-type start 657 . 658) (nil font-lock-face web-mode-html-attr-name-face 657 . 658) (nil part-side jsx 656 . 657) (nil jsx-depth 1 656 . 657) (nil tag-name "h2" 656 . 657) (nil tag-type start 656 . 657) (nil part-side jsx 654 . 656) (nil jsx-depth 1 654 . 656) (nil tag-name "h2" 654 . 656) (nil tag-type start 654 . 656) (nil font-lock-face web-mode-html-tag-face 654 . 656) (nil part-side jsx 653 . 654) (nil jsx-depth 1 653 . 654) (nil tag-name "h2" 653 . 654) (nil tag-type start 653 . 654) (nil tag-beg 17 653 . 654) (nil font-lock-face web-mode-html-tag-bracket-face 653 . 654) (nil part-side jsx 648 . 653) (nil jsx-depth 1 648 . 653) (nil part-side jsx 647 . 648) (nil jsx-depth 1 647 . 648) (nil tag-name "div" 647 . 648) (nil tag-type end 647 . 648) (nil tag-end t 647 . 648) (nil font-lock-face web-mode-html-tag-bracket-face 647 . 648) (nil part-side jsx 644 . 647) (nil jsx-depth 1 644 . 647) (nil tag-name "div" 644 . 647) (nil tag-type end 644 . 647) (nil font-lock-face web-mode-html-tag-face 644 . 647) (nil part-side jsx 643 . 644) (nil jsx-depth 1 643 . 644) (nil tag-name "div" 643 . 644) (nil tag-type end 643 . 644) (nil font-lock-face web-mode-html-tag-bracket-face 643 . 644) (nil part-side jsx 642 . 643) (nil jsx-depth 1 642 . 643) (nil tag-name "div" 642 . 643) (nil tag-type end 642 . 643) (nil tag-beg 20 642 . 643) (nil font-lock-face web-mode-html-tag-bracket-face 642 . 643) (nil part-side jsx 641 . 642) (nil jsx-depth 1 641 . 642) (nil tag-name "div" 641 . 642) (nil tag-type start 641 . 642) (nil tag-end t 641 . 642) (nil font-lock-face web-mode-html-tag-bracket-face 641 . 642) (nil part-side jsx 640 . 641) (nil jsx-depth 1 640 . 641) (nil tag-attr t 640 . 641) (nil tag-attr-end 5 640 . 641) (nil tag-name "div" 640 . 641) (nil tag-type start 640 . 641) (nil font-lock-face web-mode-html-attr-value-face 640 . 641) (nil part-side jsx 628 . 640) (nil jsx-depth 1 628 . 640) (nil tag-attr t 628 . 640) (nil tag-name "div" 628 . 640) (nil tag-type start 628 . 640) (nil font-lock-face web-mode-html-attr-value-face 628 . 640) (nil part-side jsx 627 . 628) (nil jsx-depth 1 627 . 628) (nil tag-attr t 627 . 628) (nil tag-name "div" 627 . 628) (nil tag-type start 627 . 628) (nil font-lock-face web-mode-html-attr-equal-face 627 . 628) (nil part-side jsx 623 . 627) (nil jsx-depth 1 623 . 627) (nil tag-attr t 623 . 627) (nil tag-name "div" 623 . 627) (nil tag-type start 623 . 627) (nil font-lock-face web-mode-html-attr-name-face 623 . 627) (nil part-side jsx 622 . 623) (nil jsx-depth 1 622 . 623) (nil tag-attr-beg 0 622 . 623) (nil tag-attr t 622 . 623) (nil tag-name "div" 622 . 623) (nil tag-type start 622 . 623) (nil font-lock-face web-mode-html-attr-name-face 622 . 623) (nil part-side jsx 621 . 622) (nil jsx-depth 1 621 . 622) (nil tag-name "div" 621 . 622) (nil tag-type start 621 . 622) (nil part-side jsx 618 . 621) (nil jsx-depth 1 618 . 621) (nil tag-name "div" 618 . 621) (nil tag-type start 618 . 621) (nil font-lock-face web-mode-html-tag-face 618 . 621) (nil part-side jsx 617 . 618) (nil jsx-depth 1 617 . 618) (nil tag-name "div" 617 . 618) (nil tag-type start 617 . 618) (nil tag-beg 17 617 . 618) (nil font-lock-face web-mode-html-tag-bracket-face 617 . 618) (nil part-side jsx 612 . 617) (nil jsx-depth 1 612 . 617) (nil part-side jsx 611 . 612) (nil jsx-depth 1 611 . 612) (nil tag-name "div" 611 . 612) (nil tag-type start 611 . 612) (nil tag-end t 611 . 612) (nil font-lock-face web-mode-html-tag-bracket-face 611 . 612) (nil part-side jsx 610 . 611) (nil jsx-depth 1 610 . 611) (nil tag-attr t 610 . 611) (nil tag-attr-end 5 610 . 611) (nil tag-name "div" 610 . 611) (nil tag-type start 610 . 611) (nil font-lock-face web-mode-html-attr-value-face 610 . 611) (nil part-side jsx 595 . 610) (nil jsx-depth 1 595 . 610) (nil tag-attr t 595 . 610) (nil tag-name "div" 595 . 610) (nil tag-type start 595 . 610) (nil font-lock-face web-mode-html-attr-value-face 595 . 610) (nil part-side jsx 594 . 595) (nil jsx-depth 1 594 . 595) (nil tag-attr t 594 . 595) (nil tag-name "div" 594 . 595) (nil tag-type start 594 . 595) (nil font-lock-face web-mode-html-attr-equal-face 594 . 595) (nil part-side jsx 590 . 594) (nil jsx-depth 1 590 . 594) (nil tag-attr t 590 . 594) (nil tag-name "div" 590 . 594) (nil tag-type start 590 . 594) (nil font-lock-face web-mode-html-attr-name-face 590 . 594) (nil part-side jsx 589 . 590) (nil jsx-depth 1 589 . 590) (nil tag-attr-beg 0 589 . 590) (nil tag-attr t 589 . 590) (nil tag-name "div" 589 . 590) (nil tag-type start 589 . 590) (nil font-lock-face web-mode-html-attr-name-face 589 . 590) (nil part-side jsx 588 . 589) (nil jsx-depth 1 588 . 589) (nil tag-name "div" 588 . 589) (nil tag-type start 588 . 589) (nil part-side jsx 585 . 588) (nil jsx-depth 1 585 . 588) (nil tag-name "div" 585 . 588) (nil tag-type start 585 . 588) (nil font-lock-face web-mode-html-tag-face 585 . 588) (nil part-side jsx 584 . 585) (nil jsx-depth 1 584 . 585) (nil tag-name "div" 584 . 585) (nil tag-type start 584 . 585) (nil tag-beg 17 584 . 585) (nil font-lock-face web-mode-html-tag-bracket-face 584 . 585) (nil part-side jsx 583 . 584) (nil jsx-depth 1 583 . 584) (583 . 730) (t 26130 46088 921947 596000)) nil (26130 46093 658157 880000) 0 nil] [nil nil ((nil rear-nonsticky nil 587 . 588) (nil part-side jsx 583 . 588) (nil jsx-depth 1 583 . 588) (583 . 588) (t 26130 46030 608536 284000)) ((#("
è¿è¨­è¨ " 0 4 (jsx-depth 1 part-side jsx) 4 5 (jsx-depth 1 part-side jsx rear-nonsticky nil)) . 583) (undo-tree-id2493 . -4) (undo-tree-id2494 . -4) (undo-tree-id2495 . -4) (undo-tree-id2496 . -4) (nil rear-nonsticky t 587 . 588) (t 26130 46087 435278 941000)) (26130 46087 426138 214000) 0 nil] [nil nil ((549 . 556) (t 26130 45702 878098 27000)) ((#(" glitch" 0 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 549) (undo-tree-id2490 . -7) (undo-tree-id2491 . -7) (undo-tree-id2492 . -7) (t 26130 45878 744999 871000)) (26130 45874 291065 237000) 0 nil] [nil nil ((549 . 556)) ((#(" glitch" 0 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 549) (undo-tree-id2473 . -7) (undo-tree-id2474 . -7) (undo-tree-id2475 . -6) (undo-tree-id2476 . -6) (undo-tree-id2477 . -6) (undo-tree-id2478 . -6) (undo-tree-id2479 . -6) (undo-tree-id2480 . -6) (t 26130 45696 904756 705000)) (26130 45696 892312 409000) 0 nil] [nil nil ((450 . 457) (t 26130 45585 437940 978000)) ((#(" glitch" 0 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 450) (undo-tree-id2463 . -7) (undo-tree-id2464 . -7) (undo-tree-id2465 . -7) (undo-tree-id2466 . -7) (undo-tree-id2467 . -6) (undo-tree-id2468 . -6) (undo-tree-id2469 . -6) (undo-tree-id2470 . -6) (undo-tree-id2471 . -6) (undo-tree-id2472 . -6) (t 26130 45676 968063 378000)) (26130 45676 954715 954000) 0 nil] [nil nil ((nil rear-nonsticky nil 760 . 761) (nil tag-name "div" 760 . 761) (nil tag-name "div" 757 . 760) (nil tag-name "div" 756 . 757) (nil tag-name "div" 755 . 756) (nil tag-name "span" 751 . 752) (nil tag-name "span" 747 . 751) (nil tag-name "span" 746 . 747) (nil tag-name "span" 745 . 746) (nil tag-name "span" 739 . 740) (nil tag-name "span" 738 . 739) (nil tag-name "span" 734 . 738) (nil tag-name "span" 729 . 734) (nil tag-name "span" 726 . 729) (nil tag-name "span" 725 . 726) (nil tag-name "span" 721 . 725) (nil tag-name "span" 720 . 721) (nil tag-name "span" 719 . 720) (nil tag-name "span" 715 . 719) (nil tag-name "span" 714 . 715) (nil tag-name "span" 708 . 709) (nil tag-name "span" 704 . 708) (nil tag-name "span" 703 . 704) (nil tag-name "span" 702 . 703) (nil tag-name "span" 696 . 697) (nil tag-name "span" 695 . 696) (nil tag-name "span" 691 . 695) (nil tag-name "span" 686 . 691) (nil tag-name "span" 683 . 686) (nil tag-name "span" 682 . 683) (nil tag-name "span" 678 . 682) (nil tag-name "span" 677 . 678) (nil tag-name "span" 676 . 677) (nil tag-name "span" 672 . 676) (nil tag-name "span" 671 . 672) (nil tag-name "span" 665 . 666) (nil tag-name "span" 661 . 665) (nil tag-name "span" 660 . 661) (nil tag-name "span" 659 . 660) (nil tag-name "span" 653 . 654) (nil tag-name "span" 652 . 653) (nil tag-name "span" 648 . 652) (nil tag-name "span" 643 . 648) (nil tag-name "span" 640 . 643) (nil tag-name "span" 639 . 640) (nil tag-name "span" 635 . 639) (nil tag-name "span" 634 . 635) (nil tag-name "span" 633 . 634) (nil tag-name "span" 629 . 633) (nil tag-name "span" 628 . 629) (nil tag-name "div" 622 . 623) (nil tag-name "div" 621 . 622) (nil tag-name "div" 617 . 621) (nil tag-name "div" 611 . 617) (nil tag-name "div" 608 . 611) (nil tag-name "div" 607 . 608) (nil tag-name "div" 603 . 607) (nil tag-name "div" 602 . 603) (nil tag-name "div" 601 . 602) (nil tag-name "div" 600 . 601) (nil tag-name "div" 594 . 600) (nil tag-name "div" 593 . 594) (nil tag-name "div" 589 . 593) (nil tag-name "div" 588 . 589) (nil tag-name "div" 587 . 588) (nil tag-name "div" 584 . 587) (nil tag-name "div" 583 . 584) (583 . 761)) ((#("<div class=\"stack\" style=\"--stacks: 3;\">
    <span style=\"--index: 0;\">STACK</span>
    <span style=\"--index: 1;\">STACK</span>
    <span style=\"--index: 2;\">STACK</span>
  </div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 4 5 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 6 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 11 17 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 18 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t jsx-depth 1 part-side jsx) 18 19 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 19 20 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 20 24 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 24 25 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 25 28 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 28 34 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 34 38 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 38 39 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t jsx-depth 1 part-side jsx) 39 40 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 40 45 (jsx-depth 1 part-side jsx) 45 46 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span" jsx-depth 1 part-side jsx) 46 50 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span" jsx-depth 1 part-side jsx) 50 51 (tag-type start tag-name "span" jsx-depth 1 part-side jsx) 51 52 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 52 56 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 56 57 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 57 60 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 60 65 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 65 69 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 69 70 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 5 tag-attr t jsx-depth 1 part-side jsx) 70 71 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span" jsx-depth 1 part-side jsx) 71 76 (jsx-depth 1 part-side jsx) 76 77 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span" jsx-depth 1 part-side jsx) 77 78 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span" jsx-depth 1 part-side jsx) 78 82 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span" jsx-depth 1 part-side jsx) 82 83 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span" jsx-depth 1 part-side jsx) 83 88 (jsx-depth 1 part-side jsx) 88 89 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span" jsx-depth 1 part-side jsx) 89 93 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span" jsx-depth 1 part-side jsx) 93 94 (tag-type start tag-name "span" jsx-depth 1 part-side jsx) 94 95 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 95 99 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 99 100 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 100 103 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 103 108 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 108 112 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 112 113 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 5 tag-attr t jsx-depth 1 part-side jsx) 113 114 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span" jsx-depth 1 part-side jsx) 114 119 (jsx-depth 1 part-side jsx) 119 120 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span" jsx-depth 1 part-side jsx) 120 121 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span" jsx-depth 1 part-side jsx) 121 125 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span" jsx-depth 1 part-side jsx) 125 126 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span" jsx-depth 1 part-side jsx) 126 131 (jsx-depth 1 part-side jsx) 131 132 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span" jsx-depth 1 part-side jsx) 132 136 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span" jsx-depth 1 part-side jsx) 136 137 (tag-type start tag-name "span" jsx-depth 1 part-side jsx) 137 138 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 138 142 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 142 143 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 143 146 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 146 151 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 151 155 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 155 156 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 5 tag-attr t jsx-depth 1 part-side jsx) 156 157 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span" jsx-depth 1 part-side jsx) 157 162 (jsx-depth 1 part-side jsx) 162 163 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span" jsx-depth 1 part-side jsx) 163 164 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span" jsx-depth 1 part-side jsx) 164 168 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span" jsx-depth 1 part-side jsx) 168 169 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span" jsx-depth 1 part-side jsx) 169 172 (jsx-depth 1 part-side jsx) 172 173 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 173 174 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 174 177 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 177 178 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx rear-nonsticky nil)) . 583) (undo-tree-id2461 . -178) (undo-tree-id2462 . -177) (nil tag-name "div" 583 . 584) (nil tag-name "div" 584 . 587) (nil tag-name "div" 587 . 588) (nil tag-name "div" 588 . 589) (nil tag-name "div" 589 . 593) (nil tag-name "div" 593 . 594) (nil tag-name "div" 594 . 600) (nil tag-name "div" 600 . 601) (nil tag-name "div" 601 . 602) (nil tag-name "div" 602 . 603) (nil tag-name "div" 603 . 607) (nil tag-name "div" 607 . 608) (nil tag-name "div" 608 . 611) (nil tag-name "div" 611 . 617) (nil tag-name "div" 617 . 621) (nil tag-name "div" 621 . 622) (nil tag-name "div" 622 . 623) (nil tag-name "span" 628 . 629) (nil tag-name "span" 629 . 633) (nil tag-name "span" 633 . 634) (nil tag-name "span" 634 . 635) (nil tag-name "span" 635 . 639) (nil tag-name "span" 639 . 640) (nil tag-name "span" 640 . 643) (nil tag-name "span" 643 . 648) (nil tag-name "span" 648 . 652) (nil tag-name "span" 652 . 653) (nil tag-name "span" 653 . 654) (nil tag-name "span" 659 . 660) (nil tag-name "span" 660 . 661) (nil tag-name "span" 661 . 665) (nil tag-name "span" 665 . 666) (nil tag-name "span" 671 . 672) (nil tag-name "span" 672 . 676) (nil tag-name "span" 676 . 677) (nil tag-name "span" 677 . 678) (nil tag-name "span" 678 . 682) (nil tag-name "span" 682 . 683) (nil tag-name "span" 683 . 686) (nil tag-name "span" 686 . 691) (nil tag-name "span" 691 . 695) (nil tag-name "span" 695 . 696) (nil tag-name "span" 696 . 697) (nil tag-name "span" 702 . 703) (nil tag-name "span" 703 . 704) (nil tag-name "span" 704 . 708) (nil tag-name "span" 708 . 709) (nil tag-name "span" 714 . 715) (nil tag-name "span" 715 . 719) (nil tag-name "span" 719 . 720) (nil tag-name "span" 720 . 721) (nil tag-name "span" 721 . 725) (nil tag-name "span" 725 . 726) (nil tag-name "span" 726 . 729) (nil tag-name "span" 729 . 734) (nil tag-name "span" 734 . 738) (nil tag-name "span" 738 . 739) (nil tag-name "span" 739 . 740) (nil tag-name "span" 745 . 746) (nil tag-name "span" 746 . 747) (nil tag-name "span" 747 . 751) (nil tag-name "span" 751 . 752) (nil tag-name "div" 755 . 756) (nil tag-name "div" 756 . 757) (nil tag-name "div" 757 . 760) (nil tag-name "div" 760 . 761) (nil rear-nonsticky t 760 . 761) (t 26130 45576 121261 854000)) (26130 45574 953918 743000) 0 nil] [nil nil ((nil rear-nonsticky nil 686 . 687) (nil part-side jsx 686 . 687) (nil jsx-depth 1 686 . 687) (nil part-side jsx 685 . 686) (nil jsx-depth 1 685 . 686) (nil tag-name "div" 685 . 686) (nil tag-type end 685 . 686) (nil tag-end t 685 . 686) (nil font-lock-face web-mode-html-tag-bracket-face 685 . 686) (nil part-side jsx 682 . 685) (nil jsx-depth 1 682 . 685) (nil tag-name "div" 682 . 685) (nil tag-type end 682 . 685) (nil font-lock-face web-mode-html-tag-face 682 . 685) (nil part-side jsx 681 . 682) (nil jsx-depth 1 681 . 682) (nil tag-name "div" 681 . 682) (nil tag-type end 681 . 682) (nil font-lock-face web-mode-html-tag-bracket-face 681 . 682) (nil part-side jsx 680 . 681) (nil jsx-depth 1 680 . 681) (nil tag-name "div" 680 . 681) (nil tag-type end 680 . 681) (nil tag-beg 20 680 . 681) (nil font-lock-face web-mode-html-tag-bracket-face 680 . 681) (nil part-side jsx 676 . 680) (nil jsx-depth 1 676 . 680) (nil part-side jsx 675 . 676) (nil jsx-depth 1 675 . 676) (nil tag-name "h1" 675 . 676) (nil tag-type end 675 . 676) (nil tag-end t 675 . 676) (nil font-lock-face web-mode-html-tag-bracket-face 675 . 676) (nil part-side jsx 673 . 675) (nil jsx-depth 1 673 . 675) (nil tag-name "h1" 673 . 675) (nil tag-type end 673 . 675) (nil font-lock-face web-mode-html-tag-face 673 . 675) (nil part-side jsx 672 . 673) (nil jsx-depth 1 672 . 673) (nil tag-name "h1" 672 . 673) (nil tag-type end 672 . 673) (nil font-lock-face web-mode-html-tag-bracket-face 672 . 673) (nil part-side jsx 671 . 672) (nil jsx-depth 1 671 . 672) (nil tag-name "h1" 671 . 672) (nil tag-type end 671 . 672) (nil tag-beg 20 671 . 672) (nil font-lock-face web-mode-html-tag-bracket-face 671 . 672) (nil part-side jsx 654 . 671) (nil jsx-depth 1 654 . 671) (nil part-side jsx 653 . 654) (nil jsx-depth 1 653 . 654) (nil tag-name "h1" 653 . 654) (nil tag-type start 653 . 654) (nil tag-end t 653 . 654) (nil font-lock-face web-mode-html-tag-bracket-face 653 . 654) (nil part-side jsx 652 . 653) (nil jsx-depth 1 652 . 653) (nil tag-attr t 652 . 653) (nil tag-attr-end 9 652 . 653) (nil tag-name "h1" 652 . 653) (nil tag-type start 652 . 653) (nil font-lock-face web-mode-html-attr-value-face 652 . 653) (nil part-side jsx 632 . 652) (nil jsx-depth 1 632 . 652) (nil tag-attr t 632 . 652) (nil tag-name "h1" 632 . 652) (nil tag-type start 632 . 652) (nil font-lock-face web-mode-html-attr-value-face 632 . 652) (nil part-side jsx 631 . 632) (nil jsx-depth 1 631 . 632) (nil tag-attr t 631 . 632) (nil tag-name "h1" 631 . 632) (nil tag-type start 631 . 632) (nil font-lock-face web-mode-html-attr-equal-face 631 . 632) (nil part-side jsx 623 . 631) (nil jsx-depth 1 623 . 631) (nil tag-attr t 623 . 631) (nil tag-name "h1" 623 . 631) (nil tag-type start 623 . 631) (nil font-lock-face web-mode-html-attr-name-face 623 . 631) (nil part-side jsx 622 . 623) (nil jsx-depth 1 622 . 623) (nil tag-attr-beg 0 622 . 623) (nil tag-attr t 622 . 623) (nil tag-name "h1" 622 . 623) (nil tag-type start 622 . 623) (nil font-lock-face web-mode-html-attr-name-face 622 . 623) (nil part-side jsx 621 . 622) (nil jsx-depth 1 621 . 622) (nil tag-name "h1" 621 . 622) (nil tag-type start 621 . 622) (nil part-side jsx 619 . 621) (nil jsx-depth 1 619 . 621) (nil tag-name "h1" 619 . 621) (nil tag-type start 619 . 621) (nil font-lock-face web-mode-html-tag-face 619 . 621) (nil part-side jsx 618 . 619) (nil jsx-depth 1 618 . 619) (nil tag-name "h1" 618 . 619) (nil tag-type start 618 . 619) (nil tag-beg 17 618 . 619) (nil font-lock-face web-mode-html-tag-bracket-face 618 . 619) (nil part-side jsx 610 . 618) (nil jsx-depth 1 610 . 618) (nil part-side jsx 609 . 610) (nil jsx-depth 1 609 . 610) (nil tag-name "div" 609 . 610) (nil tag-type start 609 . 610) (nil tag-end t 609 . 610) (nil font-lock-face web-mode-html-tag-bracket-face 609 . 610) (nil part-side jsx 608 . 609) (nil jsx-depth 1 608 . 609) (nil tag-attr t 608 . 609) (nil tag-attr-end 9 608 . 609) (nil tag-name "div" 608 . 609) (nil tag-type start 608 . 609) (nil font-lock-face web-mode-html-attr-value-face 608 . 609) (nil part-side jsx 601 . 608) (nil jsx-depth 1 601 . 608) (nil tag-attr t 601 . 608) (nil tag-name "div" 601 . 608) (nil tag-type start 601 . 608) (nil font-lock-face web-mode-html-attr-value-face 601 . 608) (nil part-side jsx 600 . 601) (nil jsx-depth 1 600 . 601) (nil tag-attr t 600 . 601) (nil tag-name "div" 600 . 601) (nil tag-type start 600 . 601) (nil font-lock-face web-mode-html-attr-equal-face 600 . 601) (nil part-side jsx 592 . 600) (nil jsx-depth 1 592 . 600) (nil tag-attr t 592 . 600) (nil tag-name "div" 592 . 600) (nil tag-type start 592 . 600) (nil font-lock-face web-mode-html-attr-name-face 592 . 600) (nil part-side jsx 591 . 592) (nil jsx-depth 1 591 . 592) (nil tag-attr-beg 0 591 . 592) (nil tag-attr t 591 . 592) (nil tag-name "div" 591 . 592) (nil tag-type start 591 . 592) (nil font-lock-face web-mode-html-attr-name-face 591 . 592) (nil part-side jsx 590 . 591) (nil jsx-depth 1 590 . 591) (nil tag-name "div" 590 . 591) (nil tag-type start 590 . 591) (nil part-side jsx 587 . 590) (nil jsx-depth 1 587 . 590) (nil tag-name "div" 587 . 590) (nil tag-type start 587 . 590) (nil font-lock-face web-mode-html-tag-face 587 . 590) (nil part-side jsx 586 . 587) (nil jsx-depth 1 586 . 587) (nil tag-name "div" 586 . 587) (nil tag-type start 586 . 587) (nil tag-beg 17 586 . 587) (nil font-lock-face web-mode-html-tag-bracket-face 586 . 587) (nil part-side jsx 583 . 586) (nil jsx-depth 1 583 . 586) (583 . 687) (t 26130 45464 984446 568000)) ((#("			<div className=\"glitch\">
			    <h1 className=\"text-white text-7xl\">Welcome to SO1337</h1>
			</div>
" 0 3 (jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 4 7 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 9 17 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 18 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 18 25 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 25 26 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 26 27 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 27 35 (jsx-depth 1 part-side jsx) 35 36 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 36 38 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 38 39 (tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 39 40 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 40 48 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 48 49 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 49 69 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 69 70 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 70 71 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 71 88 (jsx-depth 1 part-side jsx) 88 89 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 89 90 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 90 92 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 92 93 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 93 97 (jsx-depth 1 part-side jsx) 97 98 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 98 99 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 99 102 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 102 103 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 103 104 (jsx-depth 1 part-side jsx rear-nonsticky nil)) . 583) (undo-tree-id2440 . -104) (undo-tree-id2441 . -104) (undo-tree-id2442 . -104) (undo-tree-id2443 . -104) (nil tag-name "div" 586 . 587) (nil tag-name "div" 587 . 590) (nil tag-name "div" 590 . 591) (nil tag-name "div" 591 . 592) (nil tag-name "div" 592 . 600) (nil tag-name "div" 600 . 601) (nil tag-name "div" 601 . 608) (nil tag-name "div" 608 . 609) (nil tag-name "div" 609 . 610) (nil tag-name "h1" 618 . 619) (nil tag-name "h1" 619 . 621) (nil tag-name "h1" 621 . 622) (nil tag-name "h1" 622 . 623) (nil tag-name "h1" 623 . 631) (nil tag-name "h1" 631 . 632) (nil tag-name "h1" 632 . 652) (nil tag-name "h1" 652 . 653) (nil tag-name "h1" 653 . 654) (nil tag-name "h1" 671 . 672) (nil tag-name "h1" 672 . 673) (nil tag-name "h1" 673 . 675) (nil tag-name "h1" 675 . 676) (nil tag-name "div" 680 . 681) (nil tag-name "div" 681 . 682) (nil tag-name "div" 682 . 685) (nil tag-name "div" 685 . 686) (nil rear-nonsticky t 686 . 687) (t 26130 45476 211128 250000)) (26130 45476 197804 609000) 0 nil])
([nil nil ((730 . 733) (#("  " 0 2 (jsx-depth 1 part-side jsx)) . 730) (654 . 661) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 654) (615 . 622) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 615) (583 . 586) (#(" " 0 1 (jsx-depth 1 part-side jsx)) . 583) 729) nil (26130 46093 658144 550000) 0 nil])
nil
([nil nil ((556 . 561) (t 26130 45734 898140 845000)) ((#(" line" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 556) (undo-tree-id2481 . -5) (undo-tree-id2482 . -5) (undo-tree-id2483 . -5) (undo-tree-id2484 . -4) (undo-tree-id2485 . -4) (undo-tree-id2486 . -4) (undo-tree-id2487 . -4) (undo-tree-id2488 . -4) (undo-tree-id2489 . -4) (t 26130 45867 644985 28000)) (26130 45867 631170 271000) 0 nil])
nil
nil
nil
nil
([nil nil ((#("Welcome to SO1337" 0 17 (jsx-depth 1 part-side jsx)) . 560) (undo-tree-id2501 . -16) (undo-tree-id2502 . -16) (undo-tree-id2503 . -16) (undo-tree-id2504 . -16) (undo-tree-id2505 . -16) (undo-tree-id2506 . -17) (undo-tree-id2507 . -17) 576 (t 26130 46093 671953 948000)) nil (26130 46177 784196 187000) 0 nil])
nil
([nil nil ((560 . 562)) nil (26130 46177 784192 826000) 0 nil])
([nil nil ((#("j" 0 1 (jsx-depth 1 part-side jsx)) . -560) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (#("j" 0 1 (jsx-depth 1 part-side jsx)) . -561) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) 562) nil (26130 46177 784190 306000) 0 nil])
([nil nil ((nil rear-nonsticky nil 714 . 715) (nil part-side jsx 698 . 715) (nil jsx-depth 1 698 . 715) (698 . 715) 697 (t 26130 46177 798731 166000)) nil (26130 46190 575472 763000) 0 nil])
([nil nil ((#("7" 0 1 (jsx-depth 1 part-side jsx rear-nonsticky t)) . 714) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1)) nil (26130 46190 575472 43000) 0 nil])
([nil nil ((#("è¨­" 0 1 (jsx-depth 1 part-side jsx)) . 714) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1)) nil (26130 46190 575470 103000) 0 nil])
([nil nil ((#("è¨" 0 1 (jsx-depth 1 part-side jsx)) . 714) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1)) nil (26130 46190 575468 593000) 0 nil])
([nil nil ((714 . 715) (#("8" 0 1 (jsx-depth 1 part-side jsx)) . -714) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) 715 (714 . 715)) nil (26130 46190 575467 43000) 0 nil])
([nil nil ((#("è¿" 0 1 (jsx-depth 1 part-side jsx)) . 697) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1)) nil (26130 46190 575461 323000) 0 nil])
([nil nil ((691 . 703) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h2" tag-attr t jsx-depth 1 part-side jsx)) . -691) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) 692 (686 . 692) (#("è¿è¨­è¨" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h2" tag-attr t jsx-depth 1 part-side jsx)) . 686) (undo-tree-id2522 . -2) (undo-tree-id2523 . -3) (undo-tree-id2524 . -3) (t 26130 46190 588746 366000)) nil (26130 46207 636821 713000) 0 nil])
([nil nil ((646 . 647) (#("2" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h2" jsx-depth 1 part-side jsx)) . 646) (undo-tree-id2526 . -1) (t 26130 46207 652099 976000)) nil (26130 46222 89717 369000) 0 nil])
([nil nil ((738 . 739) (#("2" 0 1 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h2" jsx-depth 1 part-side jsx)) . 738) (undo-tree-id2525 . -1)) nil (26130 46222 89714 79000) 0 nil])
([nil nil ((#("			<h1 className=\"text-white text-7xl\"></h1>
" 0 3 (jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 4 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 6 7 (tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 8 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 17 37 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 37 38 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 38 39 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 39 40 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 40 41 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 41 43 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 43 44 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 44 45 (jsx-depth 1 part-side jsx)) . 521) (undo-tree-id2527 . -44) (undo-tree-id2528 . -44) (undo-tree-id2529 . -39) (undo-tree-id2530 . 6) (undo-tree-id2531 . -39) (undo-tree-id2532 . -39) (undo-tree-id2533 . -44) (undo-tree-id2534 . -45) (undo-tree-id2535 . -39) (undo-tree-id2536 . -44) (undo-tree-id2537 . -44) (undo-tree-id2538 . -43) (undo-tree-id2539 . -43) (undo-tree-id2540 . -43) (undo-tree-id2541 . -43) (undo-tree-id2542 . -43) (undo-tree-id2543 . -43) (undo-tree-id2544 . -45) 564 (t 26130 46222 105450 485000)) nil (26130 46231 338788 709000) 0 nil])
([nil nil ((458 . 459) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 458) (undo-tree-id2545 . -1) (t 26130 46231 352128 140000)) nil (26130 46283 969 107000) 0 nil])
([nil nil ((#("W" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 641) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (t 26130 46284 85524 141000)) nil (26130 46342 791399 825000) 0 nil] [nil nil ((454 . 455) (#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 454) (t 26130 46249 505483 48000)) ((454 . 455) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 454)) (26130 46282 681024 659000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 641) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1)) nil (26130 46342 791398 905000) 0 nil])
([nil nil ((454 . 455) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 454) (t 26130 46259 82161 94000)) ((454 . 455) (#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 454)) (26130 46282 214958 75000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 641) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1)) nil (26130 46342 791397 965000) 0 nil])
([nil nil ((#("p" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 451) (undo-tree-id2559 . -1) (t 26130 46261 665497 498000)) ((451 . 452)) (26130 46282 31423 413000) 0 nil])
([nil nil ((#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 641) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1)) nil (26130 46342 791396 995000) 0 nil])
([nil nil ((#("y" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 451) (undo-tree-id2557 . -1)) ((451 . 452)) (26130 46281 855414 507000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 641) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1)) nil (26130 46342 791394 775000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 451) (undo-tree-id2553 . -1) (undo-tree-id2555 . -1)) ((451 . 452)) (26130 46281 459269 423000) 0 nil])
([nil nil ((#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 641) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1)) nil (26130 46342 791393 885000) 0 nil])
([nil nil ((#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 451) (undo-tree-id2551 . -1)) ((451 . 452)) (26130 46281 279173 258000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 641) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1)) nil (26130 46342 791392 995000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 451) (undo-tree-id2549 . -1)) ((451 . 452)) (26130 46281 12935 848000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 641) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1)) nil (26130 46342 791391 875000) 0 nil])
([nil nil ((362 . 363) (#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 362) (t 26130 46265 222168 391000)) ((362 . 363) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 362) (t 26130 46279 158851 620000)) (26130 46278 135246 878000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 641) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1)) nil (26130 46342 791390 175000) 0 nil])
([nil nil ((#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 359) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (t 26130 46271 635509 346000)) ((359 . 360)) (26130 46277 871243 643000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 641) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1)) nil (26130 46342 791388 765000) 0 nil])
([nil nil ((#("y" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 359) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1)) ((359 . 360)) (26130 46277 639206 613000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 641) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1)) nil (26130 46342 791384 945000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 359) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1)) ((359 . 360)) (26130 46277 419083 737000) 0 nil])
([nil nil ((#("Welcome to " 0 11 (jsx-depth 1 part-side jsx)) . 655) (undo-tree-id2596 . -10) (undo-tree-id2597 . -10) (undo-tree-id2598 . -10) (undo-tree-id2599 . -10) (undo-tree-id2600 . -10) (undo-tree-id2601 . -11) (undo-tree-id2602 . -11) 665 (t 26130 46342 805593 923000)) nil (26130 46358 28157 817000) 0 nil])
([nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 359) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1)) ((359 . 360)) (26130 46277 123160 717000) 0 nil])
([nil nil ((521 . 524) (521 . 522) 551 (t 26130 46354 238940 843000)) nil (26130 46359 806700 491000) 0 nil] [nil nil ((nil rear-nonsticky nil 561 . 562) (nil part-side jsx 561 . 562) (nil jsx-depth 1 561 . 562) (nil tag-name "div" 561 . 562) (nil tag-type start 561 . 562) (nil part-side jsx 560 . 561) (nil jsx-depth 1 560 . 561) (nil tag-attr t 560 . 561) (nil tag-attr-end 0 560 . 561) (nil tag-name "div" 560 . 561) (nil tag-type start 560 . 561) (nil font-lock-face web-mode-html-attr-name-face 560 . 561) (nil part-side jsx 559 . 560) (nil jsx-depth 1 559 . 560) (nil tag-attr-beg 0 559 . 560) (nil tag-attr t 559 . 560) (nil tag-name "div" 559 . 560) (nil tag-type start 559 . 560) (nil font-lock-face web-mode-html-attr-name-face 559 . 560) (nil part-side jsx 551 . 559) (nil jsx-depth 1 551 . 559) (nil tag-name "div" 551 . 559) (nil tag-type start 551 . 559) (551 . 562) (t 26130 46354 238940 843000)) ((#("Welcome to " 0 8 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr-end 0 tag-attr t jsx-depth 1 part-side jsx) 10 11 (tag-type start tag-name "div" jsx-depth 1 part-side jsx rear-nonsticky nil)) . 551) (undo-tree-id2603 . -10) (undo-tree-id2604 . -10) (undo-tree-id2605 . -10) (nil tag-name "div" 551 . 559) (nil tag-name "div" 559 . 560) (nil tag-name "div" 560 . 561) (nil tag-name "div" 561 . 562) (nil rear-nonsticky t 561 . 562)) (26130 46358 21639 975000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 359) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1)) ((359 . 360) (t 26130 46275 658847 460000)) (26130 46275 645885 665000) 0 nil])
([nil nil ((528 . 529) (524 . 533) (#("h1" 0 2 (jsx-depth 1 part-side jsx)) . -524) (undo-tree-id2612 . -1) (undo-tree-id2613 . -2) (undo-tree-id2614 . -2) (undo-tree-id2615 . -2) (undo-tree-id2616 . -2) (undo-tree-id2617 . -2) (undo-tree-id2618 . -2) 526 (524 . 526) (t 26130 46359 822280 811000)) nil (26130 46366 562875 451000) 0 nil])
nil
nil
([nil nil ((nil rear-nonsticky nil 539 . 540) (nil part-side jsx 529 . 540) (nil jsx-depth 1 529 . 540) (529 . 540) 528) nil (26130 46366 562872 641000) 0 nil])
([nil nil ((#("p" 0 1 (jsx-depth 1 part-side jsx)) . 528) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1)) nil (26130 46366 562871 821000) 0 nil])
([nil nil ((#(" " 0 1 (jsx-depth 1 part-side jsx rear-nonsticky t)) . 538) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1)) nil (26130 46366 562867 421000) 0 nil])
([nil nil ((527 . 528) (t 26130 46366 578955 508000)) nil (26130 46379 582482 482000) 0 nil])
([nil nil ((528 . 534) (t 26130 46379 598970 981000)) nil (26130 46428 424902 336000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr-end 0 tag-attr t jsx-depth 1 part-side jsx)) . -533) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) 534) nil (26130 46428 424901 996000) 0 nil])
([nil nil ((533 . 534)) nil (26130 46428 424900 356000) 0 nil])
([nil nil ((528 . 537) (#("classN" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr-end 0 tag-attr t jsx-depth 1 part-side jsx)) . -528) (undo-tree-id2623 . -1) (undo-tree-id2624 . -2) (undo-tree-id2625 . -2) (undo-tree-id2626 . -3) (undo-tree-id2627 . -3) (undo-tree-id2628 . -4) (undo-tree-id2629 . -4) (undo-tree-id2630 . -4) (undo-tree-id2631 . -4) (undo-tree-id2632 . -5) (undo-tree-id2633 . -5) (undo-tree-id2634 . -6) (undo-tree-id2635 . -6) (undo-tree-id2636 . -6) (undo-tree-id2637 . -6) (undo-tree-id2638 . -6) (undo-tree-id2639 . -6) 534) nil (26130 46428 424899 906000) 0 nil])
([nil nil ((539 . 544) (537 . 540)) nil (26130 46428 424892 796000) 0 nil])
([nil nil ((#("Ã¨" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . -543) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) 544) nil (26130 46428 424892 86000) 0 nil])
([nil nil ((543 . 547)) nil (26130 46428 424881 746000) 0 nil])
([nil nil ((547 . 549) (t 26130 46428 449029 32000)) nil (26130 46569 948202 562000) 0 nil])
([nil nil ((549 . 558) (t 26130 46569 962530 536000)) nil (26130 46573 831269 950000) 0 nil])
([nil nil ((570 . 575) (t 26130 46573 845868 484000)) nil (26130 46582 867698 630000) 0 nil])
([nil nil ((#("c" 0 1 (jsx-depth 1 part-side jsx)) . -574) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) 575) nil (26130 46582 867697 510000) 0 nil])
([nil nil ((574 . 576)) nil (26130 46582 867686 0) 0 nil])
([nil nil ((#("&nbsp" 0 5 (jsx-depth 1 part-side jsx)) . 571) (undo-tree-id2650 . -4) (undo-tree-id2651 . -4) (undo-tree-id2652 . -4) (undo-tree-id2653 . -3) (undo-tree-id2654 . -3) (undo-tree-id2655 . -3) (undo-tree-id2656 . -3) (undo-tree-id2657 . -5) (undo-tree-id2658 . -5) (undo-tree-id2659 . -4) (undo-tree-id2660 . -4) (undo-tree-id2661 . -4) (undo-tree-id2662 . -4) (undo-tree-id2663 . -4) (undo-tree-id2664 . -4) (undo-tree-id2665 . -5) (undo-tree-id2666 . -5) 575 (t 26130 46582 882545 889000)) nil (26130 46590 815275 413000) 0 nil])
([nil nil ((nil rear-nonsticky nil 580 . 581) (nil part-side jsx 576 . 581) (576 . 581) 575) nil (26130 46590 815260 833000) 0 nil])
([nil nil ((#("		" 0 2 (jsx-depth 1 part-side jsx)) . -730) (#("		    " 0 6 (jsx-depth 1 part-side jsx)) . -654) (654 . 655) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 654) (650 . 654) (#("		    " 0 6 (jsx-depth 1 part-side jsx)) . -617) (617 . 618) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 617) (613 . 617) (#("		" 0 2 (part-side jsx)) . -583) 743 (t 26130 46590 829222 1000)) nil (26130 46629 904952 278000) 0 nil])
([nil nil ((576 . 577) (t 26130 46629 922601 792000)) nil (26130 46657 325448 157000) 0 nil])
([nil nil ((#("&" 0 1 (part-side jsx)) . 577) (undo-tree-id2681 . 1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (t 26130 46657 342634 378000)) nil (26130 46683 882608 388000) 0 nil])
([nil nil ((#("n" 0 1 (jsx-depth 1 part-side jsx)) . 577) (undo-tree-id2678 . 1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1)) nil (26130 46683 882606 738000) 0 nil])
([nil nil ((#("b" 0 1 (jsx-depth 1 part-side jsx)) . 577) (undo-tree-id2675 . 1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1)) nil (26130 46683 882605 88000) 0 nil])
([nil nil ((#("s" 0 1 (jsx-depth 1 part-side jsx)) . 577) (undo-tree-id2672 . 1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1)) nil (26130 46683 882603 398000) 0 nil])
([nil nil ((#("p" 0 1 (jsx-depth 1 part-side jsx rear-nonsticky t)) . 577) (undo-tree-id2667 . -1) (undo-tree-id2668 . 1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1)) nil (26130 46683 882596 678000) 0 nil])
([nil nil ((706 . 709) (t 26130 46683 895999 266000)) nil (26130 46690 372742 28000) 0 nil])
([nil nil ((#(" " 0 1 (jsx-depth 1 part-side jsx)) . 706) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (t 26130 46690 389340 315000)) nil (26130 46697 304475 313000) 0 nil])
([nil nil ((#(" " 0 1 (jsx-depth 1 part-side jsx)) . 706) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1)) nil (26130 46697 304473 823000) 0 nil])
([nil nil ((#(" " 0 1 (jsx-depth 1 part-side jsx)) . 706) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1)) nil (26130 46697 304469 473000) 0 nil])
([nil nil ((570 . 572) (t 26130 46697 319348 551000)) nil (26130 46702 738810 465000) 0 nil])
([nil nil ((#("\\" 0 1 (jsx-depth 1 part-side jsx)) . -570) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (#(" " 0 1 (jsx-depth 1 part-side jsx)) . -571) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) 572 (t 26130 46702 756021 677000)) nil (26130 46706 807092 488000) 0 nil])
([nil nil ((#(" " 0 1 (jsx-depth 1 part-side jsx)) . 570) (undo-tree-id2692 . 1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1)) nil (26130 46706 807085 938000) 0 nil])
([nil nil ((704 . 705) (t 26130 46706 822693 178000)) nil (26130 46759 490835 385000) 0 nil])
([nil nil ((705 . 717) (t 26130 46759 506089 118000)) nil (26130 46764 548776 724000) 0 nil])
([nil nil ((716 . 720) (t 26130 46764 562761 794000)) nil (26130 46773 486538 184000) 0 nil])
([nil nil ((#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx)) . -719) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) 720 (t 26130 46773 509439 94000)) nil (26130 46776 262959 299000) 0 nil])
([nil nil ((719 . 720)) nil (26130 46776 262940 169000) 0 nil])
([nil nil ((#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx)) . -719) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) 720 (t 26130 46776 286109 59000)) nil (26130 46779 408047 932000) 0 nil])
([nil nil ((719 . 720)) nil (26130 46779 408038 32000) 0 nil])
([nil nil ((#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx)) . -719) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) 720 (t 26130 46779 422779 453000)) nil (26130 47839 446880 850000) 0 nil])
([nil nil ((719 . 720) (t 26130 47840 470205 132000)) ((#("7" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx)) . 719) (t 26130 47838 60204 137000)) (26130 47952 888578 364000) 0 nil])
([nil nil ((#(" " 0 1 (jsx-depth 1 part-side jsx)) . 575) (748 . 750) (649 . 655) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 649) (610 . 616) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 610) (578 . 580) 711 (t 26130 47953 943585 318000)) nil (26130 48216 955911 118000) 0 nil] [nil nil ((#("justify-center" 0 14 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 344) (undo-tree-id2792 . -13) (undo-tree-id2793 . -13) (undo-tree-id2794 . -13) (undo-tree-id2796 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -13) (undo-tree-id2801 . -14) 357 (t 26130 47843 346872 986000)) ((344 . 358)) (26130 47952 477366 729000) 0 nil] [nil nil ((#(" " 0 1 (jsx-depth 1 part-side jsx)) . 575) (748 . 750) (649 . 655) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 649) (610 . 616) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 610) (578 . 580) 748 (t 26130 46782 372782 959000)) ((#("		" 0 2 (jsx-depth 1 part-side jsx)) . 578) (610 . 614) (#("		    " 0 6 (jsx-depth 1 part-side jsx)) . 610) (649 . 653) (#("		    " 0 6 (jsx-depth 1 part-side jsx)) . 649) (#("		" 0 2 (jsx-depth 1 part-side jsx)) . 748) (575 . 576) (t 26130 47836 123536 670000)) (26130 47835 107611 902000) 0 nil])
([nil nil ((nil rear-nonsticky nil 207 . 208) (nil part-side jsx 183 . 208) (nil part-token comment 183 . 208) (nil font-lock-face web-mode-javascript-comment-face 183 . 208) (nil part-side jsx 179 . 183) (nil part-token comment 179 . 183) (nil font-lock-face web-mode-javascript-comment-face 179 . 183) (nil part-side jsx 149 . 179) (nil part-token comment 149 . 179) (nil font-lock-face web-mode-javascript-comment-face 149 . 179) (nil part-side jsx 148 . 149) (nil part-token comment 148 . 149) (nil syntax-table (11) 148 . 149) (nil font-lock-face web-mode-javascript-comment-face 148 . 149) (nil part-side jsx 146 . 148) (nil part-side jsx 145 . 146) (nil part-token string 145 . 146) (nil syntax-table (15) 145 . 146) (nil font-lock-face web-mode-javascript-string-face 145 . 146) (nil part-side jsx 119 . 145) (nil part-token string 119 . 145) (nil font-lock-face web-mode-javascript-string-face 119 . 145) (nil part-side jsx 118 . 119) (nil part-token string 118 . 119) (nil syntax-table (15) 118 . 119) (nil font-lock-face web-mode-javascript-string-face 118 . 119) (nil part-side jsx 117 . 118) (nil part-side jsx 113 . 117) (nil face web-mode-keyword-face 113 . 117) (nil part-side jsx 112 . 113) (nil part-side jsx 99 . 112) (nil face web-mode-type-face 99 . 112) (nil part-side jsx 98 . 99) (nil part-side jsx 92 . 98) (nil face web-mode-keyword-face 92 . 98) (92 . 208) (t 26130 48218 50361 41000)) nil (26130 48992 413334 29000) 0 nil] [nil nil ((nil rear-nonsticky nil 284 . 285) (nil part-side jsx 280 . 285) (nil part-side jsx 273 . 280) (nil face web-mode-keyword-face 273 . 280) (nil part-side jsx 272 . 273) (nil part-side jsx 266 . 272) (nil face web-mode-keyword-face 266 . 272) (nil part-side jsx 256 . 266) (nil part-side jsx 255 . 256) (nil jsx-end 1 255 . 256) (nil jsx-depth 1 255 . 256) (nil tag-name "div" 255 . 256) (nil tag-type end 255 . 256) (nil tag-end t 255 . 256) (nil font-lock-face web-mode-html-tag-bracket-face 255 . 256) (nil part-side jsx 252 . 255) (nil jsx-depth 1 252 . 255) (nil tag-name "div" 252 . 255) (nil tag-type end 252 . 255) (nil font-lock-face web-mode-html-tag-face 252 . 255) (nil part-side jsx 251 . 252) (nil jsx-depth 1 251 . 252) (nil tag-name "div" 251 . 252) (nil tag-type end 251 . 252) (nil font-lock-face web-mode-html-tag-bracket-face 251 . 252) (nil part-side jsx 250 . 251) (nil jsx-depth 1 250 . 251) (nil tag-name "div" 250 . 251) (nil tag-type end 250 . 251) (nil tag-beg 20 250 . 251) (nil font-lock-face web-mode-html-tag-bracket-face 250 . 251) (nil part-side jsx 245 . 250) (nil jsx-depth 1 245 . 250) (nil part-side jsx 244 . 245) (nil jsx-depth 1 244 . 245) (nil tag-name "copycomponent" 244 . 245) (nil tag-type void 244 . 245) (nil tag-end t 244 . 245) (nil font-lock-face web-mode-html-tag-bracket-face 244 . 245) (nil part-side jsx 243 . 244) (nil jsx-depth 1 243 . 244) (nil tag-name "copycomponent" 243 . 244) (nil tag-type void 243 . 244) (nil font-lock-face web-mode-html-tag-bracket-face 243 . 244) (nil part-side jsx 242 . 243) (nil jsx-depth 1 242 . 243) (nil tag-name "copycomponent" 242 . 243) (nil tag-type void 242 . 243) (nil part-side jsx 229 . 242) (nil jsx-depth 1 229 . 242) (nil tag-name "copycomponent" 229 . 242) (nil tag-type void 229 . 242) (nil font-lock-face web-mode-html-tag-face 229 . 242) (nil part-side jsx 228 . 229) (nil jsx-depth 1 228 . 229) (nil tag-name "copycomponent" 228 . 229) (nil tag-type void 228 . 229) (nil tag-beg 24 228 . 229) (nil font-lock-face web-mode-html-tag-bracket-face 228 . 229) (nil part-side jsx 221 . 228) (nil jsx-depth 1 221 . 228) (nil part-side jsx 220 . 221) (nil jsx-depth 1 220 . 221) (nil tag-name "div" 220 . 221) (nil tag-type start 220 . 221) (nil tag-end t 220 . 221) (nil font-lock-face web-mode-html-tag-bracket-face 220 . 221) (nil part-side jsx 219 . 220) (nil jsx-depth 1 219 . 220) (nil tag-attr t 219 . 220) (nil tag-attr-end 9 219 . 220) (nil tag-name "div" 219 . 220) (nil tag-type start 219 . 220) (nil font-lock-face web-mode-html-attr-value-face 219 . 220) (nil part-side jsx 215 . 219) (nil jsx-depth 1 215 . 219) (nil tag-attr t 215 . 219) (nil tag-name "div" 215 . 219) (nil tag-type start 215 . 219) (nil font-lock-face web-mode-html-attr-value-face 215 . 219) (nil part-side jsx 214 . 215) (nil jsx-depth 1 214 . 215) (nil tag-attr t 214 . 215) (nil tag-name "div" 214 . 215) (nil tag-type start 214 . 215) (nil font-lock-face web-mode-html-attr-equal-face 214 . 215) (nil part-side jsx 206 . 214) (nil jsx-depth 1 206 . 214) (nil tag-attr t 206 . 214) (nil tag-name "div" 206 . 214) (nil tag-type start 206 . 214) (nil font-lock-face web-mode-html-attr-name-face 206 . 214) (nil part-side jsx 205 . 206) (nil jsx-depth 1 205 . 206) (nil tag-attr-beg 0 205 . 206) (nil tag-attr t 205 . 206) (nil tag-name "div" 205 . 206) (nil tag-type start 205 . 206) (nil font-lock-face web-mode-html-attr-name-face 205 . 206) (nil part-side jsx 204 . 205) (nil jsx-depth 1 204 . 205) (nil tag-name "div" 204 . 205) (nil tag-type start 204 . 205) (nil part-side jsx 201 . 204) (nil jsx-depth 1 201 . 204) (nil tag-name "div" 201 . 204) (nil tag-type start 201 . 204) (nil font-lock-face web-mode-html-tag-face 201 . 204) (nil part-side jsx 200 . 201) (nil jsx-beg 1 200 . 201) (nil jsx-depth 1 200 . 201) (nil tag-name "div" 200 . 201) (nil tag-type start 200 . 201) (nil tag-beg 17 200 . 201) (nil font-lock-face web-mode-html-tag-bracket-face 200 . 201) (nil part-side jsx 193 . 200) (nil part-side jsx 187 . 193) (nil face web-mode-keyword-face 187 . 193) (nil part-side jsx 174 . 187) (nil part-side jsx 171 . 174) (nil face web-mode-function-name-face 171 . 174) (nil part-side jsx 170 . 171) (nil part-side jsx 165 . 170) (nil face web-mode-keyword-face 165 . 170) (nil part-side jsx 162 . 165) (nil part-side jsx 161 . 162) (nil part-token string 161 . 162) (nil syntax-table (15) 161 . 162) (nil font-lock-face web-mode-javascript-string-face 161 . 162) (nil part-side jsx 146 . 161) (nil part-token string 146 . 161) (nil font-lock-face web-mode-javascript-string-face 146 . 161) (nil part-side jsx 145 . 146) (nil part-token string 145 . 146) (nil syntax-table (15) 145 . 146) (nil font-lock-face web-mode-javascript-string-face 145 . 146) (nil part-side jsx 144 . 145) (nil part-side jsx 140 . 144) (nil face web-mode-keyword-face 140 . 144) (nil part-side jsx 139 . 140) (nil part-side jsx 126 . 139) (nil face web-mode-type-face 126 . 139) (nil part-side jsx 125 . 126) (nil part-side jsx 119 . 125) (nil face web-mode-keyword-face 119 . 125) (nil part-side jsx 117 . 119) (nil part-side jsx 116 . 117) (nil part-token string 116 . 117) (nil syntax-table (15) 116 . 117) (nil font-lock-face web-mode-javascript-string-face 116 . 117) (nil part-side jsx 111 . 116) (nil part-token string 111 . 116) (nil font-lock-face web-mode-javascript-string-face 111 . 116) (nil part-side jsx 110 . 111) (nil part-token string 110 . 111) (nil syntax-table (15) 110 . 111) (nil font-lock-face web-mode-javascript-string-face 110 . 111) (nil part-side jsx 109 . 110) (nil part-side jsx 105 . 109) (nil face web-mode-keyword-face 105 . 109) (nil part-side jsx 104 . 105) (nil part-side jsx 99 . 104) (nil face web-mode-type-face 99 . 104) (nil part-side jsx 98 . 99) (nil part-side jsx 92 . 98) (nil face web-mode-keyword-face 92 . 98) (92 . 285) (t 26130 47959 976921 142000)) ((#("import React from 'react';
import CopyComponent from './CopyComponent';

const App = () => {
  return (
    <div className=\"App\">
      <CopyComponent />
    </div>
  );
};

export default App;" 0 6 (face web-mode-keyword-face part-side jsx) 6 7 (part-side jsx) 7 12 (face web-mode-type-face part-side jsx) 12 13 (part-side jsx) 13 17 (face web-mode-keyword-face part-side jsx) 17 18 (part-side jsx) 18 19 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 19 24 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 24 25 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 25 27 (part-side jsx) 27 33 (face web-mode-keyword-face part-side jsx) 33 34 (part-side jsx) 34 47 (face web-mode-type-face part-side jsx) 47 48 (part-side jsx) 48 52 (face web-mode-keyword-face part-side jsx) 52 53 (part-side jsx) 53 54 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 54 69 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 69 70 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 70 72 (part-side jsx) 72 73 (part-side jsx) 73 78 (face web-mode-keyword-face part-side jsx) 78 79 (part-side jsx) 79 82 (face web-mode-function-name-face part-side jsx) 82 93 (part-side jsx) 93 95 (part-side jsx) 95 101 (face web-mode-keyword-face part-side jsx) 101 104 (part-side jsx) 104 108 (part-side jsx) 108 109 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 109 112 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 112 113 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 113 114 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 114 122 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 122 123 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 123 127 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 127 128 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 128 129 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 129 136 (jsx-depth 1 part-side jsx) 136 137 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 137 150 (font-lock-face web-mode-html-tag-face tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 150 151 (tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 151 152 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 152 153 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 153 158 (jsx-depth 1 part-side jsx) 158 159 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 159 160 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 160 163 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 163 164 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx) 164 170 (part-side jsx) 170 173 (part-side jsx) 173 174 (part-side jsx) 174 180 (face web-mode-keyword-face part-side jsx) 180 181 (part-side jsx) 181 188 (face web-mode-keyword-face part-side jsx) 188 192 (part-side jsx) 192 193 (part-side jsx rear-nonsticky nil)) . 92) (undo-tree-id3012 . -26) (undo-tree-id3013 . -26) (undo-tree-id3014 . -26) (undo-tree-id3015 . -26) (undo-tree-id3016 . -25) (undo-tree-id3017 . -25) (undo-tree-id3018 . -25) (undo-tree-id3019 . -25) (undo-tree-id3020 . -52) (undo-tree-id3021 . -52) (undo-tree-id3022 . -192) (undo-tree-id3023 . -25) (undo-tree-id3024 . -192) (nil syntax-table (15) 110 . 111) (nil syntax-table (15) 116 . 117) (nil syntax-table (15) 145 . 146) (nil syntax-table (15) 161 . 162) (nil tag-name "div" 200 . 201) (nil tag-name "div" 201 . 204) (nil tag-name "div" 204 . 205) (nil tag-name "div" 205 . 206) (nil tag-name "div" 206 . 214) (nil tag-name "div" 214 . 215) (nil tag-name "div" 215 . 219) (nil tag-name "div" 219 . 220) (nil tag-name "div" 220 . 221) (nil tag-name "copycomponent" 228 . 229) (nil tag-name "copycomponent" 229 . 242) (nil tag-name "copycomponent" 242 . 243) (nil tag-name "copycomponent" 243 . 244) (nil tag-name "copycomponent" 244 . 245) (nil tag-name "div" 250 . 251) (nil tag-name "div" 251 . 252) (nil tag-name "div" 252 . 255) (nil tag-name "div" 255 . 256) (nil rear-nonsticky t 284 . 285)) (26130 48216 561256 234000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 343) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2808 . -1) (undo-tree-id2810 . -1) (undo-tree-id2812 . -1) (undo-tree-id2814 . -1) (t 26130 47857 236878 722000)) ((343 . 344)) (26130 47951 984774 474000) 0 nil])
([nil nil ((#("		    " 0 6 (jsx-depth 1 part-side jsx)) . -783) (undo-tree-id2718 . -6) (undo-tree-id2720 . -6) 789 (782 . 789) (t 26130 47242 973291 763000) 781) ((#("
		    " 0 1 (jsx-depth 1 part-side jsx) 1 7 (jsx-depth 1 part-side jsx)) . 782) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -7) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (783 . 789) (t 26130 47833 360202 196000)) (26130 47832 257529 947000) 0 nil])
([nil nil ((208 . 209) (t 26130 48992 431156 509000) 207) nil (26130 48993 840162 308000) 0 nil])
([nil nil ((285 . 286) (t 26130 48197 333685 812000) 284) ((#("
" 0 1 (part-side jsx)) . 285)) (26130 48216 168249 393000) 0 nil])
([nil nil ((#(" " 0 1 (jsx-depth 1 part-side jsx)) . 560) (733 . 735) (634 . 640) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 634) (595 . 601) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 595) (563 . 565) 434) ((#("		" 0 2 (jsx-depth 1 part-side jsx)) . 563) (595 . 599) (#("		    " 0 6 (jsx-depth 1 part-side jsx)) . 595) (634 . 638) (#("		    " 0 6 (jsx-depth 1 part-side jsx)) . 634) (#("		" 0 2 (jsx-depth 1 part-side jsx)) . 733) (560 . 561) (t 26130 47938 790245 728000)) (26130 47937 770368 625000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1165 . 1166) (nil part-side jsx 1165 . 1166) (nil jsx-depth 1 1165 . 1166) (nil tag-name "mat-icon" 1165 . 1166) (nil tag-type end 1165 . 1166) (nil tag-end t 1165 . 1166) (nil font-lock-face web-mode-html-tag-bracket-face 1165 . 1166) (nil part-side jsx 1157 . 1165) (nil jsx-depth 1 1157 . 1165) (nil tag-name "mat-icon" 1157 . 1165) (nil tag-type end 1157 . 1165) (nil font-lock-face web-mode-html-tag-custom-face 1157 . 1165) (nil part-side jsx 1156 . 1157) (nil jsx-depth 1 1156 . 1157) (nil tag-name "mat-icon" 1156 . 1157) (nil tag-type end 1156 . 1157) (nil font-lock-face web-mode-html-tag-bracket-face 1156 . 1157) (nil part-side jsx 1155 . 1156) (nil jsx-depth 1 1155 . 1156) (nil tag-name "mat-icon" 1155 . 1156) (nil tag-type end 1155 . 1156) (nil tag-beg 22 1155 . 1156) (nil font-lock-face web-mode-html-tag-bracket-face 1155 . 1156) (nil part-side jsx 1154 . 1155) (nil jsx-depth 1 1154 . 1155) (nil tag-name "mat-icon" 1154 . 1155) (nil tag-type start 1154 . 1155) (nil tag-end t 1154 . 1155) (nil font-lock-face web-mode-html-tag-bracket-face 1154 . 1155) (nil part-side jsx 1153 . 1154) (nil jsx-depth 1 1153 . 1154) (nil tag-attr t 1153 . 1154) (nil tag-attr-end 18 1153 . 1154) (nil tag-name "mat-icon" 1153 . 1154) (nil tag-type start 1153 . 1154) (nil font-lock-face web-mode-html-attr-value-face 1153 . 1154) (nil part-side jsx 1140 . 1153) (nil jsx-depth 1 1140 . 1153) (nil tag-attr t 1140 . 1153) (nil tag-name "mat-icon" 1140 . 1153) (nil tag-type start 1140 . 1153) (nil font-lock-face web-mode-html-attr-value-face 1140 . 1153) (nil part-side jsx 1139 . 1140) (nil jsx-depth 1 1139 . 1140) (nil tag-attr t 1139 . 1140) (nil tag-name "mat-icon" 1139 . 1140) (nil tag-type start 1139 . 1140) (nil font-lock-face web-mode-html-attr-equal-face 1139 . 1140) (nil part-side jsx 1122 . 1139) (nil jsx-depth 1 1122 . 1139) (nil tag-attr t 1122 . 1139) (nil tag-name "mat-icon" 1122 . 1139) (nil tag-type start 1122 . 1139) (nil font-lock-face web-mode-html-attr-custom-face 1122 . 1139) (nil part-side jsx 1121 . 1122) (nil jsx-depth 1 1121 . 1122) (nil tag-attr-beg 1 1121 . 1122) (nil tag-attr t 1121 . 1122) (nil tag-name "mat-icon" 1121 . 1122) (nil tag-type start 1121 . 1122) (nil font-lock-face web-mode-html-attr-custom-face 1121 . 1122) (nil part-side jsx 1120 . 1121) (nil jsx-depth 1 1120 . 1121) (nil tag-name "mat-icon" 1120 . 1121) (nil tag-type start 1120 . 1121) (nil part-side jsx 1119 . 1120) (nil jsx-depth 1 1119 . 1120) (nil tag-attr t 1119 . 1120) (nil tag-attr-end 18 1119 . 1120) (nil tag-name "mat-icon" 1119 . 1120) (nil tag-type start 1119 . 1120) (nil font-lock-face web-mode-html-attr-value-face 1119 . 1120) (nil part-side jsx 1114 . 1119) (nil jsx-depth 1 1114 . 1119) (nil tag-attr t 1114 . 1119) (nil tag-name "mat-icon" 1114 . 1119) (nil tag-type start 1114 . 1119) (nil font-lock-face web-mode-html-attr-value-face 1114 . 1119) (nil part-side jsx 1113 . 1114) (nil jsx-depth 1 1113 . 1114) (nil tag-attr t 1113 . 1114) (nil tag-name "mat-icon" 1113 . 1114) (nil tag-type start 1113 . 1114) (nil font-lock-face web-mode-html-attr-equal-face 1113 . 1114) (nil part-side jsx 1096 . 1113) (nil jsx-depth 1 1096 . 1113) (nil tag-attr t 1096 . 1113) (nil tag-name "mat-icon" 1096 . 1113) (nil tag-type start 1096 . 1113) (nil font-lock-face web-mode-html-attr-custom-face 1096 . 1113) (nil part-side jsx 1095 . 1096) (nil jsx-depth 1 1095 . 1096) (nil tag-attr-beg 1 1095 . 1096) (nil tag-attr t 1095 . 1096) (nil tag-name "mat-icon" 1095 . 1096) (nil tag-type start 1095 . 1096) (nil font-lock-face web-mode-html-attr-custom-face 1095 . 1096) (nil part-side jsx 1094 . 1095) (nil jsx-depth 1 1094 . 1095) (nil tag-name "mat-icon" 1094 . 1095) (nil tag-type start 1094 . 1095) (nil part-side jsx 1093 . 1094) (nil jsx-depth 1 1093 . 1094) (nil tag-attr t 1093 . 1094) (nil tag-attr-end 11 1093 . 1094) (nil tag-name "mat-icon" 1093 . 1094) (nil tag-type start 1093 . 1094) (nil font-lock-face web-mode-html-attr-value-face 1093 . 1094) (nil part-side jsx 1089 . 1093) (nil jsx-depth 1 1089 . 1093) (nil tag-attr t 1089 . 1093) (nil tag-name "mat-icon" 1089 . 1093) (nil tag-type start 1089 . 1093) (nil font-lock-face web-mode-html-attr-value-face 1089 . 1093) (nil part-side jsx 1088 . 1089) (nil jsx-depth 1 1088 . 1089) (nil tag-attr t 1088 . 1089) (nil tag-name "mat-icon" 1088 . 1089) (nil tag-type start 1088 . 1089) (nil font-lock-face web-mode-html-attr-value-face 1088 . 1089) (nil part-side jsx 1087 . 1088) (nil jsx-depth 1 1087 . 1088) (nil tag-attr t 1087 . 1088) (nil tag-name "mat-icon" 1087 . 1088) (nil tag-type start 1087 . 1088) (nil font-lock-face web-mode-html-attr-equal-face 1087 . 1088) (nil part-side jsx 1077 . 1087) (nil jsx-depth 1 1077 . 1087) (nil tag-attr t 1077 . 1087) (nil tag-name "mat-icon" 1077 . 1087) (nil tag-type start 1077 . 1087) (nil font-lock-face web-mode-html-attr-name-face 1077 . 1087) (nil part-side jsx 1076 . 1077) (nil jsx-depth 1 1076 . 1077) (nil tag-attr-beg 0 1076 . 1077) (nil tag-attr t 1076 . 1077) (nil tag-name "mat-icon" 1076 . 1077) (nil tag-type start 1076 . 1077) (nil font-lock-face web-mode-html-attr-name-face 1076 . 1077) (nil part-side jsx 1075 . 1076) (nil jsx-depth 1 1075 . 1076) (nil tag-name "mat-icon" 1075 . 1076) (nil tag-type start 1075 . 1076) (nil part-side jsx 1074 . 1075) (nil jsx-depth 1 1074 . 1075) (nil tag-attr t 1074 . 1075) (nil tag-attr-end 5 1074 . 1075) (nil tag-name "mat-icon" 1074 . 1075) (nil tag-type start 1074 . 1075) (nil font-lock-face web-mode-html-attr-value-face 1074 . 1075) (nil part-side jsx 994 . 1074) (nil jsx-depth 1 994 . 1074) (nil tag-attr t 994 . 1074) (nil tag-name "mat-icon" 994 . 1074) (nil tag-type start 994 . 1074) (nil font-lock-face web-mode-html-attr-value-face 994 . 1074) (nil part-side jsx 993 . 994) (nil jsx-depth 1 993 . 994) (nil tag-attr t 993 . 994) (nil tag-name "mat-icon" 993 . 994) (nil tag-type start 993 . 994) (nil font-lock-face web-mode-html-attr-equal-face 993 . 994) (nil part-side jsx 989 . 993) (nil jsx-depth 1 989 . 993) (nil tag-attr t 989 . 993) (nil tag-name "mat-icon" 989 . 993) (nil tag-type start 989 . 993) (nil font-lock-face web-mode-html-attr-name-face 989 . 993) (nil part-side jsx 988 . 989) (nil jsx-depth 1 988 . 989) (nil tag-attr-beg 0 988 . 989) (nil tag-attr t 988 . 989) (nil tag-name "mat-icon" 988 . 989) (nil tag-type start 988 . 989) (nil font-lock-face web-mode-html-attr-name-face 988 . 989) (nil part-side jsx 987 . 988) (nil jsx-depth 1 987 . 988) (nil tag-name "mat-icon" 987 . 988) (nil tag-type start 987 . 988) (nil part-side jsx 986 . 987) (nil jsx-depth 1 986 . 987) (nil tag-attr t 986 . 987) (nil tag-attr-end 8 986 . 987) (nil tag-name "mat-icon" 986 . 987) (nil tag-type start 986 . 987) (nil font-lock-face web-mode-html-attr-value-face 986 . 987) (nil part-side jsx 973 . 986) (nil jsx-depth 1 973 . 986) (nil tag-attr t 973 . 986) (nil tag-name "mat-icon" 973 . 986) (nil tag-type start 973 . 986) (nil font-lock-face web-mode-html-attr-value-face 973 . 986) (nil part-side jsx 972 . 973) (nil jsx-depth 1 972 . 973) (nil tag-attr t 972 . 973) (nil tag-name "mat-icon" 972 . 973) (nil tag-type start 972 . 973) (nil font-lock-face web-mode-html-attr-equal-face 972 . 973) (nil part-side jsx 965 . 972) (nil jsx-depth 1 965 . 972) (nil tag-attr t 965 . 972) (nil tag-name "mat-icon" 965 . 972) (nil tag-type start 965 . 972) (nil font-lock-face web-mode-html-attr-name-face 965 . 972) (nil part-side jsx 964 . 965) (nil jsx-depth 1 964 . 965) (nil tag-attr-beg 0 964 . 965) (nil tag-attr t 964 . 965) (nil tag-name "mat-icon" 964 . 965) (nil tag-type start 964 . 965) (nil font-lock-face web-mode-html-attr-name-face 964 . 965) (nil part-side jsx 963 . 964) (nil jsx-depth 1 963 . 964) (nil tag-name "mat-icon" 963 . 964) (nil tag-type start 963 . 964) (nil part-side jsx 962 . 963) (nil jsx-depth 1 962 . 963) (nil tag-attr t 962 . 963) (nil tag-attr-end 4 962 . 963) (nil tag-name "mat-icon" 962 . 963) (nil tag-type start 962 . 963) (nil font-lock-face web-mode-html-attr-value-face 962 . 963) (nil part-side jsx 958 . 962) (nil jsx-depth 1 958 . 962) (nil tag-attr t 958 . 962) (nil tag-name "mat-icon" 958 . 962) (nil tag-type start 958 . 962) (nil font-lock-face web-mode-html-attr-value-face 958 . 962) (nil part-side jsx 957 . 958) (nil jsx-depth 1 957 . 958) (nil tag-attr t 957 . 958) (nil tag-name "mat-icon" 957 . 958) (nil tag-type start 957 . 958) (nil font-lock-face web-mode-html-attr-equal-face 957 . 958) (nil part-side jsx 954 . 957) (nil jsx-depth 1 954 . 957) (nil tag-attr t 954 . 957) (nil tag-name "mat-icon" 954 . 957) (nil tag-type start 954 . 957) (nil font-lock-face web-mode-html-attr-name-face 954 . 957) (nil part-side jsx 953 . 954) (nil jsx-depth 1 953 . 954) (nil tag-attr-beg 0 953 . 954) (nil tag-attr t 953 . 954) (nil tag-name "mat-icon" 953 . 954) (nil tag-type start 953 . 954) (nil font-lock-face web-mode-html-attr-name-face 953 . 954) (nil part-side jsx 952 . 953) (nil jsx-depth 1 952 . 953) (nil tag-name "mat-icon" 952 . 953) (nil tag-type start 952 . 953) (nil part-side jsx 951 . 952) (nil jsx-depth 1 951 . 952) (nil tag-attr t 951 . 952) (nil tag-attr-end 25 951 . 952) (nil tag-name "mat-icon" 951 . 952) (nil tag-type start 951 . 952) (nil font-lock-face web-mode-html-attr-value-face 951 . 952) (nil part-side jsx 950 . 951) (nil jsx-depth 1 950 . 951) (nil tag-attr t 950 . 951) (nil tag-name "mat-icon" 950 . 951) (nil tag-type start 950 . 951) (nil font-lock-face web-mode-html-attr-value-face 950 . 951) (nil part-side jsx 949 . 950) (nil jsx-depth 1 949 . 950) (nil tag-attr t 949 . 950) (nil tag-name "mat-icon" 949 . 950) (nil tag-type start 949 . 950) (nil font-lock-face web-mode-html-attr-equal-face 949 . 950) (nil part-side jsx 925 . 949) (nil jsx-depth 1 925 . 949) (nil tag-attr t 925 . 949) (nil tag-name "mat-icon" 925 . 949) (nil tag-type start 925 . 949) (nil font-lock-face web-mode-html-attr-name-face 925 . 949) (nil part-side jsx 924 . 925) (nil jsx-depth 1 924 . 925) (nil tag-attr-beg 0 924 . 925) (nil tag-attr t 924 . 925) (nil tag-name "mat-icon" 924 . 925) (nil tag-type start 924 . 925) (nil font-lock-face web-mode-html-attr-name-face 924 . 925) (nil part-side jsx 923 . 924) (nil jsx-depth 1 923 . 924) (nil tag-name "mat-icon" 923 . 924) (nil tag-type start 923 . 924) (nil part-side jsx 915 . 923) (nil jsx-depth 1 915 . 923) (nil tag-name "mat-icon" 915 . 923) (nil tag-type start 915 . 923) (nil font-lock-face web-mode-html-tag-custom-face 915 . 923) (nil part-side jsx 914 . 915) (nil jsx-depth 1 914 . 915) (nil tag-name "mat-icon" 914 . 915) (nil tag-type start 914 . 915) (nil tag-beg 19 914 . 915) (nil font-lock-face web-mode-html-tag-bracket-face 914 . 915) (nil part-side jsx 913 . 914) (nil jsx-depth 1 913 . 914) (nil tag-name "span" 913 . 914) (nil tag-type end 913 . 914) (nil tag-end t 913 . 914) (nil font-lock-face web-mode-html-tag-bracket-face 913 . 914) (nil part-side jsx 909 . 913) (nil jsx-depth 1 909 . 913) (nil tag-name "span" 909 . 913) (nil tag-type end 909 . 913) (nil font-lock-face web-mode-html-tag-face 909 . 913) (nil part-side jsx 908 . 909) (nil jsx-depth 1 908 . 909) (nil tag-name "span" 908 . 909) (nil tag-type end 908 . 909) (nil font-lock-face web-mode-html-tag-bracket-face 908 . 909) (nil part-side jsx 907 . 908) (nil jsx-depth 1 907 . 908) (nil tag-name "span" 907 . 908) (nil tag-type end 907 . 908) (nil tag-beg 20 907 . 908) (nil font-lock-face web-mode-html-tag-bracket-face 907 . 908) (nil part-side jsx 863 . 907) (nil jsx-depth 1 863 . 907) (nil part-side jsx 862 . 863) (nil jsx-depth 1 862 . 863) (nil tag-name "span" 862 . 863) (nil tag-type start 862 . 863) (nil tag-end t 862 . 863) (nil font-lock-face web-mode-html-tag-bracket-face 862 . 863) (nil part-side jsx 861 . 862) (nil jsx-depth 1 861 . 862) (nil tag-attr t 861 . 862) (nil tag-attr-end 5 861 . 862) (nil tag-name "span" 861 . 862) (nil tag-type start 861 . 862) (nil font-lock-face web-mode-html-attr-value-face 861 . 862) (nil part-side jsx 851 . 861) (nil jsx-depth 1 851 . 861) (nil tag-attr t 851 . 861) (nil tag-name "span" 851 . 861) (nil tag-type start 851 . 861) (nil font-lock-face web-mode-html-attr-value-face 851 . 861) (nil part-side jsx 849 . 851) (nil jsx-depth 1 849 . 851) (nil tag-attr t 849 . 851) (nil tag-name "span" 849 . 851) (nil tag-type start 849 . 851) (nil font-lock-face web-mode-html-attr-value-face 849 . 851) (nil part-side jsx 830 . 849) (nil jsx-depth 1 830 . 849) (nil tag-attr t 830 . 849) (nil tag-name "span" 830 . 849) (nil tag-type start 830 . 849) (nil font-lock-face web-mode-html-attr-value-face 830 . 849) (nil part-side jsx 825 . 830) (nil jsx-depth 1 825 . 830) (nil tag-attr t 825 . 830) (nil tag-name "span" 825 . 830) (nil tag-type start 825 . 830) (nil font-lock-face web-mode-html-attr-value-face 825 . 830) (nil part-side jsx 824 . 825) (nil jsx-depth 1 824 . 825) (nil tag-attr t 824 . 825) (nil tag-name "span" 824 . 825) (nil tag-type start 824 . 825) (nil font-lock-face web-mode-html-attr-value-face 824 . 825) (nil part-side jsx 823 . 824) (nil jsx-depth 1 823 . 824) (nil tag-attr t 823 . 824) (nil tag-name "span" 823 . 824) (nil tag-type start 823 . 824) (nil font-lock-face web-mode-html-attr-equal-face 823 . 824) (nil part-side jsx 819 . 823) (nil jsx-depth 1 819 . 823) (nil tag-attr t 819 . 823) (nil tag-name "span" 819 . 823) (nil tag-type start 819 . 823) (nil font-lock-face web-mode-html-attr-name-face 819 . 823) (nil part-side jsx 818 . 819) (nil jsx-depth 1 818 . 819) (nil tag-attr-beg 0 818 . 819) (nil tag-attr t 818 . 819) (nil tag-name "span" 818 . 819) (nil tag-type start 818 . 819) (nil font-lock-face web-mode-html-attr-name-face 818 . 819) (nil part-side jsx 817 . 818) (nil jsx-depth 1 817 . 818) (nil tag-name "span" 817 . 818) (nil tag-type start 817 . 818) (nil part-side jsx 816 . 817) (nil jsx-depth 1 816 . 817) (nil tag-attr t 816 . 817) (nil tag-attr-end 25 816 . 817) (nil tag-name "span" 816 . 817) (nil tag-type start 816 . 817) (nil font-lock-face web-mode-html-attr-value-face 816 . 817) (nil part-side jsx 815 . 816) (nil jsx-depth 1 815 . 816) (nil tag-attr t 815 . 816) (nil tag-name "span" 815 . 816) (nil tag-type start 815 . 816) (nil font-lock-face web-mode-html-attr-value-face 815 . 816) (nil part-side jsx 814 . 815) (nil jsx-depth 1 814 . 815) (nil tag-attr t 814 . 815) (nil tag-name "span" 814 . 815) (nil tag-type start 814 . 815) (nil font-lock-face web-mode-html-attr-equal-face 814 . 815) (nil part-side jsx 790 . 814) (nil jsx-depth 1 790 . 814) (nil tag-attr t 790 . 814) (nil tag-name "span" 790 . 814) (nil tag-type start 790 . 814) (nil font-lock-face web-mode-html-attr-name-face 790 . 814) (nil part-side jsx 789 . 790) (nil jsx-depth 1 789 . 790) (nil tag-attr-beg 0 789 . 790) (nil tag-attr t 789 . 790) (nil tag-name "span" 789 . 790) (nil tag-type start 789 . 790) (nil font-lock-face web-mode-html-attr-name-face 789 . 790) (nil part-side jsx 788 . 789) (nil jsx-depth 1 788 . 789) (nil tag-name "span" 788 . 789) (nil tag-type start 788 . 789) (nil part-side jsx 784 . 788) (nil jsx-depth 1 784 . 788) (nil tag-name "span" 784 . 788) (nil tag-type start 784 . 788) (nil font-lock-face web-mode-html-tag-face 784 . 788) (nil part-side jsx 783 . 784) (nil jsx-depth 1 783 . 784) (nil tag-name "span" 783 . 784) (nil tag-type start 783 . 784) (nil tag-beg 17 783 . 784) (nil font-lock-face web-mode-html-tag-bracket-face 783 . 784) (783 . 1166)) ((#("<span _ngcontent-ng-c1309910658=\"\" class=\"hover:underline text-xs sm:text-base\">D6y6PmrH47d2vTgXZjzADbp1bgQQF9Przk9UDRBJuM7R</span><mat-icon _ngcontent-ng-c1309910658=\"\" role=\"img\" fonticon=\"content_copy\" class=\"mat-icon notranslate text-sm material-icons mat-ligature-font mat-icon-no-color\" aria-hidden=\"true\" data-mat-icon-type=\"font\" data-mat-icon-name=\"content_copy\"></mat-icon>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span" jsx-depth 1 part-side jsx) 1 5 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span" jsx-depth 1 part-side jsx) 5 6 (tag-type start tag-name "span" jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 7 31 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 31 32 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 32 33 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 33 34 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 25 tag-attr t jsx-depth 1 part-side jsx) 34 35 (tag-type start tag-name "span" jsx-depth 1 part-side jsx) 35 36 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 36 40 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 40 41 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 41 42 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 42 47 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 47 66 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 66 68 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 68 78 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 78 79 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 5 tag-attr t jsx-depth 1 part-side jsx) 79 80 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span" jsx-depth 1 part-side jsx) 80 124 (jsx-depth 1 part-side jsx) 124 125 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span" jsx-depth 1 part-side jsx) 125 126 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span" jsx-depth 1 part-side jsx) 126 130 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span" jsx-depth 1 part-side jsx) 130 131 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span" jsx-depth 1 part-side jsx) 131 132 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "mat-icon" jsx-depth 1 part-side jsx) 132 140 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "mat-icon" jsx-depth 1 part-side jsx) 140 141 (tag-type start tag-name "mat-icon" jsx-depth 1 part-side jsx) 141 142 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "mat-icon" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 142 166 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "mat-icon" tag-attr t jsx-depth 1 part-side jsx) 166 167 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "mat-icon" tag-attr t jsx-depth 1 part-side jsx) 167 168 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "mat-icon" tag-attr t jsx-depth 1 part-side jsx) 168 169 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "mat-icon" tag-attr-end 25 tag-attr t jsx-depth 1 part-side jsx) 169 170 (tag-type start tag-name "mat-icon" jsx-depth 1 part-side jsx) 170 171 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "mat-icon" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 171 174 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "mat-icon" tag-attr t jsx-depth 1 part-side jsx) 174 175 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "mat-icon" tag-attr t jsx-depth 1 part-side jsx) 175 179 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "mat-icon" tag-attr t jsx-depth 1 part-side jsx) 179 180 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "mat-icon" tag-attr-end 4 tag-attr t jsx-depth 1 part-side jsx) 180 181 (tag-type start tag-name "mat-icon" jsx-depth 1 part-side jsx) 181 182 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "mat-icon" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 182 189 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "mat-icon" tag-attr t jsx-depth 1 part-side jsx) 189 190 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "mat-icon" tag-attr t jsx-depth 1 part-side jsx) 190 203 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "mat-icon" tag-attr t jsx-depth 1 part-side jsx) 203 204 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "mat-icon" tag-attr-end 8 tag-attr t jsx-depth 1 part-side jsx) 204 205 (tag-type start tag-name "mat-icon" jsx-depth 1 part-side jsx) 205 206 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "mat-icon" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 206 210 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "mat-icon" tag-attr t jsx-depth 1 part-side jsx) 210 211 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "mat-icon" tag-attr t jsx-depth 1 part-side jsx) 211 291 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "mat-icon" tag-attr t jsx-depth 1 part-side jsx) 291 292 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "mat-icon" tag-attr-end 5 tag-attr t jsx-depth 1 part-side jsx) 292 293 (tag-type start tag-name "mat-icon" jsx-depth 1 part-side jsx) 293 294 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "mat-icon" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 294 304 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "mat-icon" tag-attr t jsx-depth 1 part-side jsx) 304 305 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "mat-icon" tag-attr t jsx-depth 1 part-side jsx) 305 306 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "mat-icon" tag-attr t jsx-depth 1 part-side jsx) 306 310 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "mat-icon" tag-attr t jsx-depth 1 part-side jsx) 310 311 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "mat-icon" tag-attr-end 11 tag-attr t jsx-depth 1 part-side jsx) 311 312 (tag-type start tag-name "mat-icon" jsx-depth 1 part-side jsx) 312 313 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "mat-icon" tag-attr t tag-attr-beg 1 jsx-depth 1 part-side jsx) 313 330 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "mat-icon" tag-attr t jsx-depth 1 part-side jsx) 330 331 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "mat-icon" tag-attr t jsx-depth 1 part-side jsx) 331 336 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "mat-icon" tag-attr t jsx-depth 1 part-side jsx) 336 337 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "mat-icon" tag-attr-end 18 tag-attr t jsx-depth 1 part-side jsx) 337 338 (tag-type start tag-name "mat-icon" jsx-depth 1 part-side jsx) 338 339 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "mat-icon" tag-attr t tag-attr-beg 1 jsx-depth 1 part-side jsx) 339 356 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "mat-icon" tag-attr t jsx-depth 1 part-side jsx) 356 357 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "mat-icon" tag-attr t jsx-depth 1 part-side jsx) 357 370 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "mat-icon" tag-attr t jsx-depth 1 part-side jsx) 370 371 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "mat-icon" tag-attr-end 18 tag-attr t jsx-depth 1 part-side jsx) 371 372 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "mat-icon" jsx-depth 1 part-side jsx) 372 373 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "mat-icon" jsx-depth 1 part-side jsx) 373 374 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "mat-icon" jsx-depth 1 part-side jsx) 374 382 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "mat-icon" jsx-depth 1 part-side jsx) 382 383 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "mat-icon" jsx-depth 1 part-side jsx rear-nonsticky nil)) . 783) (undo-tree-id2785 . -382) (undo-tree-id2786 . -382) (nil tag-name "span" 783 . 784) (nil tag-name "span" 784 . 788) (nil tag-name "span" 788 . 789) (nil tag-name "span" 789 . 790) (nil tag-name "span" 790 . 814) (nil tag-name "span" 814 . 815) (nil tag-name "span" 815 . 816) (nil tag-name "span" 816 . 817) (nil tag-name "span" 817 . 818) (nil tag-name "span" 818 . 819) (nil tag-name "span" 819 . 823) (nil tag-name "span" 823 . 824) (nil tag-name "span" 824 . 825) (nil tag-name "span" 825 . 830) (nil tag-name "span" 830 . 849) (nil tag-name "span" 849 . 851) (nil tag-name "span" 851 . 861) (nil tag-name "span" 861 . 862) (nil tag-name "span" 862 . 863) (nil tag-name "span" 907 . 908) (nil tag-name "span" 908 . 909) (nil tag-name "span" 909 . 913) (nil tag-name "span" 913 . 914) (nil tag-name "mat-icon" 914 . 915) (nil tag-name "mat-icon" 915 . 923) (nil tag-name "mat-icon" 923 . 924) (nil tag-name "mat-icon" 924 . 925) (nil tag-name "mat-icon" 925 . 949) (nil tag-name "mat-icon" 949 . 950) (nil tag-name "mat-icon" 950 . 951) (nil tag-name "mat-icon" 951 . 952) (nil tag-name "mat-icon" 952 . 953) (nil tag-name "mat-icon" 953 . 954) (nil tag-name "mat-icon" 954 . 957) (nil tag-name "mat-icon" 957 . 958) (nil tag-name "mat-icon" 958 . 962) (nil tag-name "mat-icon" 962 . 963) (nil tag-name "mat-icon" 963 . 964) (nil tag-name "mat-icon" 964 . 965) (nil tag-name "mat-icon" 965 . 972) (nil tag-name "mat-icon" 972 . 973) (nil tag-name "mat-icon" 973 . 986) (nil tag-name "mat-icon" 986 . 987) (nil tag-name "mat-icon" 987 . 988) (nil tag-name "mat-icon" 988 . 989) (nil tag-name "mat-icon" 989 . 993) (nil tag-name "mat-icon" 993 . 994) (nil tag-name "mat-icon" 994 . 1074) (nil tag-name "mat-icon" 1074 . 1075) (nil tag-name "mat-icon" 1075 . 1076) (nil tag-name "mat-icon" 1076 . 1077) (nil tag-name "mat-icon" 1077 . 1087) (nil tag-name "mat-icon" 1087 . 1088) (nil tag-name "mat-icon" 1088 . 1089) (nil tag-name "mat-icon" 1089 . 1093) (nil tag-name "mat-icon" 1093 . 1094) (nil tag-name "mat-icon" 1094 . 1095) (nil tag-name "mat-icon" 1095 . 1096) (nil tag-name "mat-icon" 1096 . 1113) (nil tag-name "mat-icon" 1113 . 1114) (nil tag-name "mat-icon" 1114 . 1119) (nil tag-name "mat-icon" 1119 . 1120) (nil tag-name "mat-icon" 1120 . 1121) (nil tag-name "mat-icon" 1121 . 1122) (nil tag-name "mat-icon" 1122 . 1139) (nil tag-name "mat-icon" 1139 . 1140) (nil tag-name "mat-icon" 1140 . 1153) (nil tag-name "mat-icon" 1153 . 1154) (nil tag-name "mat-icon" 1154 . 1155) (nil tag-name "mat-icon" 1155 . 1156) (nil tag-name "mat-icon" 1156 . 1157) (nil tag-name "mat-icon" 1157 . 1165) (nil tag-name "mat-icon" 1165 . 1166) (nil rear-nonsticky t 1165 . 1166)) (26130 47831 656845 126000) 0 nil])
([nil nil ((#("// Importing the CopyComponent from the components directory" 0 1 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 1 31 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 31 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 35 59 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 59 60 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx rear-nonsticky t)) . 148) (undo-tree-id3025 . -59) (undo-tree-id3026 . -60) (t 26130 48993 857824 660000)) nil (26130 48996 435592 392000) 0 nil])
([nil nil ((#("import React from 'react';
" 0 6 (face web-mode-keyword-face part-side jsx) 6 7 (part-side jsx) 7 12 (face web-mode-type-face part-side jsx) 12 13 (part-side jsx) 13 17 (face web-mode-keyword-face part-side jsx) 17 18 (part-side jsx) 18 19 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 19 24 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 24 25 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 25 27 (part-side jsx)) . 92) (undo-tree-id3001 . -26) (undo-tree-id3002 . -26) (undo-tree-id3003 . -26) (undo-tree-id3004 . -26) (undo-tree-id3005 . -25) (undo-tree-id3006 . -25) (undo-tree-id3007 . -25) (undo-tree-id3008 . -25) (undo-tree-id3009 . -25) (undo-tree-id3010 . -25) (undo-tree-id3011 . -27) 117 (t 26130 48199 743686 807000)) ((92 . 119) (t 26130 48204 983688 970000)) (26130 48204 962940 441000) 0 nil])
([nil nil ((#("items-center" 0 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 476) (undo-tree-id2815 . -11) (undo-tree-id2816 . -11) (undo-tree-id2817 . -11) (undo-tree-id2819 . -11) (undo-tree-id2821 . -11) (undo-tree-id2823 . -12) 487 (t 26130 47863 183547 843000)) ((476 . 488)) (26130 47937 526521 521000) 0 nil])
([nil nil ((783 . 789) 1165 (t 26130 47247 429960 270000)) ((#("		    " 0 6 (jsx-depth 1 part-side jsx)) . 783)) (26130 47831 228393 180000) 0 nil])
([nil nil ((132 . 133) (#("C" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 132) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (t 26130 48996 497827 405000)) nil (26130 49056 685049 817000) 0 nil])
nil
([nil nil ((#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 476) (undo-tree-id2824 . 1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 476) (undo-tree-id2825 . 1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 476) (undo-tree-id2826 . 1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 476) (undo-tree-id2827 . 1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 476) (undo-tree-id2828 . 1) (#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 476) (undo-tree-id2829 . 1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 476) (undo-tree-id2830 . 1) (#("y" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 476) (undo-tree-id2831 . 1) (#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 476) (undo-tree-id2832 . 1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 476) (undo-tree-id2833 . 1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 476) (undo-tree-id2834 . 1) (#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 476) (undo-tree-id2835 . 1) (#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 476) (undo-tree-id2836 . 1) (#("j" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 476) (undo-tree-id2837 . 1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 476) (undo-tree-id2838 . 1) (t 26130 47878 733554 265000)) ((476 . 477) (476 . 477) (476 . 477) (476 . 477) (476 . 477) (476 . 477) (476 . 477) (476 . 477) (476 . 477) (476 . 477) (476 . 477) (476 . 477) (476 . 477) (476 . 477) (476 . 477)) (26130 47936 834669 375000) 0 nil])
([nil nil ((#("		    " 0 6 (jsx-depth 1 part-side jsx)) . -783) (undo-tree-id2724 . -6) (undo-tree-id2726 . -6) 789 (782 . 789) 781) ((#("
		    " 0 1 (jsx-depth 1 part-side jsx) 1 7 (jsx-depth 1 part-side jsx)) . 782) (783 . 789)) (26130 47830 697272 306000) 0 nil])
([nil nil ((#("." 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 119) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (t 26130 49056 744556 726000)) nil (26130 49109 202250 515000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -475) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2846 . -1) (undo-tree-id2848 . -1) (undo-tree-id2850 . -1) 476 (t 26130 47883 726889 660000)) ((475 . 476) (t 26130 47907 693566 221000)) (26130 47906 621377 36000) 0 nil])
([nil nil ((#("		    " 0 6 (jsx-depth 1 part-side jsx)) . -1174) (undo-tree-id2738 . -6) (undo-tree-id2740 . -6) 1180 (1174 . 1180) (1174 . 1175)) ((#("
" 0 1 (jsx-depth 1 part-side jsx)) . 1174) (#("		    " 0 6 (jsx-depth 1 part-side jsx)) . 1174) (1174 . 1180)) (26130 47830 251753 949000) 0 nil] [nil nil ((#("		" 0 2 (jsx-depth 1 part-side jsx)) . -1186) (undo-tree-id2729 . -2) (undo-tree-id2730 . -2) (undo-tree-id2731 . -2) (undo-tree-id2732 . -2) 1188 (1186 . 1188) (1186 . 1187)) ((#("
" 0 1 (jsx-depth 1 part-side jsx)) . 1186) (undo-tree-id2733 . 1) (#("		" 0 2 (jsx-depth 1 part-side jsx)) . 1186) (undo-tree-id2734 . -2) (undo-tree-id2735 . -2) (undo-tree-id2736 . -2) (1186 . 1188)) (26130 47258 641984 859000) 0 nil] [nil nil ((#("		" 0 2 (jsx-depth 1 part-side jsx)) . -1187) (undo-tree-id2721 . -2) (undo-tree-id2722 . -2) 1189 (1186 . 1189) 1186) ((#("
		" 0 1 (jsx-depth 1 part-side jsx) 1 3 (jsx-depth 1 part-side jsx)) . 1186) (undo-tree-id2727 . -3) (undo-tree-id2728 . -1) (1187 . 1189)) (26130 47257 291316 389000) 0 nil])
([nil nil ((#("/" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 119) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1)) nil (26130 49109 202249 415000) 0 nil])
([nil nil ((348 . 353) (t 26130 47886 650224 200000)) ((#(" just" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 1 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 348) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -5) (undo-tree-id2999 . -1) (undo-tree-id3000 . -5)) (26130 47906 299642 34000) 0 nil])
([nil nil ((nil rear-nonsticky nil 151 . 152) (nil part-side jsx 151 . 152) (nil part-side jsx 150 . 151) (nil part-token string 150 . 151) (nil syntax-table (15) 150 . 151) (nil font-lock-face web-mode-javascript-string-face 150 . 151) (nil part-side jsx 127 . 150) (nil part-token string 127 . 150) (nil font-lock-face web-mode-javascript-string-face 127 . 150) (nil part-side jsx 126 . 127) (nil part-token string 126 . 127) (nil syntax-table (15) 126 . 127) (nil font-lock-face web-mode-javascript-string-face 126 . 127) (nil part-side jsx 125 . 126) (nil part-side jsx 121 . 125) (nil face web-mode-keyword-face 121 . 125) (nil part-side jsx 120 . 121) (nil part-side jsx 99 . 120) (nil face web-mode-type-face 99 . 120) (nil part-side jsx 98 . 99) (nil part-side jsx 92 . 98) (nil face web-mode-keyword-face 92 . 98) (92 . 152) (t 26130 47260 966632 525000)) ((#("import CopyToClipboardButton from './CopyToClipboardButton';" 0 6 (face web-mode-keyword-face part-side jsx) 6 7 (part-side jsx) 7 28 (face web-mode-type-face part-side jsx) 28 29 (part-side jsx) 29 33 (face web-mode-keyword-face part-side jsx) 33 34 (part-side jsx) 34 35 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 35 58 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 58 59 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 59 60 (part-side jsx rear-nonsticky nil)) . 92) (undo-tree-id2781 . -60) (undo-tree-id2782 . -60) (undo-tree-id2783 . -59) (undo-tree-id2784 . -59) (nil syntax-table (15) 126 . 127) (nil syntax-table (15) 150 . 151) (nil rear-nonsticky t 151 . 152)) (26130 47829 761662 845000) 0 nil])
nil
nil
([nil nil ((#("c" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 119) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1)) nil (26130 49109 202248 45000) 0 nil])
([nil nil ((349 . 364) (#("just" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -349) (undo-tree-id2852 . -2) (undo-tree-id2854 . -4) (undo-tree-id2856 . -4) 353) ((349 . 353) (#("justify-content" 0 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 12 13 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 13 14 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 14 15 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 349) (undo-tree-id2963 . -15) (undo-tree-id2964 . -15) (undo-tree-id2965 . -15) (undo-tree-id2966 . -15) (undo-tree-id2967 . -15) (undo-tree-id2968 . -10) (undo-tree-id2969 . -10) (undo-tree-id2970 . -8) (undo-tree-id2971 . -8) (undo-tree-id2972 . -8) (undo-tree-id2973 . -8) (undo-tree-id2974 . -8) (undo-tree-id2975 . -8) (undo-tree-id2976 . -8) (undo-tree-id2977 . -8) (undo-tree-id2978 . -15) (undo-tree-id2979 . -15) (undo-tree-id2980 . -15) (undo-tree-id2981 . -15)) (26130 47905 977009 781000) 0 nil])
([nil nil ((152 . 153) (t 26130 47365 220008 905000) 151) ((#("
" 0 1 (part-side jsx)) . 152) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1)) (26130 47829 159509 103000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 119) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1)) nil (26130 49109 202247 15000) 0 nil])
([nil nil ((364 . 371) (t 26130 47898 446895 736000)) ((#("-center" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 364) (undo-tree-id2954 . -7) (undo-tree-id2955 . -7) (undo-tree-id2956 . -6) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -7) (undo-tree-id2960 . -7) (undo-tree-id2961 . -7) (undo-tree-id2962 . -7)) (26130 47905 660645 295000) 0 nil])
([nil nil ((#("import CopyToClipboardButton from './CopyToClipboardButton';
" 0 6 (face web-mode-keyword-face part-side jsx) 6 7 (part-side jsx) 7 28 (face web-mode-type-face part-side jsx) 28 29 (part-side jsx) 29 33 (face web-mode-keyword-face part-side jsx) 33 34 (part-side jsx) 34 35 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 35 58 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 58 59 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 59 60 (part-side jsx rear-nonsticky t) 60 61 (part-side jsx)) . 92) (undo-tree-id2769 . -61) (undo-tree-id2770 . -61) (undo-tree-id2772 . -61) (undo-tree-id2774 . -61) (undo-tree-id2775 . -16) (undo-tree-id2777 . -16) (t 26130 47574 453428 630000)) ((92 . 153) (t 26130 47828 903533 689000)) (26130 47827 869429 569000) 0 nil] [nil nil ((nil rear-nonsticky nil 421 . 422) (nil part-side jsx 417 . 422) (nil part-side jsx 410 . 417) (nil face web-mode-keyword-face 410 . 417) (nil part-side jsx 409 . 410) (nil part-side jsx 403 . 409) (nil face web-mode-keyword-face 403 . 409) (nil part-side jsx 393 . 403) (nil part-side jsx 392 . 393) (nil jsx-end 1 392 . 393) (nil jsx-depth 1 392 . 393) (nil tag-name "div" 392 . 393) (nil tag-type end 392 . 393) (nil tag-end t 392 . 393) (nil font-lock-face web-mode-html-tag-bracket-face 392 . 393) (nil part-side jsx 389 . 392) (nil jsx-depth 1 389 . 392) (nil tag-name "div" 389 . 392) (nil tag-type end 389 . 392) (nil font-lock-face web-mode-html-tag-face 389 . 392) (nil part-side jsx 388 . 389) (nil jsx-depth 1 388 . 389) (nil tag-name "div" 388 . 389) (nil tag-type end 388 . 389) (nil font-lock-face web-mode-html-tag-bracket-face 388 . 389) (nil part-side jsx 387 . 388) (nil jsx-depth 1 387 . 388) (nil tag-name "div" 387 . 388) (nil tag-type end 387 . 388) (nil tag-beg 20 387 . 388) (nil font-lock-face web-mode-html-tag-bracket-face 387 . 388) (nil part-side jsx 382 . 387) (nil jsx-depth 1 382 . 387) (nil part-side jsx 381 . 382) (nil jsx-depth 1 381 . 382) (nil tag-name "copytoclipboardbutton" 381 . 382) (nil tag-type void 381 . 382) (nil tag-end t 381 . 382) (nil font-lock-face web-mode-html-tag-bracket-face 381 . 382) (nil part-side jsx 380 . 381) (nil jsx-depth 1 380 . 381) (nil tag-name "copytoclipboardbutton" 380 . 381) (nil tag-type void 380 . 381) (nil font-lock-face web-mode-html-tag-bracket-face 380 . 381) (nil part-side jsx 379 . 380) (nil jsx-depth 1 379 . 380) (nil tag-name "copytoclipboardbutton" 379 . 380) (nil tag-type void 379 . 380) (nil part-side jsx 378 . 379) (nil jsx-depth 2 378 . 379) (nil tag-attr t 378 . 379) (nil tag-attr-end 4 378 . 379) (nil tag-name "copytoclipboardbutton" 378 . 379) (nil tag-type void 378 . 379) (nil jsx-end 2 378 . 379) (nil font-lock-face web-mode-block-delimiter-face 378 . 379) (nil part-side jsx 368 . 378) (nil jsx-depth 2 368 . 378) (nil tag-attr t 368 . 378) (nil tag-name "copytoclipboardbutton" 368 . 378) (nil tag-type void 368 . 378) (nil part-side jsx 367 . 368) (nil jsx-depth 2 367 . 368) (nil tag-attr t 367 . 368) (nil tag-name "copytoclipboardbutton" 367 . 368) (nil tag-type void 367 . 368) (nil jsx-beg 2 367 . 368) (nil font-lock-face web-mode-block-delimiter-face 367 . 368) (nil part-side jsx 366 . 367) (nil jsx-depth 1 366 . 367) (nil tag-attr t 366 . 367) (nil tag-name "copytoclipboardbutton" 366 . 367) (nil tag-type void 366 . 367) (nil font-lock-face web-mode-html-attr-equal-face 366 . 367) (nil part-side jsx 363 . 366) (nil jsx-depth 1 363 . 366) (nil tag-attr t 363 . 366) (nil tag-name "copytoclipboardbutton" 363 . 366) (nil tag-type void 363 . 366) (nil font-lock-face web-mode-html-attr-name-face 363 . 366) (nil part-side jsx 362 . 363) (nil jsx-depth 1 362 . 363) (nil tag-attr-beg 0 362 . 363) (nil tag-attr t 362 . 363) (nil tag-name "copytoclipboardbutton" 362 . 363) (nil tag-type void 362 . 363) (nil font-lock-face web-mode-html-attr-name-face 362 . 363) (nil part-side jsx 361 . 362) (nil jsx-depth 1 361 . 362) (nil tag-name "copytoclipboardbutton" 361 . 362) (nil tag-type void 361 . 362) (nil part-side jsx 340 . 361) (nil jsx-depth 1 340 . 361) (nil tag-name "copytoclipboardbutton" 340 . 361) (nil tag-type void 340 . 361) (nil font-lock-face web-mode-html-tag-face 340 . 361) (nil part-side jsx 339 . 340) (nil jsx-depth 1 339 . 340) (nil tag-name "copytoclipboardbutton" 339 . 340) (nil tag-type void 339 . 340) (nil tag-beg 25 339 . 340) (nil font-lock-face web-mode-html-tag-bracket-face 339 . 340) (nil part-side jsx 332 . 339) (nil jsx-depth 1 332 . 339) (nil part-side jsx 331 . 332) (nil jsx-depth 1 331 . 332) (nil tag-name "p" 331 . 332) (nil tag-type end 331 . 332) (nil tag-end t 331 . 332) (nil font-lock-face web-mode-html-tag-bracket-face 331 . 332) (nil part-side jsx 330 . 331) (nil jsx-depth 1 330 . 331) (nil tag-name "p" 330 . 331) (nil tag-type end 330 . 331) (nil font-lock-face web-mode-html-tag-face 330 . 331) (nil part-side jsx 329 . 330) (nil jsx-depth 1 329 . 330) (nil tag-name "p" 329 . 330) (nil tag-type end 329 . 330) (nil font-lock-face web-mode-html-tag-bracket-face 329 . 330) (nil part-side jsx 328 . 329) (nil jsx-depth 1 328 . 329) (nil tag-name "p" 328 . 329) (nil tag-type end 328 . 329) (nil tag-beg 20 328 . 329) (nil font-lock-face web-mode-html-tag-bracket-face 328 . 329) (nil part-side jsx 327 . 328) (nil jsx-depth 2 327 . 328) (nil jsx-end 2 327 . 328) (nil font-lock-face web-mode-block-delimiter-face 327 . 328) (nil part-side jsx 317 . 327) (nil jsx-depth 2 317 . 327) (nil part-side jsx 316 . 317) (nil jsx-depth 2 316 . 317) (nil jsx-beg 2 316 . 317) (nil font-lock-face web-mode-block-delimiter-face 316 . 317) (nil part-side jsx 315 . 316) (nil jsx-depth 1 315 . 316) (nil tag-name "p" 315 . 316) (nil tag-type start 315 . 316) (nil tag-end t 315 . 316) (nil font-lock-face web-mode-html-tag-bracket-face 315 . 316) (nil part-side jsx 314 . 315) (nil jsx-depth 1 314 . 315) (nil tag-name "p" 314 . 315) (nil tag-type start 314 . 315) (nil font-lock-face web-mode-html-tag-face 314 . 315) (nil part-side jsx 313 . 314) (nil jsx-depth 1 313 . 314) (nil tag-name "p" 313 . 314) (nil tag-type start 313 . 314) (nil tag-beg 16 313 . 314) (nil font-lock-face web-mode-html-tag-bracket-face 313 . 314) (nil part-side jsx 306 . 313) (nil jsx-depth 1 306 . 313) (nil part-side jsx 305 . 306) (nil jsx-depth 1 305 . 306) (nil tag-name "div" 305 . 306) (nil tag-type start 305 . 306) (nil tag-end t 305 . 306) (nil font-lock-face web-mode-html-tag-bracket-face 305 . 306) (nil part-side jsx 304 . 305) (nil jsx-depth 1 304 . 305) (nil tag-attr t 304 . 305) (nil tag-attr-end 9 304 . 305) (nil tag-name "div" 304 . 305) (nil tag-type start 304 . 305) (nil font-lock-face web-mode-html-attr-value-face 304 . 305) (nil part-side jsx 253 . 304) (nil jsx-depth 1 253 . 304) (nil tag-attr t 253 . 304) (nil tag-name "div" 253 . 304) (nil tag-type start 253 . 304) (nil font-lock-face web-mode-html-attr-value-face 253 . 304) (nil part-side jsx 252 . 253) (nil jsx-depth 1 252 . 253) (nil tag-attr t 252 . 253) (nil tag-name "div" 252 . 253) (nil tag-type start 252 . 253) (nil font-lock-face web-mode-html-attr-equal-face 252 . 253) (nil part-side jsx 244 . 252) (nil jsx-depth 1 244 . 252) (nil tag-attr t 244 . 252) (nil tag-name "div" 244 . 252) (nil tag-type start 244 . 252) (nil font-lock-face web-mode-html-attr-name-face 244 . 252) (nil part-side jsx 243 . 244) (nil jsx-depth 1 243 . 244) (nil tag-attr-beg 0 243 . 244) (nil tag-attr t 243 . 244) (nil tag-name "div" 243 . 244) (nil tag-type start 243 . 244) (nil font-lock-face web-mode-html-attr-name-face 243 . 244) (nil part-side jsx 242 . 243) (nil jsx-depth 1 242 . 243) (nil tag-name "div" 242 . 243) (nil tag-type start 242 . 243) (nil part-side jsx 239 . 242) (nil jsx-depth 1 239 . 242) (nil tag-name "div" 239 . 242) (nil tag-type start 239 . 242) (nil font-lock-face web-mode-html-tag-face 239 . 242) (nil part-side jsx 238 . 239) (nil jsx-beg 1 238 . 239) (nil jsx-depth 1 238 . 239) (nil tag-name "div" 238 . 239) (nil tag-type start 238 . 239) (nil tag-beg 17 238 . 239) (nil font-lock-face web-mode-html-tag-bracket-face 238 . 239) (nil part-side jsx 231 . 238) (nil part-side jsx 225 . 231) (nil face web-mode-keyword-face 225 . 231) (nil part-side jsx 220 . 225) (nil part-side jsx 219 . 220) (nil part-token string 219 . 220) (nil syntax-table (15) 219 . 220) (nil font-lock-face web-mode-javascript-string-face 219 . 220) (nil part-side jsx 195 . 219) (nil part-token string 195 . 219) (nil font-lock-face web-mode-javascript-string-face 195 . 219) (nil part-side jsx 194 . 195) (nil part-token string 194 . 195) (nil syntax-table (15) 194 . 195) (nil font-lock-face web-mode-javascript-string-face 194 . 195) (nil part-side jsx 191 . 194) (nil part-side jsx 181 . 191) (nil face web-mode-variable-name-face 181 . 191) (nil part-side jsx 180 . 181) (nil part-side jsx 175 . 180) (nil face web-mode-keyword-face 175 . 180) (nil part-side jsx 162 . 175) (nil part-side jsx 159 . 162) (nil face web-mode-function-name-face 159 . 162) (nil part-side jsx 158 . 159) (nil part-side jsx 153 . 158) (nil face web-mode-keyword-face 153 . 158) (153 . 422) (t 26130 47367 140009 698000)) ((#("const App = () => {
  const textToCopy = 'This is the text to copy';

  return (
    <div className=\"flex flex-col items-center justify-center h-screen\">
      <p>{textToCopy}</p>
      <CopyToClipboardButton text={textToCopy} />
    </div>
  );
};

export default App;" 0 5 (face web-mode-keyword-face part-side jsx) 5 6 (part-side jsx) 6 9 (face web-mode-function-name-face part-side jsx) 9 20 (part-side jsx) 20 22 (part-side jsx) 22 27 (face web-mode-keyword-face part-side jsx) 27 28 (part-side jsx) 28 38 (face web-mode-variable-name-face part-side jsx) 38 41 (part-side jsx) 41 42 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 42 66 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 66 67 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 67 69 (part-side jsx) 69 72 (part-side jsx) 72 78 (face web-mode-keyword-face part-side jsx) 78 81 (part-side jsx) 81 85 (part-side jsx) 85 86 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 86 89 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 89 90 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 90 91 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 91 99 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 99 100 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 100 151 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 151 152 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 152 153 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 153 160 (jsx-depth 1 part-side jsx) 160 161 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p" jsx-depth 1 part-side jsx) 161 162 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 1 part-side jsx) 162 163 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 1 part-side jsx) 163 164 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 164 174 (jsx-depth 2 part-side jsx) 174 175 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 175 176 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 1 part-side jsx) 176 177 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 177 178 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 178 179 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 1 part-side jsx) 179 186 (jsx-depth 1 part-side jsx) 186 187 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "copytoclipboardbutton" jsx-depth 1 part-side jsx) 187 208 (font-lock-face web-mode-html-tag-face tag-type void tag-name "copytoclipboardbutton" jsx-depth 1 part-side jsx) 208 209 (tag-type void tag-name "copytoclipboardbutton" jsx-depth 1 part-side jsx) 209 210 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "copytoclipboardbutton" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 210 213 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "copytoclipboardbutton" tag-attr t jsx-depth 1 part-side jsx) 213 214 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "copytoclipboardbutton" tag-attr t jsx-depth 1 part-side jsx) 214 215 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type void tag-name "copytoclipboardbutton" tag-attr t jsx-depth 2 part-side jsx) 215 225 (tag-type void tag-name "copytoclipboardbutton" tag-attr t jsx-depth 2 part-side jsx) 225 226 (font-lock-face web-mode-block-delimiter-face jsx-end 2 tag-type void tag-name "copytoclipboardbutton" tag-attr-end 4 tag-attr t jsx-depth 2 part-side jsx) 226 227 (tag-type void tag-name "copytoclipboardbutton" jsx-depth 1 part-side jsx) 227 228 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "copytoclipboardbutton" jsx-depth 1 part-side jsx) 228 229 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "copytoclipboardbutton" jsx-depth 1 part-side jsx) 229 234 (jsx-depth 1 part-side jsx) 234 235 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 235 236 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 236 239 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 239 240 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx) 240 246 (part-side jsx) 246 249 (part-side jsx) 249 250 (part-side jsx) 250 256 (face web-mode-keyword-face part-side jsx) 256 257 (part-side jsx) 257 264 (face web-mode-keyword-face part-side jsx) 264 268 (part-side jsx) 268 269 (part-side jsx rear-nonsticky nil)) . 153) (undo-tree-id2746 . 269) (undo-tree-id2747 . -268) (undo-tree-id2748 . -268) (nil syntax-table (15) 194 . 195) (nil syntax-table (15) 219 . 220) (nil tag-name "div" 238 . 239) (nil tag-name "div" 239 . 242) (nil tag-name "div" 242 . 243) (nil tag-name "div" 243 . 244) (nil tag-name "div" 244 . 252) (nil tag-name "div" 252 . 253) (nil tag-name "div" 253 . 304) (nil tag-name "div" 304 . 305) (nil tag-name "div" 305 . 306) (nil tag-name "p" 313 . 314) (nil tag-name "p" 314 . 315) (nil tag-name "p" 315 . 316) (nil tag-name "p" 328 . 329) (nil tag-name "p" 329 . 330) (nil tag-name "p" 330 . 331) (nil tag-name "p" 331 . 332) (nil tag-name "copytoclipboardbutton" 339 . 340) (nil tag-name "copytoclipboardbutton" 340 . 361) (nil tag-name "copytoclipboardbutton" 361 . 362) (nil tag-name "copytoclipboardbutton" 362 . 363) (nil tag-name "copytoclipboardbutton" 363 . 366) (nil tag-name "copytoclipboardbutton" 366 . 367) (nil tag-name "copytoclipboardbutton" 367 . 368) (nil tag-name "copytoclipboardbutton" 368 . 378) (nil tag-name "copytoclipboardbutton" 378 . 379) (nil tag-name "copytoclipboardbutton" 379 . 380) (nil tag-name "copytoclipboardbutton" 380 . 381) (nil tag-name "copytoclipboardbutton" 381 . 382) (nil tag-name "div" 387 . 388) (nil tag-name "div" 388 . 389) (nil tag-name "div" 389 . 392) (nil tag-name "div" 392 . 393) (nil rear-nonsticky t 421 . 422)) (26130 47403 589718 939000) 0 nil])
([nil nil ((#("m" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 119) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1)) nil (26130 49109 202245 925000) 0 nil])
([nil nil ((#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -357) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -358) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -359) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -360) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -361) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -362) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -363) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -364) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -365) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -366) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -367) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -368) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -369) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . -370) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) 371 (t 26130 47900 693563 332000)) ((357 . 371)) (26130 47905 337877 161000) 0 nil])
([nil nil ((#("
" 0 1 (part-side jsx rear-nonsticky t)) . 14) (t 26130 47578 226763 520000)) ((14 . 15) (t 26130 47666 120133 144000)) (26130 47666 94658 663000) 0 nil] [nil nil ((#("
" 0 1 (part-side jsx rear-nonsticky t)) . 14)) ((14 . 15) (t 26130 47428 500035 33000)) (26130 47428 480749 862000) 0 nil])
([nil nil ((422 . 423) (t 26130 47387 720018 195000) 421) ((#("
" 0 1 (part-side jsx)) . 422)) (26130 47403 74327 504000) 0 nil])
([nil nil ((#("p" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 119) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1)) nil (26130 49109 202244 895000) 0 nil])
([nil nil ((357 . 363)) ((#("center" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx)) . 357) (undo-tree-id2946 . -6) (undo-tree-id2947 . -6) (undo-tree-id2948 . -5) (undo-tree-id2949 . -5) (undo-tree-id2950 . -5) (undo-tree-id2951 . -5) (undo-tree-id2952 . -5) (undo-tree-id2953 . -5) (t 26130 47904 233564 793000)) (26130 47904 216460 388000) 0 nil])
nil
nil
([nil nil ((153 . 154)) ((#("
" 0 1 (part-side jsx)) . 153) (undo-tree-id2741 . 1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (t 26130 47392 50019 983000)) (26130 47392 32492 835000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 119) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1)) nil (26130 49262 645779 918000) 0 nil])
nil
nil
([nil nil ((#("import CopyComponent from 'nents/copyComponent'; 
" 0 6 (face web-mode-keyword-face part-side jsx) 6 7 (part-side jsx) 7 20 (face web-mode-type-face part-side jsx) 20 21 (part-side jsx) 21 25 (face web-mode-keyword-face part-side jsx) 25 26 (part-side jsx) 26 27 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 27 28 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 28 29 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 29 30 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 30 31 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 31 32 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 32 33 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 33 34 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 34 46 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 46 47 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 47 48 (part-side jsx) 48 49 (part-side jsx) 49 50 (part-side jsx)) . 92) (undo-tree-id3123 . -49) (undo-tree-id3124 . -27) (undo-tree-id3125 . -27) (undo-tree-id3126 . -27) (undo-tree-id3127 . -27) (undo-tree-id3128 . -27) (undo-tree-id3129 . -50) 119) nil (26130 49264 468001 659000) 0 nil] [nil nil ((#("n" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 119) (undo-tree-id3038 . -1)) ((119 . 120)) (26130 49262 417776 800000) 0 nil])
([nil nil ((745 . 753) (t 26130 49264 484772 765000) 744) nil (26130 49377 409913 980000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 119) (undo-tree-id3036 . -1)) ((119 . 120)) (26130 49262 159729 575000) 0 nil])
([nil nil ((nil rear-nonsticky nil 859 . 860) (nil part-side jsx 859 . 860) (nil jsx-depth 1 859 . 860) (nil tag-name "button" 859 . 860) (nil tag-type end 859 . 860) (nil tag-end t 859 . 860) (nil font-lock-face web-mode-html-tag-bracket-face 859 . 860) (nil part-side jsx 853 . 859) (nil jsx-depth 1 853 . 859) (nil tag-name "button" 853 . 859) (nil tag-type end 853 . 859) (nil font-lock-face web-mode-html-tag-face 853 . 859) (nil part-side jsx 852 . 853) (nil jsx-depth 1 852 . 853) (nil tag-name "button" 852 . 853) (nil tag-type end 852 . 853) (nil font-lock-face web-mode-html-tag-bracket-face 852 . 853) (nil part-side jsx 851 . 852) (nil jsx-depth 1 851 . 852) (nil tag-name "button" 851 . 852) (nil tag-type end 851 . 852) (nil tag-beg 20 851 . 852) (nil font-lock-face web-mode-html-tag-bracket-face 851 . 852) (nil part-side jsx 843 . 851) (nil jsx-depth 1 843 . 851) (nil part-side jsx 842 . 843) (nil jsx-depth 1 842 . 843) (nil tag-name "button" 842 . 843) (nil tag-type start 842 . 843) (nil tag-end t 842 . 843) (nil font-lock-face web-mode-html-tag-bracket-face 842 . 843) (nil part-side jsx 841 . 842) (nil jsx-depth 1 841 . 842) (nil tag-name "button" 841 . 842) (nil tag-type start 841 . 842) (nil part-side jsx 840 . 841) (nil jsx-depth 2 840 . 841) (nil tag-attr t 840 . 841) (nil tag-attr-end 7 840 . 841) (nil tag-name "button" 840 . 841) (nil tag-type start 840 . 841) (nil jsx-end 2 840 . 841) (nil font-lock-face web-mode-block-delimiter-face 840 . 841) (nil part-side jsx 839 . 840) (nil jsx-depth 2 839 . 840) (nil tag-attr t 839 . 840) (nil tag-name "button" 839 . 840) (nil tag-type start 839 . 840) (nil part-side jsx 838 . 839) (nil jsx-depth 2 838 . 839) (nil tag-attr t 838 . 839) (nil tag-name "button" 838 . 839) (nil tag-type start 838 . 839) (nil part-token string 838 . 839) (nil syntax-table (15) 838 . 839) (nil font-lock-face web-mode-javascript-string-face 838 . 839) (nil part-side jsx 820 . 838) (nil jsx-depth 2 820 . 838) (nil tag-attr t 820 . 838) (nil tag-name "button" 820 . 838) (nil tag-type start 820 . 838) (nil part-token string 820 . 838) (nil font-lock-face web-mode-javascript-string-face 820 . 838) (nil part-side jsx 816 . 820) (nil jsx-depth 2 816 . 820) (nil tag-attr t 816 . 820) (nil tag-name "button" 816 . 820) (nil tag-type start 816 . 820) (nil part-token string 816 . 820) (nil font-lock-face web-mode-javascript-string-face 816 . 820) (nil part-side jsx 811 . 816) (nil jsx-depth 2 811 . 816) (nil tag-attr t 811 . 816) (nil tag-name "button" 811 . 816) (nil tag-type start 811 . 816) (nil part-token string 811 . 816) (nil font-lock-face web-mode-javascript-string-face 811 . 816) (nil part-side jsx 810 . 811) (nil jsx-depth 2 810 . 811) (nil tag-attr t 810 . 811) (nil tag-name "button" 810 . 811) (nil tag-type start 810 . 811) (nil part-token string 810 . 811) (nil syntax-table (15) 810 . 811) (nil font-lock-face web-mode-javascript-string-face 810 . 811) (nil part-side jsx 809 . 810) (nil jsx-depth 2 809 . 810) (nil tag-attr t 809 . 810) (nil tag-name "button" 809 . 810) (nil tag-type start 809 . 810) (nil part-side jsx 800 . 809) (nil jsx-depth 2 800 . 809) (nil tag-attr t 800 . 809) (nil tag-name "button" 800 . 809) (nil tag-type start 800 . 809) (nil face web-mode-function-call-face 800 . 809) (nil part-side jsx 773 . 800) (nil jsx-depth 2 773 . 800) (nil tag-attr t 773 . 800) (nil tag-name "button" 773 . 800) (nil tag-type start 773 . 800) (nil part-side jsx 772 . 773) (nil jsx-depth 2 772 . 773) (nil tag-attr t 772 . 773) (nil tag-name "button" 772 . 773) (nil tag-type start 772 . 773) (nil jsx-beg 2 772 . 773) (nil font-lock-face web-mode-block-delimiter-face 772 . 773) (nil part-side jsx 771 . 772) (nil jsx-depth 1 771 . 772) (nil tag-attr t 771 . 772) (nil tag-name "button" 771 . 772) (nil tag-type start 771 . 772) (nil font-lock-face web-mode-html-attr-equal-face 771 . 772) (nil part-side jsx 765 . 771) (nil jsx-depth 1 765 . 771) (nil tag-attr t 765 . 771) (nil tag-name "button" 765 . 771) (nil tag-type start 765 . 771) (nil font-lock-face web-mode-html-attr-name-face 765 . 771) (nil part-side jsx 764 . 765) (nil jsx-depth 1 764 . 765) (nil tag-attr-beg 8 764 . 765) (nil tag-attr t 764 . 765) (nil tag-name "button" 764 . 765) (nil tag-type start 764 . 765) (nil font-lock-face web-mode-html-attr-name-face 764 . 765) (nil part-side jsx 760 . 764) (nil jsx-depth 1 760 . 764) (nil tag-name "button" 760 . 764) (nil tag-type start 760 . 764) (nil part-side jsx 754 . 760) (nil jsx-depth 1 754 . 760) (nil tag-name "button" 754 . 760) (nil tag-type start 754 . 760) (nil font-lock-face web-mode-html-tag-face 754 . 760) (nil part-side jsx 753 . 754) (nil jsx-depth 1 753 . 754) (nil tag-name "button" 753 . 754) (nil tag-type start 753 . 754) (nil tag-beg 17 753 . 754) (nil font-lock-face web-mode-html-tag-bracket-face 753 . 754) (753 . 860)) nil (26130 49377 409908 470000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 119) (undo-tree-id3034 . -1)) ((119 . 120)) (26130 49261 858197 619000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 760) (862 . 869) (853 . 857) (#("  " 0 2 (jsx-depth 1 part-side jsx)) . 853) (844 . 851) (762 . 766) (#("  " 0 2 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 762) 860 (t 26130 49377 451514 634000)) nil (26130 49382 808452 978000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 119) (undo-tree-id3032 . -1)) ((119 . 120)) (26130 49261 534817 62000) 0 nil])
([nil nil ((#("			    <button
				onClick={() =>  navigator.clipboard.writeText('Copy this text to clipboard')}
			    >
				Copy
			    </button>
" 0 7 (jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button" jsx-depth 1 part-side jsx) 8 14 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button" jsx-depth 1 part-side jsx) 14 15 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 15 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 16 19 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 19 20 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 20 26 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 26 27 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 27 28 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 28 55 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 55 64 (face web-mode-function-call-face tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 64 65 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 65 66 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 66 71 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 71 75 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 75 93 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 93 94 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 94 95 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 95 96 (font-lock-face web-mode-block-delimiter-face jsx-end 2 tag-type start tag-name "button" tag-attr-end 11 tag-attr t jsx-depth 2 part-side jsx) 96 97 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 97 98 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 98 99 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 99 100 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr-end 0 tag-attr t jsx-depth 1 part-side jsx) 100 104 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 104 105 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button" jsx-depth 1 part-side jsx) 105 122 (jsx-depth 1 part-side jsx) 122 123 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button" jsx-depth 1 part-side jsx) 123 124 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 124 130 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 130 131 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button" jsx-depth 1 part-side jsx rear-nonsticky t) 131 132 (jsx-depth 1 part-side jsx)) . 746) (undo-tree-id3130 . -130) (undo-tree-id3131 . -131) (undo-tree-id3132 . 1) (undo-tree-id3133 . -130) (undo-tree-id3134 . -14) (undo-tree-id3135 . -7) (undo-tree-id3136 . -130) (undo-tree-id3137 . -130) (undo-tree-id3138 . -23) (undo-tree-id3139 . -23) (undo-tree-id3140 . -23) (undo-tree-id3141 . -130) (undo-tree-id3142 . -14) (undo-tree-id3143 . -130) (undo-tree-id3144 . -14) (undo-tree-id3145 . -132) 760 (t 26130 49382 824851 416000)) nil (26130 49420 284288 69000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 119) (undo-tree-id3030 . -1)) ((119 . 120)) (26130 49260 773380 782000) 0 nil])
([nil nil ((nil rear-nonsticky nil 861 . 862) (nil part-side jsx 861 . 862) (nil jsx-depth 1 861 . 862) (nil tag-name "button" 861 . 862) (nil tag-type end 861 . 862) (nil tag-end t 861 . 862) (nil font-lock-face web-mode-html-tag-bracket-face 861 . 862) (nil part-side jsx 855 . 861) (nil jsx-depth 1 855 . 861) (nil tag-name "button" 855 . 861) (nil tag-type end 855 . 861) (nil font-lock-face web-mode-html-tag-face 855 . 861) (nil part-side jsx 854 . 855) (nil jsx-depth 1 854 . 855) (nil tag-name "button" 854 . 855) (nil tag-type end 854 . 855) (nil font-lock-face web-mode-html-tag-bracket-face 854 . 855) (nil part-side jsx 853 . 854) (nil jsx-depth 1 853 . 854) (nil tag-name "button" 853 . 854) (nil tag-type end 853 . 854) (nil tag-beg 20 853 . 854) (nil font-lock-face web-mode-html-tag-bracket-face 853 . 854) (nil part-side jsx 845 . 853) (nil jsx-depth 1 845 . 853) (nil part-side jsx 844 . 845) (nil jsx-depth 1 844 . 845) (nil tag-name "button" 844 . 845) (nil tag-type start 844 . 845) (nil tag-end t 844 . 845) (nil font-lock-face web-mode-html-tag-bracket-face 844 . 845) (nil part-side jsx 843 . 844) (nil jsx-depth 1 843 . 844) (nil tag-name "button" 843 . 844) (nil tag-type start 843 . 844) (nil part-side jsx 842 . 843) (nil jsx-depth 2 842 . 843) (nil tag-attr t 842 . 843) (nil tag-attr-end 7 842 . 843) (nil tag-name "button" 842 . 843) (nil tag-type start 842 . 843) (nil jsx-end 2 842 . 843) (nil font-lock-face web-mode-block-delimiter-face 842 . 843) (nil part-side jsx 841 . 842) (nil jsx-depth 2 841 . 842) (nil tag-attr t 841 . 842) (nil tag-name "button" 841 . 842) (nil tag-type start 841 . 842) (nil part-side jsx 840 . 841) (nil jsx-depth 2 840 . 841) (nil tag-attr t 840 . 841) (nil tag-name "button" 840 . 841) (nil tag-type start 840 . 841) (nil part-token string 840 . 841) (nil syntax-table (15) 840 . 841) (nil font-lock-face web-mode-javascript-string-face 840 . 841) (nil part-side jsx 822 . 840) (nil jsx-depth 2 822 . 840) (nil tag-attr t 822 . 840) (nil tag-name "button" 822 . 840) (nil tag-type start 822 . 840) (nil part-token string 822 . 840) (nil font-lock-face web-mode-javascript-string-face 822 . 840) (nil part-side jsx 818 . 822) (nil jsx-depth 2 818 . 822) (nil tag-attr t 818 . 822) (nil tag-name "button" 818 . 822) (nil tag-type start 818 . 822) (nil part-token string 818 . 822) (nil font-lock-face web-mode-javascript-string-face 818 . 822) (nil part-side jsx 813 . 818) (nil jsx-depth 2 813 . 818) (nil tag-attr t 813 . 818) (nil tag-name "button" 813 . 818) (nil tag-type start 813 . 818) (nil part-token string 813 . 818) (nil font-lock-face web-mode-javascript-string-face 813 . 818) (nil part-side jsx 812 . 813) (nil jsx-depth 2 812 . 813) (nil tag-attr t 812 . 813) (nil tag-name "button" 812 . 813) (nil tag-type start 812 . 813) (nil part-token string 812 . 813) (nil syntax-table (15) 812 . 813) (nil font-lock-face web-mode-javascript-string-face 812 . 813) (nil part-side jsx 811 . 812) (nil jsx-depth 2 811 . 812) (nil tag-attr t 811 . 812) (nil tag-name "button" 811 . 812) (nil tag-type start 811 . 812) (nil part-side jsx 802 . 811) (nil jsx-depth 2 802 . 811) (nil tag-attr t 802 . 811) (nil tag-name "button" 802 . 811) (nil tag-type start 802 . 811) (nil face web-mode-function-call-face 802 . 811) (nil part-side jsx 775 . 802) (nil jsx-depth 2 775 . 802) (nil tag-attr t 775 . 802) (nil tag-name "button" 775 . 802) (nil tag-type start 775 . 802) (nil part-side jsx 774 . 775) (nil jsx-depth 2 774 . 775) (nil tag-attr t 774 . 775) (nil tag-name "button" 774 . 775) (nil tag-type start 774 . 775) (nil jsx-beg 2 774 . 775) (nil font-lock-face web-mode-block-delimiter-face 774 . 775) (nil part-side jsx 773 . 774) (nil jsx-depth 1 773 . 774) (nil tag-attr t 773 . 774) (nil tag-name "button" 773 . 774) (nil tag-type start 773 . 774) (nil font-lock-face web-mode-html-attr-equal-face 773 . 774) (nil part-side jsx 767 . 773) (nil jsx-depth 1 767 . 773) (nil tag-attr t 767 . 773) (nil tag-name "button" 767 . 773) (nil tag-type start 767 . 773) (nil font-lock-face web-mode-html-attr-name-face 767 . 773) (nil part-side jsx 766 . 767) (nil jsx-depth 1 766 . 767) (nil tag-attr-beg 8 766 . 767) (nil tag-attr t 766 . 767) (nil tag-name "button" 766 . 767) (nil tag-type start 766 . 767) (nil font-lock-face web-mode-html-attr-name-face 766 . 767) (nil part-side jsx 762 . 766) (nil jsx-depth 1 762 . 766) (nil tag-name "button" 762 . 766) (nil tag-type start 762 . 766) (nil part-side jsx 756 . 762) (nil jsx-depth 1 756 . 762) (nil tag-name "button" 756 . 762) (nil tag-type start 756 . 762) (nil font-lock-face web-mode-html-tag-face 756 . 762) (nil part-side jsx 755 . 756) (nil jsx-depth 1 755 . 756) (nil tag-name "button" 755 . 756) (nil tag-type start 755 . 756) (nil tag-beg 17 755 . 756) (nil font-lock-face web-mode-html-tag-bracket-face 755 . 756) (755 . 862) 754 (t 26130 49421 318209 454000)) nil (26130 49428 461879 108000) 0 nil] [nil nil ((nil rear-nonsticky nil 781 . 782) (nil part-side jsx 764 . 782) (nil jsx-depth 1 764 . 782) (nil part-side jsx 760 . 764) (nil jsx-depth 1 760 . 764) (nil part-side jsx 755 . 760) (nil jsx-depth 1 755 . 760) (755 . 782) 754 (t 26130 49394 661525 679000)) ((#("Copy this text to clipboard" 0 5 (jsx-depth 1 part-side jsx) 5 9 (jsx-depth 1 part-side jsx) 9 26 (jsx-depth 1 part-side jsx) 26 27 (jsx-depth 1 part-side jsx rear-nonsticky nil)) . 755) (undo-tree-id3146 . -26) (undo-tree-id3147 . -26) (undo-tree-id3148 . -26) (undo-tree-id3149 . -26) (undo-tree-id3150 . -26) (nil rear-nonsticky t 781 . 782) (t 26130 49420 194875 400000)) (26130 49420 181809 77000) 0 nil])
([nil nil ((119 . 120) (t 26130 49109 214611 292000)) ((#("." 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 119)) (26130 49259 968578 571000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 762) (871 . 874) (859 . 866) (#("  " 0 2 (jsx-depth 1 part-side jsx)) . 859) (848 . 857) (764 . 770) (#("  " 0 2 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 764) 861 (t 26130 49428 474880 714000)) nil (26130 49432 406165 855000) 0 nil])
nil
([nil nil ((791 . 799) (t 26130 49111 411280 243000)) ((#("
			    " 0 8 (jsx-depth 1 part-side jsx)) . 791) (undo-tree-id3111 . -8) (undo-tree-id3112 . -8) (undo-tree-id3113 . -8) (undo-tree-id3114 . -8) (undo-tree-id3115 . -8) (undo-tree-id3116 . -8) (undo-tree-id3117 . -8) (undo-tree-id3118 . -7) (undo-tree-id3119 . -8) (undo-tree-id3120 . -7) (undo-tree-id3121 . -7) (undo-tree-id3122 . -7)) (26130 49259 817911 858000) 0 nil])
([nil nil ((755 . 759)) nil (26130 49432 406162 95000) 0 nil])
([nil nil ((nil rear-nonsticky nil 910 . 911) (nil part-side jsx 910 . 911) (nil jsx-depth 1 910 . 911) (nil tag-name "div" 910 . 911) (nil tag-type end 910 . 911) (nil tag-end t 910 . 911) (nil font-lock-face web-mode-html-tag-bracket-face 910 . 911) (nil part-side jsx 907 . 910) (nil jsx-depth 1 907 . 910) (nil tag-name "div" 907 . 910) (nil tag-type end 907 . 910) (nil font-lock-face web-mode-html-tag-face 907 . 910) (nil part-side jsx 906 . 907) (nil jsx-depth 1 906 . 907) (nil tag-name "div" 906 . 907) (nil tag-type end 906 . 907) (nil font-lock-face web-mode-html-tag-bracket-face 906 . 907) (nil part-side jsx 905 . 906) (nil jsx-depth 1 905 . 906) (nil tag-name "div" 905 . 906) (nil tag-type end 905 . 906) (nil tag-beg 20 905 . 906) (nil font-lock-face web-mode-html-tag-bracket-face 905 . 906) (nil part-side jsx 900 . 905) (nil jsx-depth 1 900 . 905) (nil part-side jsx 899 . 900) (nil jsx-depth 2 899 . 900) (nil jsx-end 2 899 . 900) (nil font-lock-face web-mode-block-delimiter-face 899 . 900) (nil part-side jsx 898 . 899) (nil jsx-depth 2 898 . 899) (nil part-token comment 898 . 899) (nil syntax-table (12) 898 . 899) (nil font-lock-face web-mode-javascript-comment-face 898 . 899) (nil part-side jsx 866 . 898) (nil jsx-depth 2 866 . 898) (nil part-token comment 866 . 898) (nil font-lock-face web-mode-javascript-comment-face 866 . 898) (nil part-side jsx 865 . 866) (nil jsx-depth 2 865 . 866) (nil part-token comment 865 . 866) (nil syntax-table (11) 865 . 866) (nil font-lock-face web-mode-javascript-comment-face 865 . 866) (nil part-side jsx 864 . 865) (nil jsx-depth 2 864 . 865) (nil jsx-beg 2 864 . 865) (nil font-lock-face web-mode-block-delimiter-face 864 . 865) (nil part-side jsx 863 . 864) (nil jsx-depth 1 863 . 864) (nil part-side jsx 862 . 863) (nil jsx-depth 1 862 . 863) (nil tag-name "copycomponent" 862 . 863) (nil tag-type void 862 . 863) (nil tag-end t 862 . 863) (nil font-lock-face web-mode-html-tag-bracket-face 862 . 863) (nil part-side jsx 861 . 862) (nil jsx-depth 1 861 . 862) (nil tag-name "copycomponent" 861 . 862) (nil tag-type void 861 . 862) (nil font-lock-face web-mode-html-tag-bracket-face 861 . 862) (nil part-side jsx 860 . 861) (nil jsx-depth 1 860 . 861) (nil tag-name "copycomponent" 860 . 861) (nil tag-type void 860 . 861) (nil part-side jsx 847 . 860) (nil jsx-depth 1 847 . 860) (nil tag-name "copycomponent" 847 . 860) (nil tag-type void 847 . 860) (nil font-lock-face web-mode-html-tag-face 847 . 860) (nil part-side jsx 846 . 847) (nil jsx-depth 1 846 . 847) (nil tag-name "copycomponent" 846 . 847) (nil tag-type void 846 . 847) (nil tag-beg 24 846 . 847) (nil font-lock-face web-mode-html-tag-bracket-face 846 . 847) (nil part-side jsx 839 . 846) (nil jsx-depth 1 839 . 846) (nil part-side jsx 838 . 839) (nil jsx-depth 1 838 . 839) (nil tag-name "h1" 838 . 839) (nil tag-type end 838 . 839) (nil tag-end t 838 . 839) (nil font-lock-face web-mode-html-tag-bracket-face 838 . 839) (nil part-side jsx 836 . 838) (nil jsx-depth 1 836 . 838) (nil tag-name "h1" 836 . 838) (nil tag-type end 836 . 838) (nil font-lock-face web-mode-html-tag-face 836 . 838) (nil part-side jsx 835 . 836) (nil jsx-depth 1 835 . 836) (nil tag-name "h1" 835 . 836) (nil tag-type end 835 . 836) (nil font-lock-face web-mode-html-tag-bracket-face 835 . 836) (nil part-side jsx 834 . 835) (nil jsx-depth 1 834 . 835) (nil tag-name "h1" 834 . 835) (nil tag-type end 834 . 835) (nil tag-beg 20 834 . 835) (nil font-lock-face web-mode-html-tag-bracket-face 834 . 835) (nil part-side jsx 817 . 834) (nil jsx-depth 1 817 . 834) (nil part-side jsx 816 . 817) (nil jsx-depth 1 816 . 817) (nil tag-name "h1" 816 . 817) (nil tag-type start 816 . 817) (nil tag-end t 816 . 817) (nil font-lock-face web-mode-html-tag-bracket-face 816 . 817) (nil part-side jsx 814 . 816) (nil jsx-depth 1 814 . 816) (nil tag-name "h1" 814 . 816) (nil tag-type start 814 . 816) (nil font-lock-face web-mode-html-tag-face 814 . 816) (nil part-side jsx 813 . 814) (nil jsx-depth 1 813 . 814) (nil tag-name "h1" 813 . 814) (nil tag-type start 813 . 814) (nil tag-beg 16 813 . 814) (nil font-lock-face web-mode-html-tag-bracket-face 813 . 814) (nil part-side jsx 806 . 813) (nil jsx-depth 1 806 . 813) (nil part-side jsx 805 . 806) (nil jsx-depth 1 805 . 806) (nil tag-name "div" 805 . 806) (nil tag-type start 805 . 806) (nil tag-end t 805 . 806) (nil font-lock-face web-mode-html-tag-bracket-face 805 . 806) (nil part-side jsx 802 . 805) (nil jsx-depth 1 802 . 805) (nil tag-name "div" 802 . 805) (nil tag-type start 802 . 805) (nil font-lock-face web-mode-html-tag-face 802 . 805) (nil part-side jsx 801 . 802) (nil jsx-depth 1 801 . 802) (nil tag-name "div" 801 . 802) (nil tag-type start 801 . 802) (nil tag-beg 16 801 . 802) (nil font-lock-face web-mode-html-tag-bracket-face 801 . 802) (nil part-side jsx 799 . 801) (nil jsx-depth 1 799 . 801) (799 . 911)) ((#("  <div>
      <h1>Another Component</h1>
      <CopyComponent /> {/* Using the CopyComponent here */}
    </div>" 0 2 (jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (jsx-depth 1 part-side jsx) 8 14 (jsx-depth 1 part-side jsx) 14 15 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 15 17 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 17 18 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 18 35 (jsx-depth 1 part-side jsx) 35 36 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 36 37 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 37 39 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 39 40 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 40 41 (jsx-depth 1 part-side jsx) 41 47 (jsx-depth 1 part-side jsx) 47 48 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 48 61 (font-lock-face web-mode-html-tag-face tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 61 62 (tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 62 63 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 63 64 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 64 65 (jsx-depth 1 part-side jsx) 65 66 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 66 67 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 67 99 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 99 100 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 100 101 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 101 102 (jsx-depth 1 part-side jsx) 102 106 (jsx-depth 1 part-side jsx) 106 107 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 107 108 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 108 111 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 111 112 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx rear-nonsticky nil)) . 799) (undo-tree-id3102 . -112) (undo-tree-id3103 . -100) (undo-tree-id3104 . -112) (undo-tree-id3105 . -65) (undo-tree-id3106 . -112) (undo-tree-id3107 . -112) (undo-tree-id3108 . -112) (undo-tree-id3109 . -17) (undo-tree-id3110 . -17) (nil tag-name "div" 801 . 802) (nil tag-name "div" 802 . 805) (nil tag-name "div" 805 . 806) (nil tag-name "h1" 813 . 814) (nil tag-name "h1" 814 . 816) (nil tag-name "h1" 816 . 817) (nil tag-name "h1" 834 . 835) (nil tag-name "h1" 835 . 836) (nil tag-name "h1" 836 . 838) (nil tag-name "h1" 838 . 839) (nil tag-name "copycomponent" 846 . 847) (nil tag-name "copycomponent" 847 . 860) (nil tag-name "copycomponent" 860 . 861) (nil tag-name "copycomponent" 861 . 862) (nil tag-name "copycomponent" 862 . 863) (nil syntax-table (11) 865 . 866) (nil syntax-table (12) 898 . 899) (nil tag-name "div" 905 . 906) (nil tag-name "div" 906 . 907) (nil tag-name "div" 907 . 910) (nil tag-name "div" 910 . 911) (nil rear-nonsticky t 910 . 911)) (26130 49259 497846 407000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 766) (#("	" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 766) (#("	" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 766) (#("	" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 766) (#("	" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 766) (#("
" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 766) (t 26130 49432 421549 914000)) nil (26130 49440 355814 817000) 0 nil])
([nil nil ((816 . 827) (t 26130 49142 691312 775000)) ((#(" text-white" 0 1 (tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr-end 0 tag-attr t jsx-depth 1 part-side jsx)) . 816) (undo-tree-id3098 . -11) (undo-tree-id3099 . -1) (undo-tree-id3100 . -11) (undo-tree-id3101 . -1)) (26130 49259 242521 508000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 844) (#(" " 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 844) (#(" " 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 844) (#(" " 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 844) (#(" " 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 844) (#(" " 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 844) (#("	" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 844) (#("	" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 844) (#("	" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 844) (#("
" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 844)) nil (26130 49440 355810 787000) 0 nil])
([nil nil ((817 . 830) (t 26130 49156 361326 989000)) ((#("className=\"\" " 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 1 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 12 13 (tag-type start tag-name "h1" jsx-depth 1 part-side jsx)) . 817) (undo-tree-id3096 . -11) (undo-tree-id3097 . -11)) (26130 49258 937402 285000) 0 nil])
([nil nil ((767 . 780) (t 26130 49440 371555 17000)) nil (26130 49452 209571 57000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "h1" jsx-depth 1 part-side jsx)) . 828) (#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx)) . 828)) ((828 . 829) (828 . 829)) (26130 49258 631585 190000) 0 nil])
([nil nil ((778 . 784) (t 26130 49452 224895 959000)) nil (26130 49455 233104 140000) 0 nil])
([nil nil ((838 . 839)) ((#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx)) . 838)) (26130 49258 221027 249000) 0 nil])
([nil nil ((#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx)) . -783) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) 784) nil (26130 49455 233103 60000) 0 nil])
([nil nil ((#(" " 0 1 (part-side jsx)) . 136) (918 . 925) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 918) (859 . 863) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 859) (805 . 809) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 805) (#("  " 0 2 (jsx-depth 1 part-side jsx)) . -799) 838 (t 26130 49167 4671 391000)) ((799 . 801) (805 . 811) (#("				" 0 4 (jsx-depth 1 part-side jsx)) . 805) (859 . 865) (#("				" 0 4 (jsx-depth 1 part-side jsx)) . 859) (918 . 922) (#("			    " 0 7 (jsx-depth 1 part-side jsx)) . 918) (136 . 137)) (26130 49257 934112 530000) 0 nil])
([nil nil ((783 . 788)) nil (26130 49455 233091 350000) 0 nil])
([nil nil ((#("{/* Using the CopyComponent here */}" 0 1 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 1 2 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 2 34 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 34 35 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 35 36 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx)) . 880) (undo-tree-id3053 . -35)) ((880 . 916)) (26130 49257 621372 293000) 0 nil])
([nil nil ((#("			<button className=\"text-white\" onClick={() =>  navigator.clipboard.writeText('Copy this text to clipboard')}>
			    Copy
			</button>
" 0 3 (jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button" jsx-depth 1 part-side jsx) 4 10 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button" jsx-depth 1 part-side jsx) 10 11 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 12 20 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 20 21 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 21 32 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 32 33 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 33 34 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 34 35 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 8 jsx-depth 1 part-side jsx) 35 41 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 41 42 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 42 43 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 43 44 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 44 45 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 45 46 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 46 47 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 47 48 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 48 70 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 70 79 (face web-mode-function-call-face tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 79 80 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 80 81 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 81 86 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 86 90 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 90 108 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 108 109 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 109 110 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 110 111 (font-lock-face web-mode-block-delimiter-face jsx-end 2 tag-type start tag-name "button" tag-attr-end 7 tag-attr t jsx-depth 2 part-side jsx) 111 112 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button" jsx-depth 1 part-side jsx) 112 128 (jsx-depth 1 part-side jsx) 128 129 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button" jsx-depth 1 part-side jsx) 129 130 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 130 136 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 136 137 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button" jsx-depth 1 part-side jsx rear-nonsticky t) 137 138 (jsx-depth 1 part-side jsx)) . 756) (undo-tree-id3155 . -137) (undo-tree-id3156 . -137) (undo-tree-id3157 . 106) (undo-tree-id3158 . -31) (undo-tree-id3159 . -137) (undo-tree-id3160 . -27) (undo-tree-id3161 . -27) (undo-tree-id3162 . -32) (undo-tree-id3163 . -32) (undo-tree-id3164 . -31) (undo-tree-id3165 . -31) (undo-tree-id3166 . -31) (undo-tree-id3167 . -31) (undo-tree-id3168 . -31) (undo-tree-id3169 . -137) (undo-tree-id3170 . -31) (undo-tree-id3171 . -137) (undo-tree-id3172 . -138) 893 (t 26130 49455 251564 568000)) nil (26130 49460 403189 190000) 0 nil])
([nil nil ((#("				" 0 4 (jsx-depth 1 part-side jsx)) . -881) (undo-tree-id3060 . -4) (undo-tree-id3062 . -4) 885 (880 . 885) (t 26130 49181 21352 636000) 879) ((#("
				" 0 1 (jsx-depth 1 part-side jsx) 1 5 (jsx-depth 1 part-side jsx)) . 880) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (881 . 885)) (26130 49257 301344 982000) 0 nil])
([nil nil ((nil rear-nonsticky nil 785 . 786) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -920) (782 . 921) 781) nil (26130 49460 403171 700000) 0 nil])
([nil nil ((#("			    " 0 7 (jsx-depth 1 part-side jsx)) . -791) (undo-tree-id3072 . -7) (undo-tree-id3074 . -7) 798 (790 . 798) 692) ((#("
			    " 0 1 (jsx-depth 1 part-side jsx) 1 8 (jsx-depth 1 part-side jsx)) . 790) (791 . 798)) (26130 49257 14978 884000) 0 nil] [nil nil ((#("			    " 0 7 (jsx-depth 1 part-side jsx)) . -692) (undo-tree-id3055 . -7) (undo-tree-id3056 . -7) (undo-tree-id3057 . -7) (undo-tree-id3058 . -7) 699 (692 . 699) (692 . 693)) ((#("
" 0 1 (jsx-depth 1 part-side jsx)) . 692) (undo-tree-id3063 . 1) (#("			    " 0 7 (jsx-depth 1 part-side jsx)) . 692) (undo-tree-id3064 . -7) (undo-tree-id3065 . -7) (undo-tree-id3066 . -7) (692 . 699)) (26130 49185 454065 99000) 0 nil])
([nil nil ((#("	" 0 1 (jsx-depth 1 part-side jsx)) . -913) (913 . 914) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 913) (909 . 913) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -902) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -789) (789 . 790) (#("	" 0 1 (jsx-depth 1 part-side jsx rear-nonsticky t)) . 789) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (785 . 789) 786 (t 26130 49460 421567 887000)) nil (26130 49464 276640 332000) 0 nil])
([nil nil ((#("
" 0 1 (jsx-depth 1 part-side jsx)) . 882)) ((882 . 883)) (26130 49256 677863 592000) 0 nil] [nil nil ((#("				<CopyComponent /> 
" 0 4 (jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 5 18 (font-lock-face web-mode-html-tag-face tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 18 19 (tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 19 20 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 20 21 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 21 22 (jsx-depth 1 part-side jsx) 22 23 (jsx-depth 1 part-side jsx)) . 859) (undo-tree-id3067 . -22) (undo-tree-id3068 . -23) (undo-tree-id3069 . -23) (undo-tree-id3070 . -23)) ((859 . 882)) (26130 49187 963528 921000) 0 nil])
nil
([nil nil ((905 . 909) (t 26130 49464 294903 704000)) nil (26130 49497 691556 364000) 0 nil])
([nil nil ((#("			    " 0 7 (jsx-depth 1 part-side jsx)) . -896) (undo-tree-id3076 . -7) (undo-tree-id3078 . -7) 903 (895 . 903) 882) ((#("
			    " 0 1 (jsx-depth 1 part-side jsx) 1 8 (jsx-depth 1 part-side jsx)) . 895) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -8) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (896 . 903)) (26130 49256 306150 403000) 0 nil])
nil
([nil nil ((#("		    <button className=\"text-white\" onClick={() =>  navigator.clipboard.writeText('Copy this text to clipboard')}>
			Copaaaay
		    </button>
" 0 6 (jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button" jsx-depth 1 part-side jsx) 7 13 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button" jsx-depth 1 part-side jsx) 13 14 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 14 15 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 15 23 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 23 24 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 24 35 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 35 36 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 36 37 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 37 38 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 8 jsx-depth 1 part-side jsx) 38 44 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 44 45 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 45 46 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 46 73 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 73 82 (face web-mode-function-call-face tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 82 83 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 83 84 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 84 89 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 89 93 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 93 111 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 111 112 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 112 113 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 113 114 (font-lock-face web-mode-block-delimiter-face jsx-end 2 tag-type start tag-name "button" tag-attr-end 7 tag-attr t jsx-depth 2 part-side jsx) 114 115 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button" jsx-depth 1 part-side jsx) 115 127 (jsx-depth 1 part-side jsx) 127 134 (jsx-depth 1 part-side jsx) 134 135 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button" jsx-depth 1 part-side jsx) 135 136 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 136 142 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 142 143 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button" jsx-depth 1 part-side jsx) 143 144 (jsx-depth 1 part-side jsx)) . 783) (undo-tree-id3199 . -143) (undo-tree-id3200 . -143) (undo-tree-id3201 . 18) (undo-tree-id3202 . -16) (undo-tree-id3203 . -143) (undo-tree-id3204 . -144) (undo-tree-id3205 . -127) (undo-tree-id3206 . -127) (undo-tree-id3207 . -127) (undo-tree-id3208 . -127) (undo-tree-id3209 . -127) (undo-tree-id3210 . -125) (undo-tree-id3211 . -125) (undo-tree-id3212 . -125) (undo-tree-id3213 . -125) (undo-tree-id3214 . -16) (undo-tree-id3215 . -143) (undo-tree-id3216 . -16) (undo-tree-id3217 . -143) (undo-tree-id3218 . -144) 926 (t 26130 49498 714925 795000)) nil (26130 49504 648676 738000) 0 nil] [nil nil ((nil rear-nonsticky nil 913 . 914) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -922) (910 . 923) 908) ((#("
			Copaaaay
" 0 1 (jsx-depth 1 part-side jsx) 1 3 (jsx-depth 1 part-side jsx) 3 4 (jsx-depth 1 part-side jsx rear-nonsticky nil) 4 12 (jsx-depth 1 part-side jsx) 12 13 (jsx-depth 1 part-side jsx)) . 910) (undo-tree-id3191 . -12) (undo-tree-id3192 . -12) (undo-tree-id3193 . -12) (undo-tree-id3194 . -12) (undo-tree-id3195 . -4) (undo-tree-id3196 . -4) (undo-tree-id3197 . -4) (undo-tree-id3198 . -4) (922 . 923) (nil rear-nonsticky t 913 . 914)) (26130 49497 518386 68000) 0 nil])
([nil nil ((#(" " 0 1 (jsx-depth 1 part-side jsx)) . 880) 896) ((880 . 881) (t 26130 49191 591363 627000)) (26130 49191 565365 94000) 0 nil])
([nil nil ((nil rear-nonsticky nil 751 . 752) (746 . 890) 749) nil (26130 49504 648657 948000) 0 nil])
([nil nil ((nil rear-nonsticky nil 925 . 926) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -934) (922 . 935) 914) ((#("
			Copaaaay
" 0 1 (jsx-depth 1 part-side jsx) 1 3 (jsx-depth 1 part-side jsx) 3 4 (jsx-depth 1 part-side jsx rear-nonsticky nil) 4 12 (jsx-depth 1 part-side jsx) 12 13 (jsx-depth 1 part-side jsx)) . 922) (undo-tree-id3185 . -12) (undo-tree-id3186 . -12) (undo-tree-id3187 . -4) (undo-tree-id3188 . -4) (undo-tree-id3189 . -4) (undo-tree-id3190 . -4) (934 . 935) (nil rear-nonsticky t 925 . 926)) (26130 49497 346335 233000) 0 nil])
nil
([nil nil ((878 . 883) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 878) (866 . 867) (748 . 753) (#("    " 0 3 (jsx-depth 1 part-side jsx) 3 4 (jsx-depth 1 part-side jsx rear-nonsticky t)) . 748) (undo-tree-id3219 . -4) (undo-tree-id3220 . -4) (undo-tree-id3221 . -4) (undo-tree-id3222 . -4) (undo-tree-id3223 . -4) 752 (t 26130 49504 664929 616000)) nil (26130 49513 222544 25000) 0 nil])
([nil nil ((nil rear-nonsticky nil 937 . 938) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -946) (934 . 947) 926) ((#("
			Copaaaay
" 0 1 (jsx-depth 1 part-side jsx) 1 3 (jsx-depth 1 part-side jsx) 3 4 (jsx-depth 1 part-side jsx rear-nonsticky nil) 4 12 (jsx-depth 1 part-side jsx) 12 13 (jsx-depth 1 part-side jsx)) . 934) (undo-tree-id3181 . -12) (undo-tree-id3182 . -4) (undo-tree-id3183 . -4) (undo-tree-id3184 . -4) (946 . 947) (nil rear-nonsticky t 937 . 938)) (26130 49497 10466 407000) 0 nil])
([nil nil ((746 . 753) (746 . 747) 748 (t 26130 49513 238268 452000)) nil (26130 49516 42276 377000) 0 nil])
([nil nil ((nil rear-nonsticky nil 949 . 950) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -958) (946 . 959) 938) ((#("
			Copaaaay
" 0 1 (jsx-depth 1 part-side jsx) 1 3 (jsx-depth 1 part-side jsx) 3 4 (jsx-depth 1 part-side jsx rear-nonsticky nil) 4 12 (jsx-depth 1 part-side jsx) 12 13 (jsx-depth 1 part-side jsx)) . 946) (undo-tree-id3180 . -12) (958 . 959) (nil rear-nonsticky t 949 . 950) (t 26130 49492 941588 758000)) (26130 49491 903340 459000) 0 nil])
([nil nil ((753 . 755)) nil (26130 49516 42275 847000) 0 nil])
([nil nil ((458 . 459) (#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 458) (t 26130 49478 748246 314000)) ((458 . 459) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 458)) (26130 49491 497927 840000) 0 nil])
([nil nil ((753 . 758) (#("br" 0 2 (jsx-depth 1 part-side jsx)) . -753) (undo-tree-id3224 . -2) (undo-tree-id3225 . -2) (undo-tree-id3226 . -2) (undo-tree-id3227 . -2) (undo-tree-id3228 . -2) (undo-tree-id3229 . -2) 755) nil (26130 49516 42273 407000) 0 nil])
([nil nil ((458 . 459) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 458) (undo-tree-id3179 . -1) (t 26130 49487 224918 422000)) ((458 . 459) (#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 458) (t 26130 49490 234920 352000)) (26130 49490 213435 569000) 0 nil])
([nil nil ((#("			    <button className=\"text-white\" onClick={() =>  navigator.clipboard.writeText('Copy this text to clipboard')}>
				Copaaaay
			    </button>
" 0 7 (jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button" jsx-depth 1 part-side jsx) 8 14 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button" jsx-depth 1 part-side jsx) 14 15 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 15 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 16 24 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 24 25 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 25 36 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 36 37 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 37 38 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 38 39 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 8 jsx-depth 1 part-side jsx) 39 45 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 45 46 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 46 47 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 47 74 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 74 83 (face web-mode-function-call-face tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 83 84 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 84 85 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 85 90 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 90 94 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 94 112 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 112 113 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 113 114 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 114 115 (font-lock-face web-mode-block-delimiter-face jsx-end 2 tag-type start tag-name "button" tag-attr-end 7 tag-attr t jsx-depth 2 part-side jsx) 115 116 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button" jsx-depth 1 part-side jsx) 116 137 (jsx-depth 1 part-side jsx) 137 138 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button" jsx-depth 1 part-side jsx) 138 139 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 139 145 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 145 146 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button" jsx-depth 1 part-side jsx) 146 147 (jsx-depth 1 part-side jsx)) . 759) (undo-tree-id3230 . -146) (undo-tree-id3231 . -146) (undo-tree-id3232 . -24) (undo-tree-id3233 . -146) (undo-tree-id3234 . -24) (undo-tree-id3235 . -24) (undo-tree-id3236 . -24) (undo-tree-id3237 . -24) (undo-tree-id3238 . -129) (undo-tree-id3239 . -129) (undo-tree-id3240 . -146) (undo-tree-id3241 . -146) (undo-tree-id3242 . -146) (undo-tree-id3243 . -146) (undo-tree-id3244 . -147) 905 (t 26130 49516 58270 260000)) nil (26130 49541 452628 335000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 775 . 776) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -915) (768 . 916) 767) nil (26130 49541 452614 65000) 0 nil])
([nil nil ((#("			    <button className=\"text-white\" onClick={() =>  navigator.clipboard.writeText('Copy this text to clipboard')}>
				Copaaaay
			    </button>
" 0 6 (jsx-depth 1 part-side jsx) 6 7 (jsx-depth 1 part-side jsx rear-nonsticky t) 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button" jsx-depth 1 part-side jsx) 8 14 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button" jsx-depth 1 part-side jsx) 14 15 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 15 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 16 24 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 24 25 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 25 36 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 36 37 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 37 38 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 38 39 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 8 jsx-depth 1 part-side jsx) 39 45 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 45 46 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 46 47 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 47 74 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 74 83 (face web-mode-function-call-face tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 83 84 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 84 85 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 85 90 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 90 94 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 94 112 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 112 113 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 113 114 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 114 115 (font-lock-face web-mode-block-delimiter-face jsx-end 2 tag-type start tag-name "button" tag-attr-end 7 tag-attr t jsx-depth 2 part-side jsx) 115 116 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button" jsx-depth 1 part-side jsx) 116 137 (jsx-depth 1 part-side jsx) 137 138 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button" jsx-depth 1 part-side jsx) 138 139 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 139 145 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 145 146 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button" jsx-depth 1 part-side jsx) 146 147 (jsx-depth 1 part-side jsx)) . 769) (undo-tree-id3245 . -137) (undo-tree-id3246 . -146) (undo-tree-id3247 . -7) (undo-tree-id3248 . -137) (undo-tree-id3249 . -7) (undo-tree-id3250 . -7) (undo-tree-id3251 . -7) (undo-tree-id3252 . -7) (undo-tree-id3253 . -7) (undo-tree-id3254 . -137) (undo-tree-id3255 . -7) (undo-tree-id3256 . -137) (undo-tree-id3257 . -147) 906 (t 26130 49541 468286 569000)) nil (26130 49551 238435 625000) 0 nil])
([nil nil ((nil rear-nonsticky nil 802 . 803) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -942) (795 . 943) 794) nil (26130 49551 238417 875000) 0 nil])
([nil nil ((#("			    <button className=\"text-white\" onClick={() =>  navigator.clipboard.writeText('Copy this text to clipboard')}>
				Copaaaay
			    </button>
" 0 6 (jsx-depth 1 part-side jsx) 6 7 (jsx-depth 1 part-side jsx rear-nonsticky t) 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button" jsx-depth 1 part-side jsx) 8 14 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button" jsx-depth 1 part-side jsx) 14 15 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 15 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 16 24 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 24 25 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 25 36 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 36 37 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 37 38 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 38 39 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 8 jsx-depth 1 part-side jsx) 39 45 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 45 46 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 46 47 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 47 74 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 74 83 (face web-mode-function-call-face tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 83 84 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 84 85 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 85 90 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 90 94 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 94 112 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 112 113 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 113 114 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 114 115 (font-lock-face web-mode-block-delimiter-face jsx-end 2 tag-type start tag-name "button" tag-attr-end 7 tag-attr t jsx-depth 2 part-side jsx) 115 116 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button" jsx-depth 1 part-side jsx) 116 137 (jsx-depth 1 part-side jsx) 137 138 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button" jsx-depth 1 part-side jsx) 138 139 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 139 145 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 145 146 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button" jsx-depth 1 part-side jsx) 146 147 (jsx-depth 1 part-side jsx)) . 796) (undo-tree-id3258 . -137) (undo-tree-id3259 . -146) (undo-tree-id3260 . -7) (undo-tree-id3261 . -137) (undo-tree-id3262 . -147) (undo-tree-id3263 . -147) (undo-tree-id3264 . -7) (undo-tree-id3265 . -7) (undo-tree-id3266 . -7) (undo-tree-id3267 . -7) (undo-tree-id3268 . -7) (undo-tree-id3269 . -137) (undo-tree-id3270 . -7) (undo-tree-id3271 . -137) (undo-tree-id3272 . -147) 933 (t 26130 49551 254959 518000)) nil (26130 49572 549882 569000) 0 nil])
([nil nil ((450 . 459) (t 26130 49573 628307 211000)) nil (26130 49596 341962 883000) 0 nil] [nil nil ((nil rear-nonsticky nil 527 . 528) (521 . 668) 524) ((#("			    <button className=\"text-white\" onClick={() =>  navigator.clipboard.writeText('Copy this text to clipboard')}>
				Copaaaay
			    </button>
" 0 6 (jsx-depth 1 part-side jsx) 6 7 (jsx-depth 1 part-side jsx rear-nonsticky nil) 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button" jsx-depth 1 part-side jsx) 8 14 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button" jsx-depth 1 part-side jsx) 14 15 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 15 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 16 24 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 24 25 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 25 36 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 36 37 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 37 38 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 38 39 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 8 jsx-depth 1 part-side jsx) 39 45 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 45 46 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 46 47 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 47 74 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 74 83 (face web-mode-function-call-face tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 83 84 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 84 85 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 85 90 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 90 94 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 94 112 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 112 113 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 113 114 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 114 115 (font-lock-face web-mode-block-delimiter-face jsx-end 2 tag-type start tag-name "button" tag-attr-end 7 tag-attr t jsx-depth 2 part-side jsx) 115 116 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button" jsx-depth 1 part-side jsx) 116 137 (jsx-depth 1 part-side jsx) 137 138 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button" jsx-depth 1 part-side jsx) 138 139 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 139 145 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 145 146 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button" jsx-depth 1 part-side jsx) 146 147 (jsx-depth 1 part-side jsx)) . 521) (undo-tree-id3280 . -147) (undo-tree-id3281 . -146) (undo-tree-id3282 . -7) (undo-tree-id3283 . -7) (undo-tree-id3284 . -7) (undo-tree-id3285 . -7) (undo-tree-id3286 . -7) (undo-tree-id3287 . -7) (nil rear-nonsticky t 527 . 528) (t 26130 49562 88299 802000)) (26130 49562 70861 693000) 0 nil] [nil nil ((nil rear-nonsticky nil 814 . 815) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -954) (807 . 955) 806) ((#("
			    <button className=\"text-white\" onClick={() =>  navigator.clipboard.writeText('Copy this text to clipboard')}>
				Copaaaay
			    </button>
" 0 1 (jsx-depth 1 part-side jsx) 1 7 (jsx-depth 1 part-side jsx) 7 8 (jsx-depth 1 part-side jsx rear-nonsticky nil) 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button" jsx-depth 1 part-side jsx) 9 15 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button" jsx-depth 1 part-side jsx) 15 16 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 17 25 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 25 26 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 26 37 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 37 38 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 38 39 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 39 40 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 8 jsx-depth 1 part-side jsx) 40 46 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 46 47 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 47 48 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 48 75 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 75 84 (face web-mode-function-call-face tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 84 85 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 85 86 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 86 91 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 91 95 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 95 113 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 113 114 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 114 115 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 115 116 (font-lock-face web-mode-block-delimiter-face jsx-end 2 tag-type start tag-name "button" tag-attr-end 7 tag-attr t jsx-depth 2 part-side jsx) 116 117 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button" jsx-depth 1 part-side jsx) 117 138 (jsx-depth 1 part-side jsx) 138 139 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button" jsx-depth 1 part-side jsx) 139 140 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 140 146 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 146 147 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button" jsx-depth 1 part-side jsx) 147 148 (jsx-depth 1 part-side jsx)) . 807) (undo-tree-id3273 . -147) (undo-tree-id3274 . -147) (undo-tree-id3275 . -1) (undo-tree-id3276 . -8) (undo-tree-id3277 . -8) (undo-tree-id3278 . -8) (undo-tree-id3279 . -8) (954 . 955) (nil rear-nonsticky t 814 . 815) (t 26130 49556 791629 736000)) (26130 49556 775375 838000) 0 nil])
([nil nil ((#("			    " 0 7 (jsx-depth 1 part-side jsx)) . -768) (undo-tree-id3291 . -7) (undo-tree-id3292 . -7) (undo-tree-id3293 . -7) (undo-tree-id3294 . -7) 775 (767 . 775) (t 26130 49590 441651 335000) 766) nil (26130 49602 189646 926000) 0 nil] [nil nil ((nil rear-nonsticky nil 793 . 794) (nil part-side jsx 776 . 794) (nil jsx-depth 1 776 . 794) (nil part-side jsx 772 . 776) (nil jsx-depth 1 772 . 776) (nil part-side jsx 767 . 772) (nil jsx-depth 1 767 . 772) (767 . 794) 766 (t 26130 49590 441651 335000)) ((#("Copy this text to clipboard" 0 5 (jsx-depth 1 part-side jsx) 5 9 (jsx-depth 1 part-side jsx) 9 26 (jsx-depth 1 part-side jsx) 26 27 (jsx-depth 1 part-side jsx rear-nonsticky nil)) . 767) (undo-tree-id3288 . -26) (undo-tree-id3289 . -26) (undo-tree-id3290 . -26) (nil rear-nonsticky t 793 . 794)) (26130 49596 339222 49000) 0 nil])
nil
nil
([nil nil ((nil rear-nonsticky nil 874 . 875) (nil part-side jsx 874 . 875) (nil jsx-depth 1 874 . 875) (nil tag-name "button" 874 . 875) (nil tag-type end 874 . 875) (nil tag-end t 874 . 875) (nil font-lock-face web-mode-html-tag-bracket-face 874 . 875) (nil part-side jsx 868 . 874) (nil jsx-depth 1 868 . 874) (nil tag-name "button" 868 . 874) (nil tag-type end 868 . 874) (nil font-lock-face web-mode-html-tag-face 868 . 874) (nil part-side jsx 867 . 868) (nil jsx-depth 1 867 . 868) (nil tag-name "button" 867 . 868) (nil tag-type end 867 . 868) (nil font-lock-face web-mode-html-tag-bracket-face 867 . 868) (nil part-side jsx 866 . 867) (nil jsx-depth 1 866 . 867) (nil tag-name "button" 866 . 867) (nil tag-type end 866 . 867) (nil tag-beg 20 866 . 867) (nil font-lock-face web-mode-html-tag-bracket-face 866 . 867) (nil part-side jsx 858 . 866) (nil jsx-depth 1 858 . 866) (nil part-side jsx 857 . 858) (nil jsx-depth 1 857 . 858) (nil tag-name "button" 857 . 858) (nil tag-type start 857 . 858) (nil tag-end t 857 . 858) (nil font-lock-face web-mode-html-tag-bracket-face 857 . 858) (nil part-side jsx 856 . 857) (nil jsx-depth 1 856 . 857) (nil tag-name "button" 856 . 857) (nil tag-type start 856 . 857) (nil part-side jsx 855 . 856) (nil jsx-depth 2 855 . 856) (nil tag-attr t 855 . 856) (nil tag-attr-end 7 855 . 856) (nil tag-name "button" 855 . 856) (nil tag-type start 855 . 856) (nil jsx-end 2 855 . 856) (nil font-lock-face web-mode-block-delimiter-face 855 . 856) (nil part-side jsx 854 . 855) (nil jsx-depth 2 854 . 855) (nil tag-attr t 854 . 855) (nil tag-name "button" 854 . 855) (nil tag-type start 854 . 855) (nil part-side jsx 853 . 854) (nil jsx-depth 2 853 . 854) (nil tag-attr t 853 . 854) (nil tag-name "button" 853 . 854) (nil tag-type start 853 . 854) (nil part-token string 853 . 854) (nil syntax-table (15) 853 . 854) (nil font-lock-face web-mode-javascript-string-face 853 . 854) (nil part-side jsx 835 . 853) (nil jsx-depth 2 835 . 853) (nil tag-attr t 835 . 853) (nil tag-name "button" 835 . 853) (nil tag-type start 835 . 853) (nil part-token string 835 . 853) (nil font-lock-face web-mode-javascript-string-face 835 . 853) (nil part-side jsx 831 . 835) (nil jsx-depth 2 831 . 835) (nil tag-attr t 831 . 835) (nil tag-name "button" 831 . 835) (nil tag-type start 831 . 835) (nil part-token string 831 . 835) (nil font-lock-face web-mode-javascript-string-face 831 . 835) (nil part-side jsx 826 . 831) (nil jsx-depth 2 826 . 831) (nil tag-attr t 826 . 831) (nil tag-name "button" 826 . 831) (nil tag-type start 826 . 831) (nil part-token string 826 . 831) (nil font-lock-face web-mode-javascript-string-face 826 . 831) (nil part-side jsx 825 . 826) (nil jsx-depth 2 825 . 826) (nil tag-attr t 825 . 826) (nil tag-name "button" 825 . 826) (nil tag-type start 825 . 826) (nil part-token string 825 . 826) (nil syntax-table (15) 825 . 826) (nil font-lock-face web-mode-javascript-string-face 825 . 826) (nil part-side jsx 824 . 825) (nil jsx-depth 2 824 . 825) (nil tag-attr t 824 . 825) (nil tag-name "button" 824 . 825) (nil tag-type start 824 . 825) (nil part-side jsx 815 . 824) (nil jsx-depth 2 815 . 824) (nil tag-attr t 815 . 824) (nil tag-name "button" 815 . 824) (nil tag-type start 815 . 824) (nil face web-mode-function-call-face 815 . 824) (nil part-side jsx 788 . 815) (nil jsx-depth 2 788 . 815) (nil tag-attr t 788 . 815) (nil tag-name "button" 788 . 815) (nil tag-type start 788 . 815) (nil part-side jsx 787 . 788) (nil jsx-depth 2 787 . 788) (nil tag-attr t 787 . 788) (nil tag-name "button" 787 . 788) (nil tag-type start 787 . 788) (nil jsx-beg 2 787 . 788) (nil font-lock-face web-mode-block-delimiter-face 787 . 788) (nil part-side jsx 786 . 787) (nil jsx-depth 1 786 . 787) (nil tag-attr t 786 . 787) (nil tag-name "button" 786 . 787) (nil tag-type start 786 . 787) (nil font-lock-face web-mode-html-attr-equal-face 786 . 787) (nil part-side jsx 780 . 786) (nil jsx-depth 1 780 . 786) (nil tag-attr t 780 . 786) (nil tag-name "button" 780 . 786) (nil tag-type start 780 . 786) (nil font-lock-face web-mode-html-attr-name-face 780 . 786) (nil part-side jsx 779 . 780) (nil jsx-depth 1 779 . 780) (nil tag-attr-beg 8 779 . 780) (nil tag-attr t 779 . 780) (nil tag-name "button" 779 . 780) (nil tag-type start 779 . 780) (nil font-lock-face web-mode-html-attr-name-face 779 . 780) (nil part-side jsx 775 . 779) (nil jsx-depth 1 775 . 779) (nil tag-name "button" 775 . 779) (nil tag-type start 775 . 779) (nil part-side jsx 769 . 775) (nil jsx-depth 1 769 . 775) (nil tag-name "button" 769 . 775) (nil tag-type start 769 . 775) (nil font-lock-face web-mode-html-tag-face 769 . 775) (nil part-side jsx 768 . 769) (nil jsx-depth 1 768 . 769) (nil tag-name "button" 768 . 769) (nil tag-type start 768 . 769) (nil tag-beg 17 768 . 769) (nil font-lock-face web-mode-html-tag-bracket-face 768 . 769) (768 . 875)) nil (26130 49602 189635 146000) 0 nil])
nil
([nil nil ((#("<button 
  onClick={() =>  navigator.clipboard.writeText('Copy this text to clipboard')}
>
  Copy
</button>
" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button" jsx-depth 1 part-side jsx) 1 7 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button" jsx-depth 1 part-side jsx) 7 11 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 8 jsx-depth 1 part-side jsx) 12 18 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 18 19 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 19 20 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 20 47 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 47 56 (face web-mode-function-call-face tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 56 57 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 57 58 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 58 63 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 63 67 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 67 85 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 85 86 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 86 87 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 87 88 (font-lock-face web-mode-block-delimiter-face jsx-end 2 tag-type start tag-name "button" tag-attr-end 7 tag-attr t jsx-depth 2 part-side jsx) 88 89 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 89 90 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button" jsx-depth 1 part-side jsx) 90 98 (jsx-depth 1 part-side jsx) 98 99 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button" jsx-depth 1 part-side jsx) 99 100 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 100 106 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 106 107 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button" jsx-depth 1 part-side jsx rear-nonsticky t) 107 108 (jsx-depth 1 part-side jsx)) . 768) (undo-tree-id3295 . -106) (undo-tree-id3296 . -107) (undo-tree-id3297 . 1) (undo-tree-id3298 . -106) (undo-tree-id3299 . -8) (undo-tree-id3300 . -106) (undo-tree-id3301 . -106) (undo-tree-id3302 . -106) (undo-tree-id3303 . -106) (undo-tree-id3304 . -106) (undo-tree-id3305 . -8) (undo-tree-id3306 . -106) (undo-tree-id3307 . -8) (undo-tree-id3308 . -108) 776 (t 26130 49602 208325 553000)) nil (26130 49614 289659 690000) 0 nil])
([nil nil ((nil rear-nonsticky nil 777 . 778) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -885) (777 . 886) 769) nil (26130 49615 857518 849000) 0 nil] [nil nil ((768 . 876) 769) ((#("<button 
  onClick={() =>  navigator.clipboard.writeText('Copy this text to clipboard')}
>
  Copy
</button>
" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button" jsx-depth 1 part-side jsx) 1 7 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button" jsx-depth 1 part-side jsx) 7 11 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 8 jsx-depth 1 part-side jsx) 12 18 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 18 19 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 19 20 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 20 47 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 47 56 (face web-mode-function-call-face tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 56 57 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 57 58 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 58 63 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 63 67 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 67 85 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 85 86 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 86 87 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 87 88 (font-lock-face web-mode-block-delimiter-face jsx-end 2 tag-type start tag-name "button" tag-attr-end 7 tag-attr t jsx-depth 2 part-side jsx) 88 89 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 89 90 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button" jsx-depth 1 part-side jsx) 90 98 (jsx-depth 1 part-side jsx) 98 99 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button" jsx-depth 1 part-side jsx) 99 100 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 100 106 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 106 107 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button" jsx-depth 1 part-side jsx) 107 108 (jsx-depth 1 part-side jsx)) . 768) (undo-tree-id3316 . -108) (undo-tree-id3317 . -107)) (26130 49614 288170 448000) 0 nil] [nil nil ((768 . 876) 769) ((#("<button 
  onClick={() =>  navigator.clipboard.writeText('Copy this text to clipboard')}
>
  Copy
</button>
" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button" jsx-depth 1 part-side jsx) 1 7 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button" jsx-depth 1 part-side jsx) 7 11 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 8 jsx-depth 1 part-side jsx) 12 18 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 18 19 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 19 20 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 20 47 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 47 56 (face web-mode-function-call-face tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 56 57 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 57 58 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 58 63 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 63 67 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 67 85 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 85 86 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 86 87 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 87 88 (font-lock-face web-mode-block-delimiter-face jsx-end 2 tag-type start tag-name "button" tag-attr-end 7 tag-attr t jsx-depth 2 part-side jsx) 88 89 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 89 90 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button" jsx-depth 1 part-side jsx) 90 98 (jsx-depth 1 part-side jsx) 98 99 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button" jsx-depth 1 part-side jsx) 99 100 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 100 106 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 106 107 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button" jsx-depth 1 part-side jsx) 107 108 (jsx-depth 1 part-side jsx)) . 768) (undo-tree-id3314 . -108) (undo-tree-id3315 . -107)) (26130 49613 174534 380000) 0 nil] [nil nil ((nil rear-nonsticky nil 804 . 805) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -912) (804 . 913) 786) ((#("
<button 
  onClick={() =>  navigator.clipboard.writeText('Copy this text to clipboard')}
>
  Copy
</button>
" 0 1 (jsx-depth 1 part-side jsx rear-nonsticky nil) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button" jsx-depth 1 part-side jsx) 2 8 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button" jsx-depth 1 part-side jsx) 8 12 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 12 13 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 8 jsx-depth 1 part-side jsx) 13 19 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 19 20 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 20 21 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 21 48 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 48 57 (face web-mode-function-call-face tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 57 58 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 58 59 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 59 64 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 64 68 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 68 86 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 86 87 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 87 88 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 88 89 (font-lock-face web-mode-block-delimiter-face jsx-end 2 tag-type start tag-name "button" tag-attr-end 7 tag-attr t jsx-depth 2 part-side jsx) 89 90 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 90 91 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button" jsx-depth 1 part-side jsx) 91 99 (jsx-depth 1 part-side jsx) 99 100 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button" jsx-depth 1 part-side jsx) 100 101 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 101 107 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 107 108 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button" jsx-depth 1 part-side jsx) 108 109 (jsx-depth 1 part-side jsx)) . 804) (undo-tree-id3309 . -108) (undo-tree-id3310 . -108) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (912 . 913) (nil rear-nonsticky t 804 . 805)) (26130 49611 494664 194000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 788) (892 . 895) (880 . 887) (#("  " 0 2 (jsx-depth 1 part-side jsx)) . 880) (875 . 878) (790 . 797) (#("  " 0 2 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 790) (778 . 781) 886 (t 26130 49615 875000 993000)) nil (26130 49642 559202 869000) 0 nil])
nil
nil
nil
([nil nil ((788 . 789) (#(" " 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 788) (#(" " 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 788) (#(" " 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 788) (#(" " 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 788) (#("	" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 788) (#("	" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 788) (#("	" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 788) (#("
" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 788)) nil (26130 49642 559201 359000) 0 nil])
([nil nil ((#("	" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 866) (#("	" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 866) (#("	" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 866) (#("
" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 866)) nil (26130 49642 559197 669000) 0 nil])
([nil nil ((#("			<button onClick={() =>  navigator.clipboard.writeText('Copy this text to clipboard')}>
			    Copy
			</button>
" 0 3 (jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button" jsx-depth 1 part-side jsx) 4 10 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button" jsx-depth 1 part-side jsx) 10 11 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 8 jsx-depth 1 part-side jsx) 12 18 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 18 19 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 19 20 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 20 23 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 23 24 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 24 25 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 25 47 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 47 56 (face web-mode-function-call-face tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 56 57 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 57 58 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 58 63 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 63 67 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 67 85 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 85 86 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 86 87 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 87 88 (font-lock-face web-mode-block-delimiter-face jsx-end 2 tag-type start tag-name "button" tag-attr-end 7 tag-attr t jsx-depth 2 part-side jsx) 88 89 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button" jsx-depth 1 part-side jsx) 89 105 (jsx-depth 1 part-side jsx) 105 106 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button" jsx-depth 1 part-side jsx) 106 107 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 107 113 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 113 114 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button" jsx-depth 1 part-side jsx) 114 115 (jsx-depth 1 part-side jsx)) . 778) (undo-tree-id3318 . -114) (undo-tree-id3319 . -114) (undo-tree-id3320 . 27) (undo-tree-id3321 . -87) (undo-tree-id3322 . -114) (undo-tree-id3323 . -100) (undo-tree-id3324 . -100) (undo-tree-id3325 . -87) (undo-tree-id3326 . -114) (undo-tree-id3327 . -87) (undo-tree-id3328 . -114) (undo-tree-id3329 . -115) 892 (t 26130 49642 578351 465000)) nil (26130 49661 267071 119000) 0 nil])
([nil nil ((#("row" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 456) (undo-tree-id3336 . -2) (undo-tree-id3337 . -3) (undo-tree-id3338 . -3)) nil (26130 49667 51639 449000) 0 nil] [nil nil ((805 . 920) 815 (t 26130 49653 585025 195000)) ((#("			<button onClick={() =>  navigator.clipboard.writeText('Copy this text to clipboard')}>
			    Copy
			</button>
" 0 3 (jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button" jsx-depth 1 part-side jsx) 4 10 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button" jsx-depth 1 part-side jsx) 10 11 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 8 jsx-depth 1 part-side jsx) 12 18 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 18 19 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 19 20 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 20 47 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 47 56 (face web-mode-function-call-face tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 56 57 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 57 58 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 58 63 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 63 67 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 67 85 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 85 86 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 86 87 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 87 88 (font-lock-face web-mode-block-delimiter-face jsx-end 2 tag-type start tag-name "button" tag-attr-end 7 tag-attr t jsx-depth 2 part-side jsx) 88 89 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button" jsx-depth 1 part-side jsx) 89 105 (jsx-depth 1 part-side jsx) 105 106 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button" jsx-depth 1 part-side jsx) 106 107 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 107 113 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 113 114 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button" jsx-depth 1 part-side jsx) 114 115 (jsx-depth 1 part-side jsx)) . 805) (undo-tree-id3330 . -115) (undo-tree-id3331 . -114) (undo-tree-id3332 . -3) (undo-tree-id3333 . -3) (undo-tree-id3334 . -3) (undo-tree-id3335 . -3) (t 26130 49659 761695 825000)) (26130 49659 745030 648000) 0 nil])
([nil nil ((456 . 459)) nil (26130 49674 826483 744000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 883 . 884) (nil part-side jsx 883 . 884) (nil jsx-depth 1 883 . 884) (nil tag-name "button" 883 . 884) (nil tag-type end 883 . 884) (nil tag-end t 883 . 884) (nil font-lock-face web-mode-html-tag-bracket-face 883 . 884) (nil part-side jsx 877 . 883) (nil jsx-depth 1 877 . 883) (nil tag-name "button" 877 . 883) (nil tag-type end 877 . 883) (nil font-lock-face web-mode-html-tag-face 877 . 883) (nil part-side jsx 876 . 877) (nil jsx-depth 1 876 . 877) (nil tag-name "button" 876 . 877) (nil tag-type end 876 . 877) (nil font-lock-face web-mode-html-tag-bracket-face 876 . 877) (nil part-side jsx 875 . 876) (nil jsx-depth 1 875 . 876) (nil tag-name "button" 875 . 876) (nil tag-type end 875 . 876) (nil tag-beg 20 875 . 876) (nil font-lock-face web-mode-html-tag-bracket-face 875 . 876) (nil part-side jsx 867 . 875) (nil jsx-depth 1 867 . 875) (nil part-side jsx 866 . 867) (nil jsx-depth 1 866 . 867) (nil tag-name "button" 866 . 867) (nil tag-type start 866 . 867) (nil tag-end t 866 . 867) (nil font-lock-face web-mode-html-tag-bracket-face 866 . 867) (nil part-side jsx 865 . 866) (nil jsx-depth 1 865 . 866) (nil tag-name "button" 865 . 866) (nil tag-type start 865 . 866) (nil part-side jsx 864 . 865) (nil jsx-depth 2 864 . 865) (nil tag-attr t 864 . 865) (nil tag-attr-end 7 864 . 865) (nil tag-name "button" 864 . 865) (nil tag-type start 864 . 865) (nil jsx-end 2 864 . 865) (nil font-lock-face web-mode-block-delimiter-face 864 . 865) (nil part-side jsx 863 . 864) (nil jsx-depth 2 863 . 864) (nil tag-attr t 863 . 864) (nil tag-name "button" 863 . 864) (nil tag-type start 863 . 864) (nil part-side jsx 862 . 863) (nil jsx-depth 2 862 . 863) (nil tag-attr t 862 . 863) (nil tag-name "button" 862 . 863) (nil tag-type start 862 . 863) (nil part-token string 862 . 863) (nil syntax-table (15) 862 . 863) (nil font-lock-face web-mode-javascript-string-face 862 . 863) (nil part-side jsx 844 . 862) (nil jsx-depth 2 844 . 862) (nil tag-attr t 844 . 862) (nil tag-name "button" 844 . 862) (nil tag-type start 844 . 862) (nil part-token string 844 . 862) (nil font-lock-face web-mode-javascript-string-face 844 . 862) (nil part-side jsx 840 . 844) (nil jsx-depth 2 840 . 844) (nil tag-attr t 840 . 844) (nil tag-name "button" 840 . 844) (nil tag-type start 840 . 844) (nil part-token string 840 . 844) (nil font-lock-face web-mode-javascript-string-face 840 . 844) (nil part-side jsx 835 . 840) (nil jsx-depth 2 835 . 840) (nil tag-attr t 835 . 840) (nil tag-name "button" 835 . 840) (nil tag-type start 835 . 840) (nil part-token string 835 . 840) (nil font-lock-face web-mode-javascript-string-face 835 . 840) (nil part-side jsx 834 . 835) (nil jsx-depth 2 834 . 835) (nil tag-attr t 834 . 835) (nil tag-name "button" 834 . 835) (nil tag-type start 834 . 835) (nil part-token string 834 . 835) (nil syntax-table (15) 834 . 835) (nil font-lock-face web-mode-javascript-string-face 834 . 835) (nil part-side jsx 833 . 834) (nil jsx-depth 2 833 . 834) (nil tag-attr t 833 . 834) (nil tag-name "button" 833 . 834) (nil tag-type start 833 . 834) (nil part-side jsx 824 . 833) (nil jsx-depth 2 824 . 833) (nil tag-attr t 824 . 833) (nil tag-name "button" 824 . 833) (nil tag-type start 824 . 833) (nil face web-mode-function-call-face 824 . 833) (nil part-side jsx 797 . 824) (nil jsx-depth 2 797 . 824) (nil tag-attr t 797 . 824) (nil tag-name "button" 797 . 824) (nil tag-type start 797 . 824) (nil part-side jsx 796 . 797) (nil jsx-depth 2 796 . 797) (nil tag-attr t 796 . 797) (nil tag-name "button" 796 . 797) (nil tag-type start 796 . 797) (nil jsx-beg 2 796 . 797) (nil font-lock-face web-mode-block-delimiter-face 796 . 797) (nil part-side jsx 795 . 796) (nil jsx-depth 1 795 . 796) (nil tag-attr t 795 . 796) (nil tag-name "button" 795 . 796) (nil tag-type start 795 . 796) (nil font-lock-face web-mode-html-attr-equal-face 795 . 796) (nil part-side jsx 789 . 795) (nil jsx-depth 1 789 . 795) (nil tag-attr t 789 . 795) (nil tag-name "button" 789 . 795) (nil tag-type start 789 . 795) (nil font-lock-face web-mode-html-attr-name-face 789 . 795) (nil part-side jsx 788 . 789) (nil jsx-depth 1 788 . 789) (nil tag-attr-beg 8 788 . 789) (nil tag-attr t 788 . 789) (nil tag-name "button" 788 . 789) (nil tag-type start 788 . 789) (nil font-lock-face web-mode-html-attr-name-face 788 . 789) (nil part-side jsx 784 . 788) (nil jsx-depth 1 784 . 788) (nil tag-name "button" 784 . 788) (nil tag-type start 784 . 788) (nil part-side jsx 778 . 784) (nil jsx-depth 1 778 . 784) (nil tag-name "button" 778 . 784) (nil tag-type start 778 . 784) (nil font-lock-face web-mode-html-tag-face 778 . 784) (nil part-side jsx 777 . 778) (nil jsx-depth 1 777 . 778) (nil tag-name "button" 777 . 778) (nil tag-type start 777 . 778) (nil tag-beg 17 777 . 778) (nil font-lock-face web-mode-html-tag-bracket-face 777 . 778) (777 . 884) 776 (t 26130 49667 68367 183000)) nil (26130 49696 162581 214000) 0 nil] [nil nil ((nil rear-nonsticky nil 779 . 780) (nil part-side jsx 777 . 780) (nil jsx-depth 1 777 . 780) (777 . 780) 776 (t 26130 49667 68367 183000)) ((#("row" 0 2 (jsx-depth 1 part-side jsx) 2 3 (jsx-depth 1 part-side jsx rear-nonsticky nil)) . 777) (undo-tree-id3339 . -2) (undo-tree-id3340 . -2) (undo-tree-id3341 . -2) (nil rear-nonsticky t 779 . 780)) (26130 49674 823574 739000) 0 nil])
([nil nil ((nil rear-nonsticky nil 878 . 879) (nil part-side jsx 835 . 879) (nil jsx-depth 2 835 . 879) (nil tag-attr t 835 . 879) (nil tag-name "button" 835 . 879) (nil tag-type start 835 . 879) (nil part-token string 835 . 879) (nil font-lock-face web-mode-javascript-string-face 835 . 879) (835 . 879) (t 26130 49680 388375 731000)) nil (26130 49701 686594 8000) 0 nil] [nil nil ((nil rear-nonsticky nil 837 . 838) (nil part-side jsx 837 . 838) (nil jsx-depth 2 837 . 838) (nil tag-attr t 837 . 838) (nil tag-name "button" 837 . 838) (nil tag-type start 837 . 838) (nil part-side jsx 836 . 837) (nil jsx-depth 2 836 . 837) (nil tag-attr t 836 . 837) (nil tag-name "button" 836 . 837) (nil tag-type start 836 . 837) (nil part-token string 836 . 837) (nil syntax-table (15) 836 . 837) (nil font-lock-face web-mode-javascript-string-face 836 . 837) (836 . 838) 835 (t 26130 49680 388375 731000)) ((#("'C" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 1 2 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx rear-nonsticky nil)) . 836) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (nil syntax-table (15) 836 . 837) (nil tag-name "button" 836 . 837) (nil tag-name "button" 837 . 838) (nil rear-nonsticky t 837 . 838)) (26130 49696 155362 913000) 0 nil] [nil nil ((nil rear-nonsticky nil 836 . 837) (nil part-side jsx 836 . 837) (nil jsx-depth 2 836 . 837) (nil tag-attr t 836 . 837) (nil tag-name "button" 836 . 837) (nil tag-type start 836 . 837) (nil part-side jsx 835 . 836) (nil jsx-depth 2 835 . 836) (nil tag-attr t 835 . 836) (nil tag-name "button" 835 . 836) (nil tag-type start 835 . 836) (nil part-token string 835 . 836) (nil syntax-table (15) 835 . 836) (nil font-lock-face web-mode-javascript-string-face 835 . 836) (835 . 837) (t 26130 49680 388375 731000)) ((#("'C" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 1 2 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx rear-nonsticky nil)) . 835) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (nil syntax-table (15) 835 . 836) (nil tag-name "button" 835 . 836) (nil tag-name "button" 836 . 837) (nil rear-nonsticky t 836 . 837)) (26130 49695 237708 365000) 0 nil] [nil nil ((nil rear-nonsticky nil 877 . 878) (nil part-side jsx 834 . 878) (nil jsx-depth 2 834 . 878) (nil tag-attr t 834 . 878) (nil tag-name "button" 834 . 878) (nil tag-type start 834 . 878) (834 . 878) (#("'C" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 1 2 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx)) . 834) (undo-tree-id3342 . -2) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -2) (undo-tree-id3349 . -2) 836 (t 26130 49680 388375 731000)) ((834 . 836) (#("D6y6PmrH47d2vTgXZjzADbp1bgQQF9Przk9UDRBJuM7R" 0 43 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 43 44 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx rear-nonsticky nil)) . 834) (undo-tree-id3350 . -43) (undo-tree-id3351 . -43) (undo-tree-id3352 . -43) (nil tag-name "button" 877 . 878) (nil tag-name "button" 834 . 877) (nil rear-nonsticky t 877 . 878)) (26130 49693 112093 520000) 0 nil])
nil
([nil nil ((#("Copy this text to clipboard" 0 1 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 1 5 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 5 9 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 9 27 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx)) . 879) (undo-tree-id3359 . -26) (undo-tree-id3360 . -26) (undo-tree-id3361 . -1) (undo-tree-id3362 . -15) (undo-tree-id3363 . -15) (undo-tree-id3364 . -25) (undo-tree-id3365 . -26) (undo-tree-id3366 . -25) (undo-tree-id3367 . -26) (undo-tree-id3368 . -27) (undo-tree-id3369 . -27) 905 (t 26130 49701 705056 79000)) nil (26130 49714 825204 798000) 0 nil])
nil
nil
nil
([nil nil ((nil rear-nonsticky nil 927 . 928) (nil part-side jsx 884 . 928) (nil jsx-depth 1 884 . 928) (884 . 928) 883 (t 26130 49707 545059 827000)) nil (26130 49725 277007 533000) 0 nil] [nil nil ((nil rear-nonsticky nil 917 . 918) (nil part-side jsx 900 . 918) (nil jsx-depth 1 900 . 918) (nil part-side jsx 896 . 900) (nil jsx-depth 1 896 . 900) (nil part-side jsx 891 . 896) (nil jsx-depth 1 891 . 896) (891 . 918) 890 (t 26130 49707 545059 827000)) ((#("Copy this text to clipboard" 0 5 (jsx-depth 1 part-side jsx) 5 9 (jsx-depth 1 part-side jsx) 9 26 (jsx-depth 1 part-side jsx) 26 27 (jsx-depth 1 part-side jsx rear-nonsticky nil)) . 891) (undo-tree-id3370 . -26) (undo-tree-id3371 . -26) (undo-tree-id3372 . -26) (nil rear-nonsticky t 917 . 918)) (26130 49714 821763 922000) 0 nil])
([nil nil ((#("  Copy
" 0 6 (jsx-depth 1 part-side jsx) 6 7 (jsx-depth 1 part-side jsx)) . 929) (undo-tree-id3373 . -6) (undo-tree-id3374 . -6) (undo-tree-id3375 . -6) (undo-tree-id3376 . -5) (undo-tree-id3377 . -5) (undo-tree-id3378 . -6) (undo-tree-id3379 . -5) (undo-tree-id3380 . -5) (undo-tree-id3381 . -5) (undo-tree-id3382 . -5) (undo-tree-id3383 . -7) 934) nil (26130 49725 277006 613000) 0 nil])
nil
([nil nil ((#(" " 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 784) (942 . 945) (887 . 896) (786 . 792) (#("  " 0 2 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 786) 934) nil (26130 49725 276993 213000) 0 nil])
([nil nil ((#("      " 0 6 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . -894) (#("	  " 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 1 3 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . -796) (796 . 797) (#("	" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 796) (792 . 796) 781 (777 . 781) (t 26130 49725 295071 219000)) nil (26130 49742 93622 726000) 0 nil])
([nil nil ((800 . 810) (#("\"" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 801) (800 . 801) (794 . 801) (788 . 794)) nil (26130 49742 93621 996000) 0 nil])
([nil nil ((811 . 812) (#(" " 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 811) (#(" " 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 811) (#(" " 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 811) (#(" " 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 811) (#("	" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 811) (#("	" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 811) (#("	" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 811) (#("
" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . 811) (#("$" 0 1 (tag-type start tag-name "button" jsx-depth 1 part-side jsx)) . -811) (undo-tree-id3384 . -1) 812 (811 . 812)) nil (26130 49742 93619 266000) 0 nil])
([nil nil ((#("
" 0 1 (jsx-depth 1 part-side jsx)) . 1008) (undo-tree-id3385 . -1) (t 26130 49742 111748 679000)) nil (26130 49774 393670 988000) 0 nil])
([nil nil ((#("
" 0 1 (part-side jsx rear-nonsticky t)) . 14) (undo-tree-id3386 . -1) (t 26130 49774 411769 411000)) nil (26130 49962 743217 992000) 0 nil])
([nil nil ((#("	<header className=\"flex justify-center my-6 \">
                    {/* Header content */}
                    <div className=\"flex flex-col py-6 h-1/6 w-4/6 bg-black relative z-10 items-center justify-center\">
			<h1 className=\"text-7xl text-white\">Welcome to</h1>
			<div class=\"hero-container\">
			    <div class=\"environment\"></div>
			    <h1 class=\"hero glitch layers\" data-text=\"SO1337\"><span className=\"px-7\">SO1337</span></h1>
			    <br/>
			</div>
			<button className=\"text-white\" onClick={() =>  navigator.clipboard.writeText('D6y6PmrH47d2vTgXZjzADbp1bgQQF9Przk9UDRBJuM7R')}
			>D6y6PmrH47d2vTgXZjzADbp1bgQQF9Przk9UDRBJuM7R
			</button>
                    </div>
		</header>
" 0 1 (jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "header" jsx-depth 1 part-side jsx) 2 8 (font-lock-face web-mode-html-tag-face tag-type start tag-name "header" jsx-depth 1 part-side jsx) 8 9 (tag-type start tag-name "header" jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 10 18 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 18 19 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 19 24 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 24 25 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 25 39 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 39 40 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 40 41 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 41 42 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 42 43 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 43 44 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 44 45 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t jsx-depth 1 part-side jsx) 45 46 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 46 47 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "header" jsx-depth 1 part-side jsx) 47 68 (jsx-depth 1 part-side jsx) 68 69 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 69 70 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 70 88 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 88 89 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 89 90 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 90 111 (jsx-depth 1 part-side jsx) 111 112 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 112 115 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 115 116 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 116 117 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 117 125 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 125 126 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 126 141 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 141 142 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 142 143 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 143 144 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 144 145 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 145 146 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 146 148 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 148 149 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 149 179 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 179 180 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx rear-nonsticky t) 180 181 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 181 193 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 193 194 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 194 195 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 195 196 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 196 197 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 197 198 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 198 199 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 199 200 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 200 201 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 201 202 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 202 203 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 203 204 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 204 205 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 205 206 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 206 207 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 207 208 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 208 209 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 209 210 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 210 211 (jsx-depth 1 part-side jsx) 211 214 (jsx-depth 1 part-side jsx) 214 215 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 215 217 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 217 218 (tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 218 219 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 219 226 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 226 227 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 227 228 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 228 248 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 248 249 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 249 250 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 250 260 (jsx-depth 1 part-side jsx) 260 261 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 261 262 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 262 264 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 264 265 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 265 266 (jsx-depth 1 part-side jsx) 266 269 (jsx-depth 1 part-side jsx) 269 270 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 270 273 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 273 274 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 274 275 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 275 279 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 279 280 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 280 295 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 295 296 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t jsx-depth 1 part-side jsx) 296 297 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 297 305 (jsx-depth 1 part-side jsx) 305 306 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 306 309 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 309 310 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 310 311 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 311 315 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 315 316 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 316 328 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 328 329 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t jsx-depth 1 part-side jsx) 329 330 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 330 331 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 331 332 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 332 335 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 335 336 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 336 337 (jsx-depth 1 part-side jsx) 337 344 (jsx-depth 1 part-side jsx) 344 345 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 345 346 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 346 347 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 347 348 (tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 348 349 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 349 353 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 353 354 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 354 373 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 373 374 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr-end 5 tag-attr t jsx-depth 1 part-side jsx) 374 375 (tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 375 376 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "h1" tag-attr t tag-attr-beg 1 jsx-depth 1 part-side jsx) 376 384 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 384 385 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 385 392 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 392 393 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 393 394 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 394 395 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span" jsx-depth 1 part-side jsx) 395 399 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span" jsx-depth 1 part-side jsx) 399 400 (tag-type start tag-name "span" jsx-depth 1 part-side jsx) 400 401 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 401 402 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 402 403 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 403 404 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 404 405 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 405 406 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 406 407 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 407 408 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 408 409 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 409 410 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 410 414 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 414 415 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 415 416 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 416 417 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span" jsx-depth 1 part-side jsx) 417 423 (jsx-depth 1 part-side jsx) 423 424 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span" jsx-depth 1 part-side jsx) 424 425 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span" jsx-depth 1 part-side jsx) 425 429 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span" jsx-depth 1 part-side jsx) 429 430 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span" jsx-depth 1 part-side jsx) 430 431 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 431 432 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 432 433 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 433 434 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 434 435 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 435 443 (jsx-depth 1 part-side jsx) 443 444 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "br" jsx-depth 1 part-side jsx) 444 446 (font-lock-face web-mode-html-tag-face tag-type void tag-name "br" jsx-depth 1 part-side jsx) 446 447 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "br" jsx-depth 1 part-side jsx) 447 448 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "br" jsx-depth 1 part-side jsx) 448 449 (jsx-depth 1 part-side jsx) 449 452 (jsx-depth 1 part-side jsx) 452 453 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 453 454 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 454 457 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 457 458 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx rear-nonsticky t) 458 462 (jsx-depth 1 part-side jsx) 462 463 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button" jsx-depth 1 part-side jsx) 463 469 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button" jsx-depth 1 part-side jsx) 469 470 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 470 471 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 471 472 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 472 473 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 473 474 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 474 475 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 475 476 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 476 477 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 477 478 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 478 479 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 479 480 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 480 491 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 491 492 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 492 493 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 493 494 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 8 jsx-depth 1 part-side jsx) 494 500 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 500 501 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 501 502 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 502 505 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 505 506 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 506 507 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 507 529 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 529 538 (face web-mode-function-call-face tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 538 539 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 539 540 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 540 583 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 583 584 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx rear-nonsticky t) 584 585 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 585 586 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 586 587 (font-lock-face web-mode-block-delimiter-face jsx-end 2 tag-type start tag-name "button" tag-attr-end 7 tag-attr t jsx-depth 2 part-side jsx) 587 588 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 588 589 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 589 590 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 590 591 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr-end 0 tag-attr t jsx-depth 1 part-side jsx) 591 592 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button" jsx-depth 1 part-side jsx) 592 635 (jsx-depth 1 part-side jsx) 635 636 (jsx-depth 1 part-side jsx rear-nonsticky t) 636 640 (jsx-depth 1 part-side jsx) 640 641 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button" jsx-depth 1 part-side jsx) 641 642 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 642 648 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 648 649 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button" jsx-depth 1 part-side jsx rear-nonsticky t) 649 650 (jsx-depth 1 part-side jsx rear-nonsticky t) 650 670 (jsx-depth 1 part-side jsx) 670 671 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 671 672 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 672 675 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 675 676 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 676 677 (jsx-depth 1 part-side jsx) 677 679 (jsx-depth 1 part-side jsx) 679 680 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "header" jsx-depth 1 part-side jsx) 680 681 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 681 687 (font-lock-face web-mode-html-tag-face tag-type end tag-name "header" jsx-depth 1 part-side jsx) 687 688 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "header" jsx-depth 1 part-side jsx rear-nonsticky t) 688 689 (jsx-depth 1 part-side jsx)) . 318) (undo-tree-id3387 . -688) (undo-tree-id3388 . -688) (undo-tree-id3389 . 196) (undo-tree-id3390 . -539) (undo-tree-id3391 . -540) (undo-tree-id3392 . -218) (undo-tree-id3393 . -689) (undo-tree-id3394 . -689) (undo-tree-id3395 . -689) (undo-tree-id3396 . -689) (undo-tree-id3397 . -677) (undo-tree-id3398 . -435) (undo-tree-id3399 . -436) (undo-tree-id3400 . -457) (undo-tree-id3401 . -457) (undo-tree-id3402 . -688) (undo-tree-id3403 . -211) (undo-tree-id3404 . -448) (undo-tree-id3405 . -676) (undo-tree-id3406 . -449) (undo-tree-id3407 . -650) (undo-tree-id3408 . -677) (undo-tree-id3409 . -458) (undo-tree-id3410 . -539) (undo-tree-id3411 . -540) (undo-tree-id3412 . -584) (undo-tree-id3413 . -637) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -3) (undo-tree-id3417 . -3) (undo-tree-id3418 . -77) (undo-tree-id3419 . -77) (undo-tree-id3420 . -80) (undo-tree-id3421 . -80) (undo-tree-id3422 . -294) (undo-tree-id3423 . -294) (undo-tree-id3424 . -331) (undo-tree-id3425 . -331) (undo-tree-id3426 . -448) (undo-tree-id3427 . -448) (undo-tree-id3428 . -458) (undo-tree-id3429 . -458) (undo-tree-id3430 . -495) (undo-tree-id3431 . -495) (undo-tree-id3432 . -649) (undo-tree-id3433 . -649) (undo-tree-id3434 . -649) (undo-tree-id3435 . -649) (undo-tree-id3436 . -676) (undo-tree-id3437 . -676) (undo-tree-id3438 . -688) (undo-tree-id3439 . -688) (undo-tree-id3440 . -688) (undo-tree-id3441 . -688) (undo-tree-id3442 . -689) 1006 (t 26130 49962 761890 297000)) nil (26130 50175 784303 29000) 0 nil])
([nil nil ((#("
	    {/* <header className=\" h-2/6 bg-header relative z-10\"> */}
" 0 1 (jsx-depth 1 part-side jsx) 1 6 (jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 7 8 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 8 10 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 10 11 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 17 tag-type start tag-name "header" jsx-depth 2 part-side jsx) 11 18 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "header" jsx-depth 2 part-side jsx) 18 19 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "header" tag-attr t tag-attr-beg 0 jsx-depth 2 part-side jsx) 19 59 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "header" tag-attr t jsx-depth 2 part-side jsx) 59 60 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "header" tag-attr-end 9 tag-attr t jsx-depth 2 part-side jsx) 60 61 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type start tag-name "header" jsx-depth 2 part-side jsx) 61 63 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 63 64 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 64 65 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 65 66 (jsx-depth 1 part-side jsx)) . 251) (undo-tree-id3451 . -1) (undo-tree-id3452 . -65) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -66) 252 (t 26130 50176 808694 345000)) nil (26130 50182 222358 316000) 0 nil] [nil nil ((#("	    {/* <header className=\" h-2/6 bg-header relative z-10\"> */}
" 0 5 (jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 6 7 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 7 9 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 9 10 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 17 tag-type start tag-name "header" jsx-depth 2 part-side jsx) 10 17 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "header" jsx-depth 2 part-side jsx) 17 18 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "header" tag-attr t tag-attr-beg 0 jsx-depth 2 part-side jsx) 18 58 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "header" tag-attr t jsx-depth 2 part-side jsx) 58 59 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "header" tag-attr-end 9 tag-attr t jsx-depth 2 part-side jsx) 59 60 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type start tag-name "header" jsx-depth 2 part-side jsx) 60 62 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 62 63 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 63 64 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 64 65 (jsx-depth 1 part-side jsx)) . 252) (undo-tree-id3443 . -64) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -65) 253 (t 26130 50013 455256 166000)) ((252 . 317) (t 26130 50174 12025 882000)) (26130 50173 993711 210000) 0 nil])
([nil nil ((#("	" 0 1 (jsx-depth 1 part-side jsx)) . -429) (429 . 430) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 429) (425 . 429) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -393) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -368) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -357) (357 . 358) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 357) (353 . 357) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -344) (344 . 345) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 344) (340 . 344) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -328) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -305) (#("		" 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx)) . -256) (undo-tree-id3449 . 1) (256 . 257) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 256) (undo-tree-id3450 . 1) (252 . 256) 251) nil (26130 63130 166115 905000) 0 nil])
nil
([nil nil ((182 . 189) (t 26130 63131 196744 452000)) nil (26131 4072 109637 718000) 0 nil] [nil nil ((185 . 186) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 185) (undo-tree-id3456 . -1) (t 26130 50182 238697 830000)) ((185 . 186) (#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 185) (t 26130 63125 250065 933000)) (26130 63125 230931 903000) 0 nil])
([nil nil ((253 . 260) (t 26131 4072 123481 272000)) nil (26131 4092 168016 243000) 0 nil])
nil
([nil nil ((#("w" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 183) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (t 26131 4092 223517 417000)) nil (26131 4114 627114 195000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 183) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1)) nil (26131 4114 627113 235000) 0 nil])
([nil nil ((#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 183) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1)) nil (26131 4114 627112 235000) 0 nil])
([nil nil ((#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 183) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1)) nil (26131 4114 627111 165000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 183) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1)) nil (26131 4114 627110 25000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 183) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1)) nil (26131 4114 627108 285000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 183) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1)) nil (26131 4114 627104 935000) 0 nil])
([nil nil ((247 . 248) (t 26131 4114 646894 597000)) nil (26131 4303 362291 421000) 0 nil])
([nil nil ((#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . -247) (undo-tree-id3471 . -1) 248) nil (26131 4303 362290 671000) 0 nil])
([nil current ((247 . 256)) nil (26131 4303 362282 181000) 0 nil])
nil
