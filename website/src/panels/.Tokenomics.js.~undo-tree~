(undo-tree-save-format-version . 1)
"5e068445388ffb335d7d1dd670bd64659b8f8813"
[nil nil nil nil (26130 62354 802313 249000) 0 nil]
([nil nil ((nil rear-nonsticky nil 103 . 104) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -1134) (95 . 1135) 94 (t 26125 377 527230 702000)) nil (26130 62354 802312 809000) 0 nil])
([nil nil ((#("        <div>
" 0 8 (part-side jsx) 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 9 12 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 12 13 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 13 14 (jsx-depth 1 part-side jsx)) . 69) (undo-tree-id4 . -13) (undo-tree-id5 . -8) 77) nil (26130 62354 802312 359000) 0 nil])
([nil nil ((#("            
" 0 12 (part-side jsx) 12 13 (part-side jsx)) . 69) (undo-tree-id2 . -12) (undo-tree-id3 . -8) 77) nil (26130 62354 802311 269000) 0 nil])
([nil nil ((#("        </div>
" 0 8 (jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 10 13 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 13 14 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx) 14 15 (part-side jsx)) . 1108) (undo-tree-id0 . -14) (undo-tree-id1 . -8) 1116) nil (26130 62354 802309 419000) 0 nil])
([nil nil ((1145 . 1146) 1113) nil (26130 62354 802295 869000) 0 nil])
([nil nil ((#("        <div className='flex flex-col  items-center py-3 justify-around  w-4/5  bg-white h-screen min-h-full relative '>
	    <div className=\"py-6 px-3 bg-black \">
		<h1 className=\"uppercase typing-greetings text-center font-bold text-white text-4xl\">GR33TINGS, FR13ND</h1>
	    </div>
	    <p className=\"uppercase font-normal text-2xl\">
		“If you don't believe me or don't get it, <br/> I don't have time to try to convince you, sorry.” <br/> -satoshi
	    </p>
	    <p className=\"uppercase font-light text-2xl\">
		we are not leet; we are so1337 <br/>
		we don't try to escape the matrix; <br/>
		we 4r3 7h3 m4tr1x!
	    </p>
	    <div className=\"flex flex-col bg-black justify-center items-center w-1/2\">
		<p className=\"flex bg-white my-9 p-2\">
		    <h2 className=\"uppercase font-light text-black text-1xl\"> neo, andrew tate, vitalik <br/>
			they all try to be <span className=\"font-bold\">SO1337</span></h2>
		</p>
		<div className=\"flex text-white mb-5 uppercase font-bold text-3xl\">No j33ts 4ll0w3d</div>
	    </div>
        </div>
" 0 7 (part-side jsx) 7 8 (part-side jsx rear-nonsticky t) 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 9 12 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 12 13 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 13 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 14 22 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 22 23 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 23 118 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 118 119 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 119 120 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 120 126 (jsx-depth 1 part-side jsx) 126 127 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 127 130 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 130 131 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 131 132 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 132 140 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 140 141 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 141 161 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 161 162 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 162 163 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 163 166 (jsx-depth 1 part-side jsx) 166 167 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 167 169 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 169 170 (tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 170 171 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 171 179 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 179 180 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 180 249 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 249 250 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 250 251 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 251 268 (jsx-depth 1 part-side jsx) 268 269 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 269 270 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 270 272 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 272 273 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 273 279 (jsx-depth 1 part-side jsx) 279 280 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 280 281 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 281 284 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 284 285 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 285 291 (jsx-depth 1 part-side jsx) 291 292 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "p" jsx-depth 1 part-side jsx) 292 293 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 1 part-side jsx) 293 294 (tag-type start tag-name "p" jsx-depth 1 part-side jsx) 294 295 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 295 303 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx) 303 304 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx) 304 335 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx) 335 336 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 336 337 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 1 part-side jsx) 337 374 (jsx-depth 1 part-side jsx) 374 377 (jsx-depth 1 part-side jsx) 377 378 (jsx-depth 1 part-side jsx) 378 380 (jsx-depth 1 part-side jsx) 380 382 (jsx-depth 1 part-side jsx) 382 383 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "br" jsx-depth 1 part-side jsx) 383 385 (font-lock-face web-mode-html-tag-face tag-type void tag-name "br" jsx-depth 1 part-side jsx) 385 386 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "br" jsx-depth 1 part-side jsx) 386 387 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "br" jsx-depth 1 part-side jsx) 387 409 (jsx-depth 1 part-side jsx) 409 412 (jsx-depth 1 part-side jsx) 412 438 (jsx-depth 1 part-side jsx) 438 439 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "br" jsx-depth 1 part-side jsx) 439 441 (font-lock-face web-mode-html-tag-face tag-type void tag-name "br" jsx-depth 1 part-side jsx) 441 442 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "br" jsx-depth 1 part-side jsx) 442 443 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "br" jsx-depth 1 part-side jsx) 443 458 (jsx-depth 1 part-side jsx) 458 459 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 1 part-side jsx) 459 460 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 460 461 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 461 462 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 1 part-side jsx) 462 468 (jsx-depth 1 part-side jsx) 468 469 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "p" jsx-depth 1 part-side jsx) 469 470 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 1 part-side jsx) 470 471 (tag-type start tag-name "p" jsx-depth 1 part-side jsx) 471 472 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 472 480 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx) 480 481 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx) 481 511 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx) 511 512 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 512 513 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 1 part-side jsx) 513 547 (jsx-depth 1 part-side jsx) 547 548 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "br" jsx-depth 1 part-side jsx) 548 550 (font-lock-face web-mode-html-tag-face tag-type void tag-name "br" jsx-depth 1 part-side jsx) 550 551 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "br" jsx-depth 1 part-side jsx) 551 552 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "br" jsx-depth 1 part-side jsx) 552 564 (jsx-depth 1 part-side jsx) 564 567 (jsx-depth 1 part-side jsx) 567 590 (jsx-depth 1 part-side jsx) 590 591 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "br" jsx-depth 1 part-side jsx) 591 593 (font-lock-face web-mode-html-tag-face tag-type void tag-name "br" jsx-depth 1 part-side jsx) 593 594 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "br" jsx-depth 1 part-side jsx) 594 595 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "br" jsx-depth 1 part-side jsx) 595 622 (jsx-depth 1 part-side jsx) 622 623 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 1 part-side jsx) 623 624 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 624 625 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 625 626 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 1 part-side jsx) 626 632 (jsx-depth 1 part-side jsx) 632 633 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 633 636 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 636 637 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 637 638 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 638 646 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 646 647 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 647 704 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 704 705 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 705 706 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 706 709 (jsx-depth 1 part-side jsx) 709 710 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "p" jsx-depth 1 part-side jsx) 710 711 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 1 part-side jsx) 711 712 (tag-type start tag-name "p" jsx-depth 1 part-side jsx) 712 713 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 713 721 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx) 721 722 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx) 722 745 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx) 745 746 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 746 747 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 1 part-side jsx) 747 754 (jsx-depth 1 part-side jsx) 754 755 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "h2" jsx-depth 1 part-side jsx) 755 757 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h2" jsx-depth 1 part-side jsx) 757 758 (tag-type start tag-name "h2" jsx-depth 1 part-side jsx) 758 759 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h2" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 759 767 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h2" tag-attr t jsx-depth 1 part-side jsx) 767 768 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h2" tag-attr t jsx-depth 1 part-side jsx) 768 809 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h2" tag-attr t jsx-depth 1 part-side jsx) 809 810 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h2" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 810 811 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h2" jsx-depth 1 part-side jsx) 811 838 (jsx-depth 1 part-side jsx) 838 839 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "br" jsx-depth 1 part-side jsx) 839 841 (font-lock-face web-mode-html-tag-face tag-type void tag-name "br" jsx-depth 1 part-side jsx) 841 842 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "br" jsx-depth 1 part-side jsx) 842 843 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "br" jsx-depth 1 part-side jsx) 843 856 (jsx-depth 1 part-side jsx) 856 859 (jsx-depth 1 part-side jsx) 859 866 (jsx-depth 1 part-side jsx) 866 867 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span" jsx-depth 1 part-side jsx) 867 871 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span" jsx-depth 1 part-side jsx) 871 872 (tag-type start tag-name "span" jsx-depth 1 part-side jsx) 872 873 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 873 881 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 881 882 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 882 892 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 892 893 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 893 894 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span" jsx-depth 1 part-side jsx) 894 900 (jsx-depth 1 part-side jsx) 900 901 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span" jsx-depth 1 part-side jsx) 901 902 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span" jsx-depth 1 part-side jsx) 902 906 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span" jsx-depth 1 part-side jsx) 906 907 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span" jsx-depth 1 part-side jsx) 907 908 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h2" jsx-depth 1 part-side jsx) 908 909 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h2" jsx-depth 1 part-side jsx) 909 911 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h2" jsx-depth 1 part-side jsx) 911 912 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h2" jsx-depth 1 part-side jsx) 912 915 (jsx-depth 1 part-side jsx) 915 916 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 1 part-side jsx) 916 917 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 917 918 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 918 919 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 1 part-side jsx) 919 922 (jsx-depth 1 part-side jsx) 922 923 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 923 926 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 926 927 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 927 928 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 928 936 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 936 937 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 937 987 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 987 988 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 988 989 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 989 1005 (jsx-depth 1 part-side jsx) 1005 1006 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 1006 1007 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 1007 1010 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 1010 1011 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 1011 1017 (jsx-depth 1 part-side jsx) 1017 1018 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 1018 1019 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 1019 1022 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 1022 1023 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 1023 1032 (jsx-depth 1 part-side jsx) 1032 1033 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 1033 1034 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 1034 1037 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 1037 1038 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx) 1038 1039 (part-side jsx)) . 69) (undo-tree-id6 . -1037) (undo-tree-id7 . -1038) (undo-tree-id8 . -1038) (undo-tree-id9 . -1037) (undo-tree-id10 . -13) (undo-tree-id11 . -1037) (undo-tree-id12 . -13) (undo-tree-id13 . -1037) (undo-tree-id14 . -13) (undo-tree-id15 . -1039) 82 (t 26130 62354 805209 855000)) nil (26131 1326 940138 205000) 0 nil])
([nil nil ((69 . 70) (69 . 70) 74) nil (26131 1326 940124 765000) 0 nil])
([nil nil ((nil rear-nonsticky nil 78 . 79) (#("
" 0 1 (part-side jsx)) . -1225) (70 . 1226) 69 (t 26131 1326 944564 728000)) nil (26131 1339 19575 50000) 0 nil])
([nil nil ((#("	
" 0 1 (part-side jsx) 1 2 (part-side jsx)) . 69) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -2)) nil (26131 1362 841100 810000) 0 nil])
([nil nil ((#("typing-greetings " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx) 1 17 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 356) (undo-tree-id29 . -16) (undo-tree-id30 . 16) (undo-tree-id31 . -17) (t 26131 1339 24601 444000)) nil (26131 1365 482957 313000) 0 nil] [nil nil ((#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t jsx-depth 1 part-side jsx)) . 356) (undo-tree-id28 . -1) (t 26131 1339 24601 444000)) ((356 . 357)) (26131 1362 839434 294000) 0 nil])
([nil nil ((#("GR33TINGS, FR13ND" 0 17 (jsx-depth 1 part-side jsx)) . 399) (undo-tree-id32 . -16) (undo-tree-id33 . -16) (undo-tree-id34 . -16) (undo-tree-id35 . -16) (undo-tree-id36 . -16) (undo-tree-id37 . -17) (undo-tree-id38 . -17) 415 (t 26131 1365 488015 209000)) nil (26131 1373 215863 665000) 0 nil])
nil
([nil nil ((399 . 407) (t 26131 1373 221372 47000)) nil (26131 1378 259324 339000) 0 nil])
([nil nil ((#("O" 0 1 (jsx-depth 1 part-side jsx)) . -406) (undo-tree-id39 . -1) (undo-tree-id40 . -1) 407) nil (26131 1378 259323 699000) 0 nil])
([nil nil ((406 . 408)) nil (26131 1378 259313 999000) 0 nil])
([nil nil ((408 . 411) (t 26131 1378 261387 365000)) nil (26131 1380 234561 647000) 0 nil])
([nil nil ((#("		<p className=\"uppercase font-normal text-2xl\">
		    “If you don't believe me or don't get it, <br/> I don't have time to try to convince you, sorry.” <br/> -satoshi
		</p>
		<p className=\"uppercase font-light text-2xl\">
		    we are not leet; we are so1337 <br/>
		    we don't try to escape the matrix; <br/>
		    we 4r3 7h3 m4tr1x!
		</p>
" 0 2 (jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "p" jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 1 part-side jsx) 4 5 (tag-type start tag-name "p" jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 6 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx) 14 15 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx) 15 46 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx) 46 47 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 47 48 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 1 part-side jsx) 48 89 (jsx-depth 1 part-side jsx) 89 92 (jsx-depth 1 part-side jsx) 92 93 (jsx-depth 1 part-side jsx) 93 95 (jsx-depth 1 part-side jsx) 95 97 (jsx-depth 1 part-side jsx) 97 98 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "br" jsx-depth 1 part-side jsx) 98 100 (font-lock-face web-mode-html-tag-face tag-type void tag-name "br" jsx-depth 1 part-side jsx) 100 101 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "br" jsx-depth 1 part-side jsx) 101 102 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "br" jsx-depth 1 part-side jsx) 102 124 (jsx-depth 1 part-side jsx) 124 127 (jsx-depth 1 part-side jsx) 127 153 (jsx-depth 1 part-side jsx) 153 154 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "br" jsx-depth 1 part-side jsx) 154 156 (font-lock-face web-mode-html-tag-face tag-type void tag-name "br" jsx-depth 1 part-side jsx) 156 157 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "br" jsx-depth 1 part-side jsx) 157 158 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "br" jsx-depth 1 part-side jsx) 158 170 (jsx-depth 1 part-side jsx) 170 171 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 1 part-side jsx) 171 172 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 172 173 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 173 174 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 1 part-side jsx) 174 177 (jsx-depth 1 part-side jsx) 177 178 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "p" jsx-depth 1 part-side jsx) 178 179 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 1 part-side jsx) 179 180 (tag-type start tag-name "p" jsx-depth 1 part-side jsx) 180 181 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 181 189 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx) 189 190 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx) 190 220 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx) 220 221 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 221 222 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 1 part-side jsx) 222 260 (jsx-depth 1 part-side jsx) 260 261 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "br" jsx-depth 1 part-side jsx) 261 263 (font-lock-face web-mode-html-tag-face tag-type void tag-name "br" jsx-depth 1 part-side jsx) 263 264 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "br" jsx-depth 1 part-side jsx) 264 265 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "br" jsx-depth 1 part-side jsx) 265 281 (jsx-depth 1 part-side jsx) 281 284 (jsx-depth 1 part-side jsx) 284 307 (jsx-depth 1 part-side jsx) 307 308 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "br" jsx-depth 1 part-side jsx) 308 310 (font-lock-face web-mode-html-tag-face tag-type void tag-name "br" jsx-depth 1 part-side jsx) 310 311 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "br" jsx-depth 1 part-side jsx) 311 312 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "br" jsx-depth 1 part-side jsx) 312 340 (jsx-depth 1 part-side jsx) 340 341 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 1 part-side jsx) 341 342 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 342 343 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 343 344 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 1 part-side jsx) 344 345 (jsx-depth 1 part-side jsx)) . 426) (undo-tree-id46 . -344) (undo-tree-id47 . -344) (undo-tree-id48 . -47) (undo-tree-id49 . -344) (undo-tree-id50 . -47) (undo-tree-id51 . -344) (undo-tree-id52 . -47) (undo-tree-id53 . -344) (undo-tree-id54 . -345) 770 (t 26131 1380 238060 41000)) nil (26131 1409 405896 191000) 0 nil])
([nil nil ((426 . 428) (426 . 427) 443) nil (26131 1409 405892 571000) 0 nil])
([nil nil ((#("		" 0 2 (jsx-depth 1 part-side jsx)) . 426) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) 428) nil (26131 1409 405890 381000) 0 nil])
([nil nil ((426 . 429) (t 26131 1409 408148 699000)) nil (26131 1413 945161 821000) 0 nil])
([nil nil ((426 . 428) (426 . 437) (#("div" 0 3 (jsx-depth 1 part-side jsx)) . -426) (undo-tree-id55 . -3) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -3) 429 (t 26131 1413 948162 498000)) nil (26131 1416 283097 385000) 0 nil])
([nil nil ((434 . 440) (434 . 437) (#("		" 0 2 (jsx-depth 1 part-side jsx)) . 434) (433 . 436) (t 26131 1416 288169 609000)) nil (26131 1418 196648 644000) 0 nil])
([nil nil ((432 . 445) (t 26131 1418 201508 759000)) nil (26131 1430 93424 980000) 0 nil])
([nil nil ((444 . 449)) nil (26131 1430 93424 670000) 0 nil])
([nil nil ((#("w" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -447) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -448) (undo-tree-id61 . -1) (undo-tree-id62 . -1) 449) nil (26131 1430 93424 70000) 0 nil])
([nil nil ((447 . 448)) nil (26131 1430 93414 420000) 0 nil])
([nil nil ((448 . 449) (t 26131 1430 98211 584000)) nil (26131 1431 912619 244000) 0 nil])
([nil nil ((#("        <div className='flex flex-col w-4/5  bg-opacity-0  h-screen  relative mb-5 '>
" 0 7 (part-side jsx) 7 8 (part-side jsx rear-nonsticky t) 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 9 12 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 12 13 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 13 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 14 22 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 22 23 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 23 83 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 83 84 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 84 85 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 85 86 (jsx-depth 1 part-side jsx)) . 69) (undo-tree-id74 . -85) (undo-tree-id75 . 28) (undo-tree-id76 . -58) (undo-tree-id77 . -58) (undo-tree-id78 . -58) (undo-tree-id79 . -58) (undo-tree-id80 . -58) (undo-tree-id81 . -58) (undo-tree-id82 . -57) (undo-tree-id83 . -57) (undo-tree-id84 . -57) (undo-tree-id85 . -57) (undo-tree-id86 . -57) (undo-tree-id87 . -57) (undo-tree-id88 . -57) (undo-tree-id89 . -57) (undo-tree-id90 . -86) 126 (t 26131 1431 914883 772000)) nil (26131 1555 959032 306000) 0 nil])
([nil nil ((149 . 151) (#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -149) (undo-tree-id63 . -1) (undo-tree-id64 . -1) 150 (148 . 150) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -148) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("/" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -149) (undo-tree-id67 . -1) (undo-tree-id68 . -1) 150 (148 . 150) (#("'" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx)) . -148) (undo-tree-id69 . -1) (undo-tree-id70 . -1) 149 (148 . 149) (#("full" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 148) (undo-tree-id71 . -3) (undo-tree-id72 . -4) (undo-tree-id73 . -4)) nil (26131 1555 959025 56000) 0 nil])
([nil nil ((#("	    </div>
" 0 5 (jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 7 10 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 11 12 (jsx-depth 1 part-side jsx)) . 785) (undo-tree-id102 . -11) (undo-tree-id103 . -10) (undo-tree-id104 . -10) (undo-tree-id105 . -10) (undo-tree-id106 . -10) (undo-tree-id107 . -12) 795 (t 26131 1555 958594 118000)) nil (26131 1565 182387 716000) 0 nil])
([nil nil ((#("	    <div className=\"flex flex-col bg-black bg-opacity-0 items-center w-full\">
		<p className=\"flex bg-black  my-9 p-2\">
		    <h2 className=\"uppercase font-light text-white text-1xl\"> neo, andrew tate, vitalik <br/>
			they all try to be <span className=\"font-bold\">SO1337</span></h2>
		</p>
		<div className=\"flex text-white mb-5 uppercase font-bold text-3xl\">No j33ts 4ll0w3d</div>
" 0 5 (jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 9 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 9 10 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 11 19 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 19 20 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 20 76 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 76 77 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 77 78 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 78 81 (jsx-depth 1 part-side jsx) 81 82 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "p" jsx-depth 1 part-side jsx) 82 83 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 1 part-side jsx) 83 84 (tag-type start tag-name "p" jsx-depth 1 part-side jsx) 84 85 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 85 93 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx) 93 94 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx) 94 118 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx) 118 119 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 119 120 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 1 part-side jsx) 120 127 (jsx-depth 1 part-side jsx) 127 128 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "h2" jsx-depth 1 part-side jsx) 128 130 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h2" jsx-depth 1 part-side jsx) 130 131 (tag-type start tag-name "h2" jsx-depth 1 part-side jsx) 131 132 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h2" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 132 140 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h2" tag-attr t jsx-depth 1 part-side jsx) 140 141 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h2" tag-attr t jsx-depth 1 part-side jsx) 141 182 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h2" tag-attr t jsx-depth 1 part-side jsx) 182 183 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h2" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 183 184 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h2" jsx-depth 1 part-side jsx) 184 211 (jsx-depth 1 part-side jsx) 211 212 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "br" jsx-depth 1 part-side jsx) 212 214 (font-lock-face web-mode-html-tag-face tag-type void tag-name "br" jsx-depth 1 part-side jsx) 214 215 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "br" jsx-depth 1 part-side jsx) 215 216 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "br" jsx-depth 1 part-side jsx) 216 229 (jsx-depth 1 part-side jsx) 229 232 (jsx-depth 1 part-side jsx) 232 239 (jsx-depth 1 part-side jsx) 239 240 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span" jsx-depth 1 part-side jsx) 240 244 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span" jsx-depth 1 part-side jsx) 244 245 (tag-type start tag-name "span" jsx-depth 1 part-side jsx) 245 246 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 246 254 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 254 255 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 255 265 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t jsx-depth 1 part-side jsx) 265 266 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 266 267 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span" jsx-depth 1 part-side jsx) 267 273 (jsx-depth 1 part-side jsx) 273 274 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span" jsx-depth 1 part-side jsx) 274 275 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span" jsx-depth 1 part-side jsx) 275 279 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span" jsx-depth 1 part-side jsx) 279 280 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span" jsx-depth 1 part-side jsx) 280 281 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h2" jsx-depth 1 part-side jsx) 281 282 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h2" jsx-depth 1 part-side jsx) 282 284 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h2" jsx-depth 1 part-side jsx) 284 285 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h2" jsx-depth 1 part-side jsx) 285 288 (jsx-depth 1 part-side jsx) 288 289 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 1 part-side jsx) 289 290 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 290 291 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 291 292 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 1 part-side jsx) 292 295 (jsx-depth 1 part-side jsx) 295 296 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 296 299 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 299 300 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 300 301 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 301 309 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 309 310 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 310 360 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 360 361 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 361 362 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 362 378 (jsx-depth 1 part-side jsx) 378 379 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 379 380 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 380 383 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 383 384 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 384 385 (jsx-depth 1 part-side jsx)) . 400) (undo-tree-id91 . -295) (undo-tree-id92 . -384) (undo-tree-id93 . -295) (undo-tree-id94 . -9) (undo-tree-id95 . -385) (undo-tree-id96 . -385) (undo-tree-id97 . -295) (undo-tree-id98 . -9) (undo-tree-id99 . -295) (undo-tree-id100 . -9) (undo-tree-id101 . -385) 409) nil (26131 1565 182385 446000) 0 nil])
([nil nil ((#("		" 0 2 (jsx-depth 1 part-side jsx)) . 366) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -389) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -374) (374 . 375) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 374) (370 . 374) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -368) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -342) (342 . 343) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 342) (338 . 342) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -330) (330 . 331) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 330) (326 . 330) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -239) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -199) (199 . 200) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 199) (195 . 199) (#("    " 0 4 (part-side jsx)) . -77) 413) nil (26131 1565 182372 736000) 0 nil])
([nil nil ((#("        </div>
" 0 8 (jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 10 13 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 13 14 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx) 14 15 (part-side jsx)) . 394) (undo-tree-id108 . -14) (undo-tree-id109 . 15) (undo-tree-id110 . -13) (undo-tree-id111 . -13) (undo-tree-id112 . -13) (undo-tree-id113 . -13) (undo-tree-id114 . -13) (undo-tree-id115 . -13) (undo-tree-id116 . -15) 407 (t 26131 1565 188622 173000)) nil (26131 1570 2924 427000) 0 nil])
([nil nil ((365 . 368) (t 26131 1570 8636 822000) 364) nil (26131 1798 687004 690000) 0 nil])
([nil nil ((368 . 371)) nil (26131 1798 687004 250000) 0 nil])
([nil nil ((368 . 379) (#("div" 0 3 (jsx-depth 1 part-side jsx)) . -368) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (undo-tree-id120 . -3) (undo-tree-id121 . -3) (undo-tree-id122 . -3) (undo-tree-id123 . -3) (undo-tree-id124 . -3) 371) nil (26131 1798 687000 940000) 0 nil])
([nil nil ((372 . 379) (t 26131 1798 689331 865000)) nil (26131 1803 290051 407000) 0 nil])
([nil nil ((373 . 382) (#("classN" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr-end 0 tag-attr t jsx-depth 1 part-side jsx)) . -373) (undo-tree-id125 . -2) (undo-tree-id126 . -2) (undo-tree-id127 . -3) (undo-tree-id128 . -3) (undo-tree-id129 . -4) (undo-tree-id130 . -4) (undo-tree-id131 . -5) (undo-tree-id132 . -5) (undo-tree-id133 . -6) (undo-tree-id134 . -6) (undo-tree-id135 . -6) (undo-tree-id136 . -6) 379) nil (26131 1803 290050 587000) 0 nil])
([nil nil ((382 . 385)) nil (26131 1803 290037 857000) 0 nil])
([nil nil ((384 . 386) (t 26131 1803 292679 190000)) nil (26131 1808 507513 886000) 0 nil])
([nil nil ((386 . 388)) nil (26131 1842 39806 107000) 0 nil])
([nil nil ((388 . 392)) nil (26131 1844 945394 543000) 0 nil] [nil nil ((388 . 397) (t 26131 1808 509361 712000)) ((#(" backgrou" 0 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 388) (undo-tree-id155 . -9) (undo-tree-id156 . -9) (undo-tree-id157 . -9) (undo-tree-id158 . -9) (undo-tree-id159 . -9) (undo-tree-id160 . -9) (undo-tree-id161 . -9) (undo-tree-id162 . -9)) (26131 1841 580052 895000) 0 nil])
([nil nil ((392 . 393) (t 26131 1844 942805 779000)) nil (26131 1850 695117 815000) 0 nil])
([nil nil ((397 . 403)) ((#("nd-img" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 397) (undo-tree-id148 . -6) (undo-tree-id149 . -6) (undo-tree-id150 . -6) (undo-tree-id151 . -6) (undo-tree-id152 . -6) (undo-tree-id153 . -6) (undo-tree-id154 . -6) (t 26131 1822 949405 601000)) (26131 1821 945418 158000) 0 nil])
([nil nil ((#("{" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -392) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) 393) nil (26131 1850 695117 85000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 410 410 nil nil nil nil #s(yas--field 2 417 417 nil nil nil nil nil)) #s(yas--field 2 417 417 nil nil nil nil nil)) nil 0 nil #s(yas--field 1 410 410 nil nil nil nil #s(yas--field 2 417 417 nil nil nil nil nil)) nil nil)) (400 . 421) (#("img" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 400) (undo-tree-id138 . -1) (undo-tree-id140 . -2) (undo-tree-id142 . -3) (undo-tree-id144 . -3) 403) ((400 . 403) (#("<img src=\"\" alt=\"\" />" 0 9 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 10 12 (tag-type void tag-name "div" jsx-depth 1 part-side jsx) 12 13 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 13 15 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 15 16 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 18 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "div" tag-attr-end 3 tag-attr t jsx-depth 1 part-side jsx) 18 19 (tag-type void tag-name "div" jsx-depth 1 part-side jsx) 19 20 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "div" jsx-depth 1 part-side jsx) 20 21 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "div" jsx-depth 1 part-side jsx)) . 400) (undo-tree-id145 . 11) (undo-tree-id146 . -10) (undo-tree-id147 . -10) (t 26131 1819 529395 205000) (apply yas--snippet-revive 400 421 #s(yas--snippet nil (#s(yas--field 1 410 410 nil nil nil nil #s(yas--field 2 417 417 nil nil nil nil nil)) #s(yas--field 2 417 417 nil nil nil nil nil)) nil 0 nil #s(yas--field 1 410 410 nil nil nil nil #s(yas--field 2 417 417 nil nil nil nil nil)) nil nil))) (26131 1821 601733 575000) 0 nil])
([nil nil ((392 . 398)) nil (26131 1850 695107 885000) 0 nil])
([nil nil ((apply yas--snippet-revive 400 421 #s(yas--snippet nil (#s(yas--field 1 410 410 nil nil nil nil #s(yas--field 2 417 417 nil nil nil nil nil)) #s(yas--field 2 417 417 nil nil nil nil nil)) nil 0 nil #s(yas--field 1 410 410 nil nil nil nil #s(yas--field 2 417 417 nil nil nil nil nil)) nil nil))) ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 410 410 nil nil nil nil #s(yas--field 2 417 417 nil nil nil nil nil)) #s(yas--field 2 417 417 nil nil nil nil nil)) nil 0 nil #s(yas--field 1 410 410 nil nil nil nil #s(yas--field 2 417 417 nil nil nil nil nil)) nil nil))) (26131 1821 601707 884000) 0 nil])
([nil nil ((398 . 399) (t 26131 1850 696156 600000)) nil (26131 2099 863727 23000) 0 nil])
nil
([nil nil ((#("[" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 392) (undo-tree-id369 . -1) (undo-tree-id370 . -1)) nil (26131 2105 617780 818000) 0 nil] [nil nil ((#("/" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -398) (undo-tree-id167 . -1) (undo-tree-id169 . -1) 399) ((398 . 399)) (26131 2099 559711 146000) 0 nil])
([nil nil ((#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 392) (undo-tree-id367 . -1) (undo-tree-id368 . -1)) nil (26131 2105 617779 558000) 0 nil])
([nil nil ((398 . 404)) ((#("./img/" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 398) (undo-tree-id349 . -6) (undo-tree-id350 . -6)) (26131 2099 271906 581000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 392) (undo-tree-id365 . -1) (undo-tree-id366 . -1)) nil (26131 2105 617778 508000) 0 nil])
([nil nil ((404 . 405) (t 26131 1861 676189 970000)) ((#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 404) (undo-tree-id347 . -1) (undo-tree-id348 . -1)) (26131 2098 975913 384000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 392) (undo-tree-id363 . -1) (undo-tree-id364 . -1)) nil (26131 2105 617777 568000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -404) (undo-tree-id170 . -1) (undo-tree-id172 . -1) 405) ((404 . 405)) (26131 2098 679953 658000) 0 nil])
([nil nil ((#("(" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 392) (undo-tree-id361 . -1) (undo-tree-id362 . -1)) nil (26131 2105 617776 208000) 0 nil])
([nil nil ((404 . 406)) ((#("to" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 404)) (26131 2098 387745 780000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 392) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1)) nil (26131 2105 617775 238000) 0 nil])
([nil nil ((#("/" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 399) (undo-tree-id321 . -1) (t 26131 1972 686527 373000)) ((399 . 400)) (26131 2098 55743 592000) 0 nil] [nil nil ((#("[" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -392) (undo-tree-id174 . -1) (undo-tree-id176 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id181 . -1) (#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -393) (undo-tree-id183 . -1) (undo-tree-id185 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id190 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -394) (undo-tree-id192 . -1) (undo-tree-id194 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id199 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -395) (undo-tree-id201 . -1) (undo-tree-id203 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id208 . -1) (#("(" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -396) (undo-tree-id210 . -1) (undo-tree-id212 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id217 . -1) (#("'" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -397) (undo-tree-id219 . -1) (undo-tree-id221 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id226 . -1) (#("." 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -398) (undo-tree-id228 . -1) (undo-tree-id230 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id235 . -1) (#("/" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -399) (undo-tree-id237 . -1) (undo-tree-id239 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id244 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -400) (undo-tree-id246 . -1) (undo-tree-id248 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id253 . -1) (#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -401) (undo-tree-id255 . -1) (undo-tree-id257 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id262 . -1) (#("g" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -402) (undo-tree-id264 . -1) (undo-tree-id266 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id271 . -1) (#("/" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -403) (undo-tree-id273 . -1) (undo-tree-id275 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id280 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -404) (undo-tree-id282 . -1) (undo-tree-id284 . -1) (undo-tree-id286 . -1) (undo-tree-id288 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -405) (undo-tree-id290 . -1) (undo-tree-id292 . -1) (undo-tree-id294 . -1) 406 (t 26131 1867 522874 408000)) ((392 . 406)) (26131 1971 341416 285000) 0 nil])
([nil nil ((#("/" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 392) (undo-tree-id351 . -1) (undo-tree-id352 . -1)) nil (26131 2105 617771 308000) 0 nil])
([nil nil ((#("." 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 398) (undo-tree-id318 . -1)) ((398 . 399)) (26131 2097 635777 214000) 0 nil])
([nil nil ((392 . 397)) ((#("token" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 392) (undo-tree-id312 . -1) (undo-tree-id313 . -4) (undo-tree-id314 . -4)) (26131 1970 997230 481000) 0 nil])
([nil nil ((392 . 397)) nil (26131 2105 617762 218000) 0 nil])
([nil nil ((398 . 413)) ((#("assets/img/toke" 0 15 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 398) (undo-tree-id339 . -15) (undo-tree-id340 . -15) (undo-tree-id341 . -15) (undo-tree-id342 . -15) (undo-tree-id343 . -15) (undo-tree-id344 . -15) (undo-tree-id345 . -15) (undo-tree-id346 . -15)) (26131 2097 419712 509000) 0 nil])
([nil nil ((#("token" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 392) (undo-tree-id295 . -1) (undo-tree-id296 . -4) (undo-tree-id298 . -5) (undo-tree-id300 . -4) (undo-tree-id302 . -4) (undo-tree-id304 . -4) (undo-tree-id306 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -4) (undo-tree-id311 . -5) (t 26131 1877 296237 447000)) ((392 . 397)) (26131 1970 457608 979000) 0 nil])
([nil nil ((399 . 400) (t 26131 2105 620146 532000)) nil (26131 2109 156700 4000) 0 nil])
([nil nil ((413 . 418)) ((#("n.png" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 413) (undo-tree-id331 . -5) (undo-tree-id332 . -5) (undo-tree-id333 . -5) (undo-tree-id334 . -5) (undo-tree-id335 . -5) (undo-tree-id336 . -5) (undo-tree-id337 . -5) (undo-tree-id338 . -5)) (26131 2097 245772 449000) 0 nil])
([nil nil ((392 . 396) (t 26131 1961 843161 83000)) ((#("head" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 392) (t 26131 1964 209834 942000)) (26131 1964 205786 119000) 0 nil])
([nil nil ((#("a" 0 1 (jsx-depth 1 part-side jsx)) . 399) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (t 26131 2109 160152 494000)) nil (26131 2121 535591 399000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 418) (undo-tree-id316 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 418) (#("/" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 418) (#("g" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 418) (#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 418) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 418)) ((418 . 419) (418 . 419) (418 . 419) (418 . 419) (418 . 419) (418 . 419)) (26131 2096 897722 672000) 0 nil])
nil
([nil nil ((399 . 401) (t 26131 2121 536840 12000)) nil (26131 2123 790251 477000) 0 nil])
([nil nil ((419 . 420) (#("à" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -419) (undo-tree-id322 . -1) 420 (418 . 420) (t 26131 1984 913231 201000)) ((#("'à" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 418) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -2) (undo-tree-id330 . -1) (419 . 420) (#(")" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 419) (t 26131 1989 653245 607000)) (26131 1989 651991 509000) 0 nil])
([nil nil ((nil rear-nonsticky nil 419 . 420) (nil part-side jsx 400 . 420) (nil jsx-depth 1 400 . 420) (400 . 420) (t 26131 2123 793510 481000)) nil (26131 2128 503368 605000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 421 . 422) (nil part-side jsx 421 . 422) (nil jsx-depth 1 421 . 422) (421 . 422) 420 (t 26131 2128 506851 754000)) nil (26131 2131 723846 29000) 0 nil])
([nil nil ((nil rear-nonsticky nil 422 . 423) (nil part-side jsx 422 . 423) (nil jsx-depth 1 422 . 423) (422 . 423) 421) nil (26131 2131 723845 589000) 0 nil])
([nil nil ((nil rear-nonsticky nil 423 . 424) (nil part-side jsx 423 . 424) (nil jsx-depth 1 423 . 424) (423 . 424) 422) nil (26131 2131 723845 169000) 0 nil])
([nil nil ((#(" " 0 1 (jsx-depth 1 part-side jsx)) . 420) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1)) nil (26131 2131 723844 699000) 0 nil])
([nil nil ((#("a" 0 1 (jsx-depth 1 part-side jsx rear-nonsticky t)) . 420) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1)) nil (26131 2131 723842 49000) 0 nil])
([nil nil ((#("a" 0 1 (jsx-depth 1 part-side jsx rear-nonsticky t)) . 420) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1)) nil (26131 2131 723837 979000) 0 nil])
([nil nil ((#("a" 0 1 (jsx-depth 1 part-side jsx rear-nonsticky t)) . 420) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (t 26131 2131 726857 178000)) nil (26131 2142 190634 152000) 0 nil])
([nil nil ((#(" " 0 1 (jsx-depth 1 part-side jsx)) . -399) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) 400) nil (26131 2142 190632 972000) 0 nil])
([nil nil ((412 . 413) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . 412)) nil (26131 2142 190623 262000) 0 nil])
([nil nil ((397 . 399) (t 26131 2142 193541 478000)) nil (26131 2148 959058 584000) 0 nil])
([nil nil ((#("g" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -398) (undo-tree-id395 . -1) (undo-tree-id396 . -1) 399) nil (26131 2148 959057 874000) 0 nil])
([nil nil ((398 . 406)) nil (26131 2155 696915 380000) 0 nil])
([nil nil ((#("cover" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 401) (undo-tree-id405 . -4) (undo-tree-id406 . -5) (undo-tree-id407 . -5) (undo-tree-id408 . -5) (undo-tree-id409 . -5) (undo-tree-id410 . -5) (undo-tree-id411 . -5) (undo-tree-id412 . -5) (undo-tree-id413 . -5) (undo-tree-id414 . -5)) nil (26131 2159 192474 108000) 0 nil] [nil nil ((406 . 412) (t 26131 2148 963552 882000)) ((#(" h-1/2" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 406) (undo-tree-id397 . -6) (undo-tree-id398 . -6) (undo-tree-id399 . -5) (undo-tree-id400 . -5) (undo-tree-id401 . -5) (undo-tree-id402 . -5) (undo-tree-id403 . -5) (undo-tree-id404 . -5) (t 26131 2154 180228 337000)) (26131 2154 177929 238000) 0 nil])
([nil nil ((401 . 405)) nil (26131 2159 192462 708000) 0 nil])
nil
([nil nil ((405 . 411) (t 26131 2159 196903 455000)) nil (26131 2165 527383 116000) 0 nil])
([nil nil ((411 . 417) (t 26131 2165 526914 118000)) nil (26131 2169 858351 462000) 0 nil])
([nil nil ((414 . 418) (#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -414) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (#("/" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -415) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -416) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) 417 (t 26131 2169 863588 91000)) nil (26131 2177 981081 361000) 0 nil])
([nil nil ((#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 408) (undo-tree-id419 . -1) (undo-tree-id420 . -1)) nil (26131 2181 694936 339000) 0 nil])
([nil nil ((#("w-/2 h-full" 0 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 4 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 406) (undo-tree-id443 . -10) (undo-tree-id444 . -10) (undo-tree-id445 . -10) (undo-tree-id446 . 7) (undo-tree-id447 . -7) (undo-tree-id448 . -7) (undo-tree-id449 . -7) (undo-tree-id450 . -2) (undo-tree-id451 . -2) (undo-tree-id452 . -2) (undo-tree-id453 . -2) (undo-tree-id454 . -2) (undo-tree-id455 . -2) (undo-tree-id456 . -2) (undo-tree-id457 . -10) (undo-tree-id458 . -10) (undo-tree-id459 . -11) (undo-tree-id460 . -11) 416) nil (26131 2185 570466 955000) 0 nil] [nil nil ((#("/" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 408) (undo-tree-id417 . -1) (undo-tree-id418 . -1)) ((408 . 409)) (26131 2181 406926 2000) 0 nil])
([nil nil ((#("1,337,000,000 SUPPLY" 0 19 (jsx-depth 1 part-side jsx) 19 20 (jsx-depth 1 part-side jsx rear-nonsticky t)) . 408) (undo-tree-id461 . -19) (undo-tree-id462 . -19) (undo-tree-id463 . -19) (undo-tree-id464 . -20) (undo-tree-id465 . -20) (undo-tree-id466 . -20) (undo-tree-id467 . -19) (undo-tree-id468 . -19) (undo-tree-id469 . -20) (undo-tree-id470 . -20) 427 (t 26131 2185 573614 556000)) nil (26131 2191 916765 774000) 0 nil])
([nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 408) (undo-tree-id415 . -1) (undo-tree-id416 . -1)) ((408 . 409)) (26131 2181 227173 749000) 0 nil])
([nil nil ((nil rear-nonsticky nil 416 . 417) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -463) (414 . 464) 408 (t 26131 2191 920291 915000)) nil (26131 2197 905209 319000) 0 nil])
([nil nil ((408 . 412)) ((#("full" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 408) (undo-tree-id435 . -4) (undo-tree-id436 . -4) (undo-tree-id437 . -3) (undo-tree-id438 . -3) (undo-tree-id439 . -3) (undo-tree-id440 . -3) (undo-tree-id441 . -3) (undo-tree-id442 . -3) (t 26131 2177 986935 109000)) (26131 2177 981055 551000) 0 nil])
([nil nil ((#("bg-token bg-fill " 0 17 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 389) (undo-tree-id471 . -16) (undo-tree-id472 . -3) (undo-tree-id473 . -16) (undo-tree-id474 . -16) (undo-tree-id475 . -3) (undo-tree-id476 . -3) (undo-tree-id477 . -3) (undo-tree-id478 . -16) (undo-tree-id479 . -16) (undo-tree-id480 . -17) (undo-tree-id481 . -17) 405 (t 26131 2197 903635 328000)) nil (26131 2204 179716 796000) 0 nil])
nil
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 388) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (t 26131 2204 183645 907000)) nil (26131 2207 617368 836000) 0 nil])
([nil nil ((#("</div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 2 5 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx)) . 390) (undo-tree-id482 . -5) (undo-tree-id483 . -6)) nil (26131 2207 618715 270000) 0 nil])
([nil nil ((#("		" 0 2 (jsx-depth 1 part-side jsx)) . -440) (undo-tree-id501 . -2) (undo-tree-id502 . -2) (undo-tree-id503 . -2) (undo-tree-id504 . -2) 442 (439 . 442) 414) nil (26131 2212 740551 839000) 0 nil] [nil nil ((nil rear-nonsticky nil 420 . 421) (nil part-side jsx 415 . 421) (nil jsx-depth 1 415 . 421) (nil tag-attr t 415 . 421) (nil tag-name "div" 415 . 421) (nil tag-type start 415 . 421) (nil font-lock-face web-mode-html-attr-value-face 415 . 421) (415 . 421) 414) ((#("</div>" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx rear-nonsticky nil)) . 415) (undo-tree-id496 . -5) (undo-tree-id497 . -5) (undo-tree-id498 . -5) (nil tag-name "div" 420 . 421) (nil tag-name "div" 415 . 420) (nil rear-nonsticky t 420 . 421)) (26131 2207 617355 96000) 0 nil])
([nil nil ((nil rear-nonsticky nil 445 . 446) (nil part-side jsx 445 . 446) (nil jsx-depth 1 445 . 446) (nil tag-name "div" 445 . 446) (nil tag-type end 445 . 446) (nil tag-end t 445 . 446) (nil font-lock-face web-mode-html-tag-bracket-face 445 . 446) (nil part-side jsx 442 . 445) (nil jsx-depth 1 442 . 445) (nil tag-name "div" 442 . 445) (nil tag-type end 442 . 445) (nil font-lock-face web-mode-html-tag-face 442 . 445) (nil part-side jsx 441 . 442) (nil jsx-depth 1 441 . 442) (nil tag-name "div" 441 . 442) (nil tag-type end 441 . 442) (nil font-lock-face web-mode-html-tag-bracket-face 441 . 442) (nil part-side jsx 440 . 441) (nil jsx-depth 1 440 . 441) (nil tag-name "div" 440 . 441) (nil tag-type end 440 . 441) (nil tag-beg 20 440 . 441) (nil font-lock-face web-mode-html-tag-bracket-face 440 . 441) (440 . 446)) nil (26131 2212 740548 609000) 0 nil])
nil
([nil nil ((444 . 446) (393 . 397) 445) nil (26131 2212 740547 679000) 0 nil])
([nil nil ((443 . 450) 398) nil (26131 2212 740547 299000) 0 nil])
([nil nil ((450 . 451)) nil (26131 2212 740546 899000) 0 nil])
([nil nil ((450 . 457) (#("p" 0 1 (jsx-depth 1 part-side jsx)) . -450) (undo-tree-id499 . -1) (undo-tree-id500 . -1) 451) nil (26131 2212 740544 379000) 0 nil])
([nil nil ((453 . 456) (t 26131 2212 743660 328000)) nil (26131 2218 240479 313000) 0 nil])
([nil nil ((456 . 458)) nil (26131 2218 240476 333000) 0 nil])
([nil nil ((458 . 473) (t 26131 2218 243669 592000)) nil (26131 2223 975723 60000) 0 nil])
([nil nil ((#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 413) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (t 26131 2223 980345 923000)) nil (26131 2240 297168 260000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 413) (undo-tree-id511 . -1) (undo-tree-id512 . -1)) nil (26131 2240 297167 120000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 413) (undo-tree-id509 . -1) (undo-tree-id510 . -1)) nil (26131 2240 297166 230000) 0 nil])
([nil nil ((#("x" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 413) (undo-tree-id507 . -1) (undo-tree-id508 . -1)) nil (26131 2240 297164 980000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 413) (undo-tree-id505 . -1) (undo-tree-id506 . -1)) nil (26131 2240 297161 770000) 0 nil])
([nil nil ((429 . 430) (t 26131 2240 300373 416000)) nil (26131 2247 570351 206000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -429) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) 430 (t 26131 2247 573719 3000)) nil (26131 2269 779352 948000) 0 nil])
([nil nil ((nil rear-nonsticky nil 483 . 484) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -597) (481 . 598) 480 (t 26131 2270 783758 103000)) nil (26131 2287 901986 0) 0 nil] [nil nil ((429 . 430)) ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 429) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1)) (26131 2269 439199 939000) 0 nil])
([nil nil ((nil rear-nonsticky nil 599 . 600) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -713) (597 . 714) 591) nil (26131 2287 901985 370000) 0 nil])
([nil nil ((430 . 432)) ((#("h-" 0 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 430) (undo-tree-id537 . -2) (undo-tree-id538 . -2) (undo-tree-id539 . -2) (undo-tree-id540 . -2) (undo-tree-id541 . -2) (undo-tree-id542 . -2) (undo-tree-id543 . -2) (undo-tree-id544 . -2) (undo-tree-id545 . -2) (undo-tree-id546 . -2)) (26131 2269 103203 412000) 0 nil])
([nil nil ((nil rear-nonsticky nil 715 . 716) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -829) (713 . 830) 707) nil (26131 2287 901982 70000) 0 nil])
([nil nil ((432 . 435) (t 26131 2250 747057 680000)) ((#("1/2" 0 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 432) (undo-tree-id527 . -2) (undo-tree-id528 . -2) (undo-tree-id529 . -2) (undo-tree-id530 . -2) (undo-tree-id531 . -2) (undo-tree-id532 . -3) (undo-tree-id533 . -3) (undo-tree-id534 . -3) (undo-tree-id535 . -3) (undo-tree-id536 . -3)) (26131 2268 803425 416000) 0 nil])
([nil nil ((363 . 369) (t 26131 2287 907120 283000)) nil (26131 2333 591312 380000) 0 nil])
([nil nil ((435 . 441) (t 26131 2252 543727 375000)) ((#(" w-1/2" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 435) (undo-tree-id523 . -5) (undo-tree-id524 . -5) (undo-tree-id525 . -5) (undo-tree-id526 . -5) (t 26131 2268 553754 346000)) (26131 2267 551736 789000) 0 nil])
([nil nil ((394 . 400) (t 26131 2333 607197 270000)) nil (26131 2346 648297 687000) 0 nil])
([nil nil ((440 . 441) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 440) (undo-tree-id520 . -1) (t 26131 2257 280402 21000)) ((440 . 441) (#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 440)) (26131 2267 351770 454000) 0 nil])
([nil nil ((#("		<div className=\"flex\">
		    <div className=\"bg-token bg-fill \"></div>
		    <p>1,337,000,000 supply</p>
		</div>
		<div className=\"flex\">
		    <div className=\"bg-token bg-fill \"></div>
		    <p>1,337,000,000 supply</p>
		</div>
		<div className=\"flex\">
		    <div className=\"bg-token bg-fill \"></div>
		    <p>1,337,000,000 supply</p>
		</div>
" 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx rear-nonsticky t) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 8 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 22 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 22 23 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 23 24 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 24 31 (jsx-depth 1 part-side jsx) 31 32 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 32 35 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 35 36 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 36 37 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 37 45 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 45 46 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 46 64 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 64 65 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 65 66 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 66 67 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 67 68 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 68 71 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 71 72 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 72 79 (jsx-depth 1 part-side jsx) 79 80 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p" jsx-depth 1 part-side jsx) 80 81 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 1 part-side jsx) 81 82 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 1 part-side jsx) 82 102 (jsx-depth 1 part-side jsx) 102 103 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 1 part-side jsx) 103 104 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 104 105 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 105 106 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 1 part-side jsx) 106 109 (jsx-depth 1 part-side jsx) 109 110 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 110 111 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 111 114 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 114 115 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 115 116 (jsx-depth 1 part-side jsx) 116 117 (jsx-depth 1 part-side jsx) 117 118 (jsx-depth 1 part-side jsx rear-nonsticky t) 118 119 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 119 122 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 122 123 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 123 124 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 124 132 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 132 133 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 133 138 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 138 139 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 139 140 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 140 147 (jsx-depth 1 part-side jsx) 147 148 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 148 151 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 151 152 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 152 153 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 153 161 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 161 162 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 162 180 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 180 181 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 181 182 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 182 183 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 183 184 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 184 187 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 187 188 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 188 195 (jsx-depth 1 part-side jsx) 195 196 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p" jsx-depth 1 part-side jsx) 196 197 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 1 part-side jsx) 197 198 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 1 part-side jsx) 198 218 (jsx-depth 1 part-side jsx) 218 219 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 1 part-side jsx) 219 220 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 220 221 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 221 222 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 1 part-side jsx) 222 225 (jsx-depth 1 part-side jsx) 225 226 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 226 227 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 227 230 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 230 231 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 231 232 (jsx-depth 1 part-side jsx) 232 233 (jsx-depth 1 part-side jsx) 233 234 (jsx-depth 1 part-side jsx rear-nonsticky t) 234 235 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 235 238 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 238 239 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 239 240 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 240 248 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 248 249 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 249 254 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 254 255 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 255 256 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 256 263 (jsx-depth 1 part-side jsx) 263 264 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 264 267 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 267 268 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 268 269 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 269 277 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 277 278 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 278 296 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 296 297 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 297 298 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 298 299 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 299 300 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 300 303 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 303 304 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 304 311 (jsx-depth 1 part-side jsx) 311 312 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p" jsx-depth 1 part-side jsx) 312 313 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 1 part-side jsx) 313 314 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 1 part-side jsx) 314 334 (jsx-depth 1 part-side jsx) 334 335 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 1 part-side jsx) 335 336 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 336 337 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 337 338 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 1 part-side jsx) 338 341 (jsx-depth 1 part-side jsx) 341 342 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 342 343 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 343 346 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 346 347 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 347 348 (jsx-depth 1 part-side jsx)) . 494) (undo-tree-id557 . -347) (undo-tree-id558 . -347) (undo-tree-id559 . -23) (undo-tree-id560 . -347) (undo-tree-id561 . -23) (undo-tree-id562 . -347) (undo-tree-id563 . -23) (undo-tree-id564 . -347) (undo-tree-id565 . -348) 841 (t 26131 2346 650552 576000)) nil (26131 2355 223942 587000) 0 nil])
([nil nil ((434 . 435) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 434) (undo-tree-id522 . -1) (t 26131 2262 620411 18000)) ((434 . 435) (#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 434) (t 26131 2266 70416 828000)) (26131 2266 65586 489000) 0 nil])
([nil nil ((369 . 376) (t 26131 2355 223900 351000)) nil (26131 2366 776444 899000) 0 nil])
nil
([nil nil ((407 . 410) (t 26131 2366 780586 487000)) nil (26131 2376 409019 526000) 0 nil])
([nil nil ((410 . 413)) nil (26131 2376 409016 486000) 0 nil])
([nil nil ((#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 410) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (t 26131 2376 413936 49000)) nil (26131 2405 221666 765000) 0 nil])
([nil nil ((#("/" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 410) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1)) nil (26131 2405 221665 735000) 0 nil])
([nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 410) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1)) nil (26131 2405 221663 265000) 0 nil])
([nil nil ((410 . 412)) nil (26131 2423 443727 869000) 0 nil])
([nil nil ((#(" w-1/2 h-48" 0 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 401) (undo-tree-id595 . -10) (undo-tree-id596 . -10) (undo-tree-id597 . -10) (undo-tree-id598 . -10) (undo-tree-id599 . -10) (undo-tree-id600 . -11) (undo-tree-id601 . -11)) nil (26131 2446 160076 760000) 0 nil] [nil nil ((456 . 458) (t 26131 2405 223984 583000)) ((#("ii" 0 2 (jsx-depth 1 part-side jsx)) . 456) (undo-tree-id586 . -2) (undo-tree-id587 . -2) (undo-tree-id588 . -2) (undo-tree-id589 . -2) (undo-tree-id590 . -2) (undo-tree-id591 . -2) (undo-tree-id592 . -2) (undo-tree-id593 . -2) (undo-tree-id594 . -2)) (26131 2423 55796 491000) 0 nil])
([nil nil ((#("fill" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 438) (undo-tree-id631 . -4) (undo-tree-id632 . -3) (undo-tree-id633 . -4) (undo-tree-id634 . -4) (undo-tree-id635 . -4) (undo-tree-id636 . -4) (undo-tree-id637 . -4) (undo-tree-id638 . -4) (undo-tree-id639 . -4) (undo-tree-id640 . -4) (undo-tree-id641 . -4) (undo-tree-id642 . -4) (undo-tree-id643 . -4) (undo-tree-id644 . -4) (undo-tree-id645 . -4) (undo-tree-id646 . -4) (undo-tree-id647 . -4) (t 26131 2447 167388 575000)) nil (26131 2451 139092 260000) 0 nil] [nil nil ((nil rear-nonsticky nil 452 . 453) (nil part-side jsx 442 . 453) (nil jsx-depth 1 442 . 453) (nil tag-attr t 442 . 453) (nil tag-name "div" 442 . 453) (nil tag-type start 442 . 453) (nil font-lock-face web-mode-html-attr-value-face 442 . 453) (442 . 453)) ((#(" w-1/2 h-48" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 6 10 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx rear-nonsticky nil)) . 442) (undo-tree-id616 . -3) (undo-tree-id617 . -3) (undo-tree-id618 . 5) (undo-tree-id619 . -3) (undo-tree-id620 . -3) (undo-tree-id621 . -3) (undo-tree-id622 . -3) (undo-tree-id623 . -3) (undo-tree-id624 . -3) (undo-tree-id625 . -3) (undo-tree-id626 . -3) (undo-tree-id627 . -3) (undo-tree-id628 . -3) (undo-tree-id629 . -3) (undo-tree-id630 . -3) (nil tag-name "div" 452 . 453) (nil tag-name "div" 448 . 452) (nil tag-name "div" 447 . 448) (nil tag-name "div" 446 . 447) (nil tag-name "div" 445 . 446) (nil tag-name "div" 442 . 445) (nil rear-nonsticky t 452 . 453)) (26131 2445 870744 430000) 0 nil])
([nil nil ((458 . 467) (t 26131 2416 977337 716000)) ((#("aiiaiaiia" 0 9 (jsx-depth 1 part-side jsx)) . 458) (undo-tree-id578 . -9) (undo-tree-id579 . -9) (undo-tree-id580 . -8) (undo-tree-id581 . -8) (undo-tree-id582 . -8) (undo-tree-id583 . -8) (undo-tree-id584 . -8) (undo-tree-id585 . -8) (t 26131 2420 467343 595000)) (26131 2420 464111 33000) 0 nil])
([nil nil ((438 . 443)) nil (26131 2451 139076 820000) 0 nil])
([nil nil ((#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 445) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (t 26131 2431 100694 841000)) ((445 . 446)) (26131 2445 578717 74000) 0 nil])
nil
([nil nil ((401 . 403) (t 26131 2451 144061 941000)) nil (26131 2468 43586 30000) 0 nil])
([nil nil ((#("/" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 445) (undo-tree-id604 . -1) (undo-tree-id605 . -1)) ((445 . 446)) (26131 2445 390731 840000) 0 nil])
([nil nil ((403 . 404) (t 26131 2468 47423 750000)) nil (26131 2474 998800 905000) 0 nil])
([nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 445) (undo-tree-id602 . -1) (undo-tree-id603 . -1)) ((445 . 446) (t 26131 2444 280717 45000)) (26131 2443 272286 636000) 0 nil])
([nil nil ((#("(" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -403) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) 404) nil (26131 2474 998800 605000) 0 nil])
([nil nil ((445 . 449)) ((#("full" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 445) (undo-tree-id608 . -4) (undo-tree-id609 . -4) (undo-tree-id610 . -3) (undo-tree-id611 . -3) (undo-tree-id612 . -3) (undo-tree-id613 . -3) (undo-tree-id614 . -3) (undo-tree-id615 . -3) (t 26131 2439 934043 57000)) (26131 2439 929498 813000) 0 nil])
([nil nil ((403 . 406)) nil (26131 2474 998799 285000) 0 nil])
nil
([nil nil ((#("/" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -404) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -405) (undo-tree-id654 . -1) (undo-tree-id655 . -1) 406) nil (26131 2474 998798 945000) 0 nil])
([nil nil ((404 . 410)) nil (26131 2474 998797 245000) 0 nil])
([nil nil ((#("(" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -409) (undo-tree-id650 . -1) (undo-tree-id651 . -1) 410) nil (26131 2474 998796 985000) 0 nil])
([nil nil ((409 . 411)) nil (26131 2474 998795 65000) 0 nil])
([nil nil ((#("/" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -410) (undo-tree-id648 . -1) (undo-tree-id649 . -1) 411) nil (26131 2474 998794 445000) 0 nil])
([nil nil ((410 . 413)) nil (26131 2474 998785 975000) 0 nil])
([nil nil ((455 . 469) (t 26131 2475 768 797000)) nil (26131 2488 122161 507000) 0 nil])
([nil nil ((#("cover" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 450) (undo-tree-id659 . -4) (undo-tree-id660 . -5) (undo-tree-id661 . -5) (t 26131 2488 127457 576000)) nil (26131 2497 697796 131000) 0 nil])
([nil nil ((450 . 457)) nil (26131 2497 697786 661000) 0 nil])
([nil nil ((457 . 460) (t 26131 2497 700807 38000)) nil (26131 2503 54205 823000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -459) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) 460) nil (26131 2503 54205 33000) 0 nil])
([nil nil ((459 . 467)) nil (26131 2503 54193 863000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -458) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -459) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -460) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -461) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -462) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (#("p" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -463) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -464) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -465) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -466) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) 467 (t 26131 2503 54149 389000)) nil (26131 2509 412355 471000) 0 nil])
([nil nil ((458 . 462) (t 26131 2509 414160 104000)) nil (26131 2514 359764 810000) 0 nil])
([nil nil ((458 . 473) (#("just" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -458) (undo-tree-id712 . -1) (undo-tree-id713 . -3) (undo-tree-id714 . -3) (undo-tree-id715 . -4) (undo-tree-id716 . -4) (undo-tree-id717 . -4) (undo-tree-id718 . -4) 462) nil (26131 2514 359762 550000) 0 nil])
([nil nil ((473 . 480) (t 26131 2514 364168 442000)) nil (26131 2516 393897 181000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 467) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (t 26131 2516 397505 201000)) nil (26131 2521 183658 833000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 467) (undo-tree-id737 . -1) (undo-tree-id738 . -1)) nil (26131 2521 183657 773000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 467) (undo-tree-id735 . -1) (undo-tree-id736 . -1)) nil (26131 2521 183656 773000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 467) (undo-tree-id733 . -1) (undo-tree-id734 . -1)) nil (26131 2521 183654 243000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 467) (undo-tree-id731 . -1) (undo-tree-id732 . -1)) nil (26131 2521 183653 153000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 467) (undo-tree-id729 . -1) (undo-tree-id730 . -1)) nil (26131 2521 183652 53000) 0 nil])
([nil nil ((#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 466) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1)) nil (26131 2521 183650 743000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 466) (undo-tree-id719 . -1) (undo-tree-id720 . -1)) nil (26131 2521 183645 243000) 0 nil])
([nil nil ((#("justify-center" 0 14 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 458) (undo-tree-id741 . -13) (undo-tree-id742 . -13) (undo-tree-id743 . -13) (undo-tree-id744 . -8) (undo-tree-id745 . -8) (undo-tree-id746 . -8) (undo-tree-id747 . -8) (undo-tree-id748 . -8) (undo-tree-id749 . -8) (undo-tree-id750 . -8) (undo-tree-id751 . -8) (undo-tree-id752 . -13) (undo-tree-id753 . -13) (undo-tree-id754 . -14) (undo-tree-id755 . -14) 471 (t 26131 2521 190846 609000)) nil (26131 2529 428059 30000) 0 nil])
([nil nil ((458 . 467)) nil (26131 2529 428045 790000) 0 nil])
([nil nil ((467 . 480) (t 26131 2529 430860 491000)) nil (26131 2534 786736 117000) 0 nil])
([nil nil ((401 . 403) (t 26131 2534 790869 521000)) nil (26131 2544 889705 581000) 0 nil])
([nil nil ((403 . 404)) nil (26131 2544 889705 351000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -403) (undo-tree-id758 . -1) (undo-tree-id759 . -1) 404) nil (26131 2544 889704 931000) 0 nil])
([nil nil ((403 . 408)) nil (26131 2544 889703 581000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -407) (undo-tree-id756 . -1) (undo-tree-id757 . -1) 408) nil (26131 2544 889702 931000) 0 nil])
([nil nil ((407 . 410)) nil (26131 2544 889692 301000) 0 nil])
([nil nil ((521 . 523) (t 26131 2544 894219 874000)) nil (26131 2554 991631 542000) 0 nil])
([nil nil ((523 . 534)) nil (26131 2554 991628 202000) 0 nil])
([nil nil ((533 . 543) (t 26131 2554 997570 228000)) nil (26131 2560 272459 583000) 0 nil])
([nil nil ((543 . 548) (t 26131 2560 277579 122000)) nil (26131 2563 183864 387000) 0 nil])
([nil nil ((548 . 551)) nil (26131 2563 183861 167000) 0 nil])
([nil nil ((551 . 563) (t 26131 2563 187584 24000)) nil (26131 2570 380523 911000) 0 nil])
([nil nil ((563 . 564) (t 26131 2570 384262 815000)) nil (26131 2573 546977 988000) 0 nil])
([nil nil ((564 . 568) (t 26131 2573 550934 817000)) nil (26131 2576 392442 894000) 0 nil])
([nil nil ((#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . -567) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) 568 (t 26131 2576 397606 279000)) nil (26131 2579 483336 42000) 0 nil])
([nil nil ((567 . 568)) nil (26131 2579 483324 232000) 0 nil])
([nil nil ((422 . 427) (t 26131 2579 487611 484000)) nil (26131 2589 249906 317000) 0 nil])
([nil nil ((#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -426) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) 427 (t 26131 2589 254294 604000)) nil (26131 2591 562543 701000) 0 nil])
([nil nil ((426 . 427)) nil (26131 2591 562534 491000) 0 nil])
([nil nil ((415 . 416) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 415) (undo-tree-id769 . -1) (t 26131 2591 567631 834000)) nil (26131 2599 436453 72000) 0 nil])
([nil nil ((422 . 423) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 422) (undo-tree-id768 . -1)) nil (26131 2599 436449 182000) 0 nil])
([nil nil ((#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 422) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (t 26131 2599 437645 92000)) nil (26131 2602 775670 746000) 0 nil])
([nil nil ((421 . 422) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 421) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1)) nil (26131 2602 775668 96000) 0 nil])
([nil nil ((422 . 423)) nil (26131 2602 775654 656000) 0 nil])
([nil nil ((421 . 422) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 421) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (t 26131 2602 780984 58000)) nil (26131 2645 436044 645000) 0 nil])
([nil nil ((415 . 416) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 415)) ((415 . 416) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 415)) (26131 2646 736702 445000) 0 nil])
([nil nil ((421 . 422) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 421) (undo-tree-id800 . -1) (t 26131 2650 391064 262000)) nil (26131 2659 850737 234000) 0 nil] [nil nil ((#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 497) (undo-tree-id786 . -1) (undo-tree-id787 . -1)) ((497 . 498)) (26131 2644 86179 859000) 0 nil])
([nil nil ((415 . 416) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 415) (undo-tree-id801 . -1) (t 26131 2659 854413 539000)) nil (26131 2664 45304 76000) 0 nil])
([nil nil ((497 . 500) (#("ull" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 497) (undo-tree-id783 . -2) (undo-tree-id784 . -3) (undo-tree-id785 . -3)) ((497 . 500) (#("1/2" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 497)) (26131 2643 805149 810000) 0 nil])
([nil nil ((553 . 554) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . 553) (undo-tree-id802 . -1) (t 26131 2664 51087 274000)) nil (26131 2669 954534 111000) 0 nil])
([nil nil ((#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 503) (undo-tree-id781 . -1) (undo-tree-id782 . -1)) ((503 . 504)) (26131 2643 553322 955000) 0 nil])
([nil nil ((#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . 553) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (t 26131 2669 957763 890000)) nil (26131 2673 471911 393000) 0 nil])
([nil nil ((#("ull" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 503) (undo-tree-id778 . -2) (undo-tree-id779 . -3) (undo-tree-id780 . -3)) ((503 . 506)) (26131 2643 257388 429000) 0 nil])
([nil nil ((415 . 416) (#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 415) (undo-tree-id807 . -1) (t 26131 2673 477769 822000)) nil (26131 2683 890618 454000) 0 nil])
([nil nil ((503 . 506)) ((#("1/2" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 503) (undo-tree-id792 . -3) (undo-tree-id793 . -3) (undo-tree-id794 . -2) (undo-tree-id795 . -2) (undo-tree-id796 . -2) (undo-tree-id797 . -2) (undo-tree-id798 . -2) (undo-tree-id799 . -2) (t 26131 2634 804371 339000)) (26131 2634 799740 704000) 0 nil])
([nil nil ((421 . 422) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 421) (undo-tree-id805 . -1) (421 . 422) (#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 421) (undo-tree-id806 . -1)) nil (26131 2683 890616 4000) 0 nil])
nil
([nil nil ((567 . 580) (t 26131 2683 894454 36000)) nil (26131 2697 480290 994000) 0 nil])
([nil nil ((#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . -568) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . -569) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . -570) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . -571) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . -572) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (#("w" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . -573) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . -574) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . -575) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (#("g" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . -576) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . -577) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . -578) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . -579) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) 580) nil (26131 2697 480286 974000) 0 nil])
([nil nil ((568 . 579) (t 26131 2697 484476 931000)) nil (26131 2700 702458 281000) 0 nil])
([nil nil ((#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 365) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (t 26131 2700 707815 694000)) nil (26131 2718 964864 577000) 0 nil])
([nil nil ((#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 365) (undo-tree-id955 . -1) (undo-tree-id956 . -1)) nil (26131 2718 964863 527000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 365) (undo-tree-id953 . -1) (undo-tree-id954 . -1)) nil (26131 2718 964862 187000) 0 nil])
([nil nil ((365 . 368)) nil (26131 2718 964861 77000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 368) (undo-tree-id950 . 1) (undo-tree-id951 . -1) (undo-tree-id952 . -1)) nil (26131 2718 964858 857000) 0 nil])
([nil nil ((#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 372) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (t 26131 2718 971179 793000)) nil (26131 2723 967419 347000) 0 nil])
([nil nil ((#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 371) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1)) nil (26131 2723 967390 987000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 371) (undo-tree-id961 . -1) (undo-tree-id962 . -1)) nil (26131 2723 967389 607000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 371) (undo-tree-id959 . -1) (undo-tree-id960 . -1)) nil (26131 2723 967387 947000) 0 nil])
([nil nil ((371 . 374)) nil (26131 2723 967378 607000) 0 nil])
([nil nil ((413 . 414) (#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 413) (undo-tree-id969 . -1) (t 26131 2723 971188 217000)) nil (26131 2729 617384 438000) 0 nil])
([nil nil ((419 . 420) (#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 419) (undo-tree-id968 . -1)) nil (26131 2729 617381 138000) 0 nil])
([nil nil ((nil rear-nonsticky nil 619 . 620) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -858) (617 . 859) 616 (t 26131 2729 621197 735000)) nil (26131 2737 14891 938000) 0 nil])
([nil nil ((618 . 859) 620) nil (26131 2737 14891 398000) 0 nil])
([nil nil ((618 . 859) 620) nil (26131 2737 14888 768000) 0 nil])
([nil nil ((408 . 409) (t 26131 2737 21210 201000)) nil (26131 2978 877049 11000) 0 nil])
([nil nil ((#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -408) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) 409) nil (26131 2978 877048 161000) 0 nil])
([nil nil ((408 . 418)) nil (26131 2978 877036 881000) 0 nil])
([nil nil ((#(" flex-wrap" 0 10 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 408) (undo-tree-id973 . -9) (undo-tree-id974 . -9) (undo-tree-id975 . -9) (undo-tree-id976 . -10) (undo-tree-id977 . -10) (undo-tree-id978 . -10) (undo-tree-id979 . -10) (undo-tree-id980 . -9) (undo-tree-id981 . -9) (undo-tree-id982 . -9) (undo-tree-id983 . -9) (undo-tree-id984 . -9) (undo-tree-id985 . -9) (undo-tree-id986 . -10) (undo-tree-id987 . -10) (t 26131 2978 878284 301000)) nil (26131 2992 417865 127000) 0 nil])
([nil nil ((nil rear-nonsticky nil 372 . 373) (nil part-side jsx 363 . 373) (nil jsx-depth 1 363 . 373) (nil tag-attr t 363 . 373) (nil tag-name "div" 363 . 373) (nil tag-type start 363 . 373) (nil font-lock-face web-mode-html-attr-value-face 363 . 373) (363 . 373) 362) nil (26131 2992 417854 337000) 0 nil])
([nil nil ((373 . 374)) nil (26131 3037 659979 18000) 0 nil])
([nil nil ((433 . 434) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 433) (undo-tree-id989 . -1) (t 26131 3038 671718 364000)) nil (26131 3041 10613 210000) 0 nil] [nil nil ((435 . 436) (#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 435) (undo-tree-id988 . -1) (t 26131 2992 424973 790000)) ((435 . 436) (#("9" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 435) (t 26131 3035 488379 668000)) (26131 3035 480795 141000) 0 nil])
([nil nil ((674 . 675) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 674) (undo-tree-id990 . -1) (t 26131 3041 15055 645000)) nil (26131 3126 429754 938000) 0 nil])
nil
([nil nil ((144 . 145) (#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 144) (undo-tree-id1013 . -1) (t 26131 3127 441869 662000)) nil (26131 3142 252803 269000) 0 nil] [nil nil ((376 . 377) (#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 376) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (t 26131 3058 8417 876000)) ((376 . 377) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 376)) (26131 3126 31143 965000) 0 nil] [nil nil ((378 . 379) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 378) (undo-tree-id991 . -1) (t 26131 3044 971728 977000)) ((378 . 379) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 378) (t 26131 3054 608412 76000)) (26131 3054 601458 891000) 0 nil])
([nil nil ((144 . 145) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 144) (undo-tree-id1014 . -1) (t 26131 3142 261894 945000)) nil (26131 3173 219502 223000) 0 nil])
([nil nil ((378 . 379) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 378)) ((378 . 379) (#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 378)) (26131 3125 539473 483000) 0 nil])
nil
([nil nil ((186 . 187) (#("p" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 186) (undo-tree-id1017 . -1)) nil (26131 3175 327167 814000) 0 nil] [nil nil ((189 . 190) (t 26131 3153 528580 832000)) ((#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 189) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (t 26131 3171 945278 917000)) (26131 3171 943323 686000) 0 nil])
([nil nil ((382 . 383) (#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 382) (t 26131 3077 745118 214000)) ((382 . 383) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 382)) (26131 3125 175281 197000) 0 nil] [nil nil ((382 . 383) (#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 382) (undo-tree-id997 . -1) (t 26131 3069 445104 53000)) ((382 . 383) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 382) (t 26131 3076 48448 652000)) (26131 3075 34630 728000) 0 nil])
([nil nil ((189 . 190) (t 26131 3175 331951 361000)) nil (26131 3181 455897 214000) 0 nil])
nil
([nil nil ((384 . 385) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 384)) ((384 . 385) (#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 384) (t 26131 3121 461859 460000)) (26131 3120 447162 710000) 0 nil])
([nil nil ((384 . 385) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 384) (undo-tree-id996 . -1)) ((384 . 385) (#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 384) (t 26131 3073 648444 558000)) (26131 3073 643232 590000) 0 nil])
([nil nil ((189 . 190) (#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 189) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (t 26131 3181 461961 818000)) nil (26131 3184 996627 51000) 0 nil])
([nil nil ((430 . 431) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 430) (t 26131 3085 288464 415000)) ((430 . 431) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 430)) (26131 3120 27242 911000) 0 nil])
nil
([nil nil ((#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 189) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (t 26131 3184 998634 518000)) nil (26131 3190 455680 339000) 0 nil])
([nil nil ((424 . 425) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 424)) ((424 . 425) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 424) (t 26131 3119 868523 408000)) (26131 3118 856656 543000) 0 nil])
([nil nil ((#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 189) (undo-tree-id1024 . 1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1)) nil (26131 3190 455679 369000) 0 nil])
([nil nil ((nil rear-nonsticky nil 630 . 631) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -679) (628 . 680) 627 (t 26131 3091 651808 605000)) ((#("
		<div className=\"flex flex-col w-1/3 h-1/3 pb-6\">
" 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx) 2 3 (jsx-depth 1 part-side jsx rear-nonsticky nil) 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 4 7 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 9 17 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 18 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 18 49 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 49 50 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 50 51 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 51 52 (jsx-depth 1 part-side jsx)) . 628) (undo-tree-id1012 . -51) (679 . 680) (nil rear-nonsticky t 630 . 631)) (26131 3118 274384 463000) 0 nil])
([nil nil ((189 . 190)) nil (26131 3190 455677 719000) 0 nil])
([nil nil ((#("		<div className=\"flex flex-col w-1/2 h-1/2 pb-6\">
" 0 2 (jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 8 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 45 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 45 46 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 46 48 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 48 49 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 49 50 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 50 51 (jsx-depth 1 part-side jsx)) . 680) (undo-tree-id1002 . -50) (undo-tree-id1004 . -2) (undo-tree-id1005 . -2) (undo-tree-id1007 . -51) 682 (t 26131 3097 48484 478000)) ((680 . 731)) (26131 3117 858902 636000) 0 nil])
([nil nil ((#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -189) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) 190) nil (26131 3190 455677 399000) 0 nil])
([nil nil ((906 . 907) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 906) (undo-tree-id1011 . -1) (t 26131 3099 785155 813000)) ((906 . 907) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 906)) (26131 3117 699112 549000) 0 nil])
([nil nil ((189 . 190)) nil (26131 3190 455675 979000) 0 nil])
([nil nil ((912 . 913) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 912) (undo-tree-id1010 . -1)) ((912 . 913) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 912)) (26131 3117 543198 943000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 190) (undo-tree-id1021 . 1)) nil (26131 3190 455673 469000) 0 nil])
([nil nil ((1153 . 1154) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1153) (undo-tree-id1009 . -1)) ((1153 . 1154) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1153)) (26131 3117 371381 146000) 0 nil])
([nil nil ((#("around" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 134) (undo-tree-id1031 . -5) (undo-tree-id1032 . -6) (undo-tree-id1033 . -6) (t 26131 3190 461977 173000)) nil (26131 3204 484059 304000) 0 nil])
([nil nil ((1147 . 1148) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1147) (undo-tree-id1008 . -1)) ((1147 . 1148) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1147) (t 26131 3112 665177 786000)) (26131 3112 660005 521000) 0 nil])
([nil nil ((134 . 136)) nil (26131 3204 484058 14000) 0 nil])
nil
([nil nil ((#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -135) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) 136) nil (26131 3204 484057 384000) 0 nil])
([nil nil ((135 . 140)) nil (26131 3204 484048 224000) 0 nil])
([nil nil ((#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -134) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -135) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -136) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -137) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -138) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -139) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) 140 (t 26131 3204 488667 768000)) nil (26131 3208 67747 681000) 0 nil])
([nil nil ((134 . 140) (t 26131 3208 75340 554000)) nil (26131 3378 298040 940000) 0 nil])
([nil nil ((70 . 77) (#("p" 0 1 (part-side jsx)) . -70) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) 71 (70 . 71) (69 . 70) (69 . 70) 175 (t 26131 3379 302299 335000)) nil (26131 3430 917521 283000) 0 nil] [nil nil ((#("min-h-fit" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 1 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 167) (undo-tree-id1190 . -8) (undo-tree-id1191 . -8) (undo-tree-id1192 . -8) (undo-tree-id1193 . -8) (undo-tree-id1195 . -9) 175) ((167 . 176)) (26131 3378 45674 408000) 0 nil] [nil nil ((#("creen" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 161) (undo-tree-id1175 . -4) (undo-tree-id1176 . -5) (undo-tree-id1177 . -5) (undo-tree-id1178 . -5) (t 26131 3335 258890 859000)) ((161 . 166)) (26131 3345 547924 765000) 0 nil] [nil nil ((#(" min-h-fit " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -166) (undo-tree-id1064 . -11) (undo-tree-id1066 . -11) 177 (t 26131 3211 928680 461000)) ((166 . 177)) (26131 3333 879460 422000) 0 nil])
([nil nil ((72 . 78)) nil (26131 3430 917519 183000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 167) (undo-tree-id1187 . 1) (undo-tree-id1189 . -1)) ((167 . 168)) (26131 3377 853635 519000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -160) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) 161) ((160 . 161)) (26131 3344 979851 669000) 0 nil])
([nil nil ((166 . 167)) ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 166) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1)) (26131 3333 103783 20000) 0 nil])
([nil nil ((#("c" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "pc" jsx-depth 1 part-side jsx)) . -72) (undo-tree-id1235 . -1) (#("l" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "pcl" jsx-depth 1 part-side jsx)) . -73) (undo-tree-id1236 . -1) (#("a" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "pcla" jsx-depth 1 part-side jsx)) . -74) (undo-tree-id1237 . -1) (#("s" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "pclas" jsx-depth 1 part-side jsx)) . -75) (undo-tree-id1238 . -1) (#("s" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "pclass" jsx-depth 1 part-side jsx)) . -76) (undo-tree-id1239 . -1) (#("n" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "pclassn" jsx-depth 1 part-side jsx)) . -77) (undo-tree-id1240 . -1) 78) nil (26131 3430 917518 133000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 160) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (t 26131 3350 508916 876000)) ((160 . 161)) (26131 3377 665664 520000) 0 nil])
([nil nil ((160 . 164)) ((#("full" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 160) (undo-tree-id1179 . -4) (undo-tree-id1180 . -4) (undo-tree-id1181 . -3) (undo-tree-id1182 . -3) (undo-tree-id1183 . -3) (undo-tree-id1184 . -3) (undo-tree-id1185 . -3) (undo-tree-id1186 . -3) (t 26131 3342 638903 450000)) (26131 3342 633326 661000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -160) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1070 . -1) (undo-tree-id1072 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1077 . -1) (#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -161) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1081 . -1) (undo-tree-id1083 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1088 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -162) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1092 . -1) (undo-tree-id1094 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1099 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -163) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1103 . -1) (undo-tree-id1105 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1110 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -164) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1114 . -1) (undo-tree-id1116 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1121 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -165) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1125 . -1) (undo-tree-id1127 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1132 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -166) (undo-tree-id1134 . -1) (undo-tree-id1136 . -1) (undo-tree-id1138 . -1) 167 (t 26131 3305 102172 747000)) ((160 . 167)) (26131 3332 559840 735000) 0 nil])
([nil nil ((84 . 86) (72 . 85)) nil (26131 3430 917513 43000) 0 nil])
([nil nil ((#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 160) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1)) ((160 . 161)) (26131 3377 457481 921000) 0 nil])
nil
([nil nil ((160 . 164)) ((#("1/2 " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 160) (undo-tree-id1154 . 3) (undo-tree-id1155 . -2) (undo-tree-id1156 . -2) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1)) (26131 3332 267836 613000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . -85) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) 86) nil (26131 3430 917511 523000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 160) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1)) ((160 . 161)) (26131 3377 229768 172000) 0 nil])
([nil nil ((#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -160) (undo-tree-id1139 . -1) 161 (t 26131 3309 922180 969000)) ((160 . 161)) (26131 3332 7758 162000) 0 nil])
([nil nil ((85 . 87)) nil (26131 3430 917498 93000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 160) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1)) ((160 . 161)) (26131 3376 945763 130000) 0 nil])
([nil nil ((160 . 161) (t 26131 3314 608855 631000)) ((#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 160) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1)) (26131 3331 727816 769000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . -85) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . -86) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) 87 (t 26131 3430 919054 58000)) nil (26131 3432 632015 144000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 160) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1)) ((160 . 161)) (26131 3376 673692 767000) 0 nil])
([nil nil ((#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -160) (undo-tree-id1141 . -1) (undo-tree-id1143 . -1) 161) ((160 . 161)) (26131 3331 499703 489000) 0 nil])
([nil nil ((#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . -84) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) 85) nil (26131 3432 632009 584000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 160) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1)) ((160 . 161)) (26131 3376 393666 145000) 0 nil])
([nil nil ((160 . 161)) ((#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 160)) (26131 3331 251794 738000) 0 nil])
([nil nil ((84 . 90) (t 26131 3432 635723 655000)) nil (26131 3436 87559 765000) 0 nil])
([nil nil ((160 . 161)) ((#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 160) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1)) (26131 3376 113746 243000) 0 nil])
([nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 162)) ((162 . 163)) (26131 3330 947817 795000) 0 nil])
([nil nil ((#(":" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . -89) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) 90 (t 26131 3436 92396 218000)) nil (26131 3438 846847 484000) 0 nil])
([nil nil ((#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -160) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) 161) ((160 . 161)) (26131 3375 861642 211000) 0 nil])
([nil nil ((162 . 163)) ((#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 162) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1)) (26131 3330 659745 712000) 0 nil])
([nil nil ((#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . -85) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . -86) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . -87) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t jsx-depth 1 part-side jsx)) . -88) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) 89 (t 26131 3438 849067 587000)) nil (26131 3444 139329 707000) 0 nil])
([nil nil ((160 . 162)) ((#("3." 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 160) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -2) (undo-tree-id1229 . -1) (undo-tree-id1230 . -2)) (26131 3375 645685 420000) 0 nil])
([nil nil ((#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 162) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (t 26131 3317 685527 547000)) ((162 . 163)) (26131 3330 391314 369000) 0 nil])
([nil nil ((85 . 90)) nil (26131 3444 139287 597000) 0 nil])
([nil nil ((#("." 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -161) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) 162) ((161 . 162)) (26131 3375 301755 556000) 0 nil])
([nil nil ((162 . 163)) ((#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 162)) (26131 3330 227418 672000) 0 nil])
([nil nil ((90 . 97)) nil (26131 3444 139283 987000) 0 nil])
([nil nil ((161 . 163)) ((#("/4" 0 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 161) (undo-tree-id1214 . -2) (undo-tree-id1215 . -2) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (t 26131 3373 365622 539000)) (26131 3373 363042 914000) 0 nil])
([nil nil ((#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -160) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) 161) ((160 . 161)) (26131 3330 31569 584000) 0 nil])
([nil nil ((#("p" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "divp" jsx-depth 1 part-side jsx)) . 74) (71 . 74) (t 26131 3444 139076 612000)) nil (26131 3458 501790 422000) 0 nil])
nil
([nil nil ((160 . 161)) ((#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 160) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (t 26131 3325 322207 242000)) (26131 3325 315059 406000) 0 nil])
([nil nil ((#("p" 0 1 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx)) . 103) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1)) nil (26131 3458 501790 32000) 0 nil])
nil
([nil nil ((103 . 106)) nil (26131 3458 501788 462000) 0 nil])
([nil nil ((#("</div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 2 5 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx)) . 101) (undo-tree-id1288 . -5) (undo-tree-id1289 . -5) (undo-tree-id1290 . -5) (undo-tree-id1291 . 1) (undo-tree-id1292 . -2) (undo-tree-id1293 . -2) (undo-tree-id1294 . -2) (undo-tree-id1295 . -2) (undo-tree-id1296 . -2) (undo-tree-id1297 . -2) (undo-tree-id1298 . -4) (undo-tree-id1299 . -4) (undo-tree-id1300 . -4) (undo-tree-id1301 . -4) (undo-tree-id1302 . -5) (undo-tree-id1303 . -5) (undo-tree-id1304 . -6) (undo-tree-id1305 . -6)) nil (26131 3460 252796 767000) 0 nil])
([nil nil ((1411 . 1413) 1410) nil (26131 3464 123839 924000) 0 nil] [nil nil ((1413 . 1414) (1411 . 1413) 1410) ((#("
	" 0 2 (part-side jsx)) . 1411) (undo-tree-id1314 . -2) (undo-tree-id1315 . -2) (#("p" 0 1 (part-side jsx)) . 1413)) (26131 3460 250386 701000) 0 nil] [nil nil ((nil rear-nonsticky nil 1415 . 1416) (nil part-side jsx 1415 . 1416) (nil jsx-depth 1 1415 . 1416) (nil tag-name "div" 1415 . 1416) (nil tag-type end 1415 . 1416) (nil tag-end t 1415 . 1416) (nil font-lock-face web-mode-html-tag-bracket-face 1415 . 1416) (nil part-side jsx 1412 . 1415) (nil jsx-depth 1 1412 . 1415) (nil tag-name "div" 1412 . 1415) (nil tag-type end 1412 . 1415) (nil font-lock-face web-mode-html-tag-face 1412 . 1415) (nil part-side jsx 1411 . 1412) (nil jsx-depth 1 1411 . 1412) (nil tag-name "div" 1411 . 1412) (nil tag-type end 1411 . 1412) (nil font-lock-face web-mode-html-tag-bracket-face 1411 . 1412) (nil part-side jsx 1410 . 1411) (nil jsx-depth 1 1410 . 1411) (nil tag-name "div" 1410 . 1411) (nil tag-type end 1410 . 1411) (nil tag-beg 20 1410 . 1411) (nil font-lock-face web-mode-html-tag-bracket-face 1410 . 1411) (1410 . 1416)) ((#("</div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 2 5 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx rear-nonsticky nil)) . 1410) (undo-tree-id1311 . -5) (undo-tree-id1312 . -4) (undo-tree-id1313 . -4) (nil tag-name "div" 1410 . 1411) (nil tag-name "div" 1411 . 1412) (nil tag-name "div" 1412 . 1415) (nil tag-name "div" 1415 . 1416) (nil rear-nonsticky t 1415 . 1416)) (26131 3458 501772 382000) 0 nil])
([nil nil ((1413 . 1415)) nil (26131 3464 123839 134000) 0 nil])
nil
nil
([nil nil ((1415 . 1419)) nil (26131 3464 123836 154000) 0 nil])
([nil nil ((1409 . 1413) (1393 . 1394) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 1393) (1380 . 1384) (1290 . 1291) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 1290) (1205 . 1206) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 1205) (1150 . 1154) (1137 . 1141) (1047 . 1048) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 1047) (962 . 963) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 962) (907 . 911) (894 . 898) (804 . 805) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 804) (719 . 720) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 719) (664 . 668) (651 . 655) (561 . 562) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 561) (476 . 477) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 476) (421 . 425) (372 . 373) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 372) (363 . 364) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 363) (272 . 276) (231 . 232) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 231) (110 . 114) 1419 (t 26131 3464 129110 714000)) nil (26131 3466 468388 328000) 0 nil])
([nil nil ((86 . 91) (t 26131 3466 472448 45000)) nil (26131 3479 661234 559000) 0 nil])
([nil nil ((104 . 115) (t 26131 3479 665803 886000)) nil (26131 3493 315084 871000) 0 nil])
([nil nil ((#("	<div classname=\"flex w-full h-full bg-red-100\">
" 0 1 (part-side jsx) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 2 5 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 5 6 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 12 13 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 13 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 14 15 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 15 16 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 22 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 22 46 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 46 47 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 47 48 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 48 49 (jsx-depth 1 part-side jsx)) . 69) (undo-tree-id1322 . -48) (undo-tree-id1323 . -48) (undo-tree-id1324 . -48) (undo-tree-id1325 . 1) (undo-tree-id1326 . -48) (undo-tree-id1327 . -48) (undo-tree-id1328 . 3) (undo-tree-id1329 . -48) (undo-tree-id1330 . -47) (undo-tree-id1331 . -47) (undo-tree-id1332 . -17) (undo-tree-id1333 . -17) (undo-tree-id1334 . -46) (undo-tree-id1335 . -46) (undo-tree-id1336 . -45) (undo-tree-id1337 . -45) (undo-tree-id1338 . -45) (undo-tree-id1339 . -45) (undo-tree-id1340 . -48) (undo-tree-id1341 . -48) (undo-tree-id1342 . -47) (undo-tree-id1343 . -47) (undo-tree-id1344 . -46) (undo-tree-id1345 . -46) (undo-tree-id1346 . -46) (undo-tree-id1347 . -46) (undo-tree-id1348 . -49) 115 (t 26131 3493 319160 512000)) nil (26131 3512 952715 96000) 0 nil])
([nil nil ((#("	</div>
" 0 1 (jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx) 7 8 (part-side jsx)) . 1387) (undo-tree-id1316 . -7) (undo-tree-id1317 . -6) (undo-tree-id1318 . -6) (undo-tree-id1319 . -6) (undo-tree-id1320 . -6) (undo-tree-id1321 . -8) 1393) nil (26131 3512 952704 956000) 0 nil])
([nil nil ((#("    " 0 4 (jsx-depth 1 part-side jsx)) . -1372) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -1357) (1357 . 1358) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 1357) (1353 . 1357) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -1344) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -1255) (1255 . 1256) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 1255) (1251 . 1255) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -1167) (1167 . 1168) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 1167) (1163 . 1167) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -1112) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -1103) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -1014) (1014 . 1015) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 1014) (1010 . 1014) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -926) (926 . 927) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 926) (922 . 926) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -871) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -862) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -773) (773 . 774) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 773) (769 . 773) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -685) (685 . 686) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 685) (681 . 685) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -630) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -621) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -532) (532 . 533) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 532) (528 . 532) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -444) (444 . 445) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 444) (440 . 444) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -389) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -341) (341 . 342) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 341) (337 . 341) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -329) (329 . 330) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 329) (325 . 329) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -238) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . -198) (198 . 199) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 198) (194 . 198) (#("    " 0 4 (part-side jsx)) . -77) 1392) nil (26131 3512 952690 736000) 0 nil])
([nil nil ((nil rear-nonsticky nil 76 . 77) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -172) (68 . 173) 67 (t 26131 3512 955860 678000)) nil (26131 3667 836003 611000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1490 . 1491) (#("
" 0 1 (part-side jsx)) . -1497) (1482 . 1498) 1476) nil (26131 3866 350198 904000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 466) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (t 26131 3867 359798 618000)) nil (26131 3897 676578 262000) 0 nil] [nil nil ((1480 . 1484) (1464 . 1465) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 1464) (1451 . 1455) (1361 . 1362) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 1361) (1276 . 1277) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 1276) (1221 . 1225) (1208 . 1212) (1118 . 1119) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 1118) (1033 . 1034) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 1033) (978 . 982) (965 . 969) (875 . 876) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 875) (790 . 791) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 790) (735 . 739) (722 . 726) (632 . 633) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 632) (547 . 548) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 547) (492 . 496) (443 . 444) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 443) (434 . 435) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 434) (343 . 347) (302 . 303) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 302) (181 . 185) 1491) ((#("    " 0 4 (jsx-depth 1 part-side jsx)) . 181) (302 . 306) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 302) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 343) (434 . 438) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 434) (443 . 447) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 443) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 492) (547 . 551) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 547) (632 . 636) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 632) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 722) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 735) (790 . 794) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 790) (875 . 879) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 875) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 965) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 978) (1033 . 1037) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 1033) (1118 . 1122) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 1118) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 1208) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 1221) (1276 . 1280) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 1276) (1361 . 1365) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 1361) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 1451) (1464 . 1468) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 1464) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 1480)) (26131 3865 787211 612000) 0 nil])
([nil nil ((#("around" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 238) (undo-tree-id1424 . -5) (undo-tree-id1425 . -6) (undo-tree-id1426 . -6) (undo-tree-id1427 . -6) (undo-tree-id1428 . -6) (t 26131 3898 689852 65000)) nil (26131 4353 714520 564000) 0 nil] [nil nil ((#("items-center" 0 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 129) (undo-tree-id1417 . -11) (undo-tree-id1418 . -11) (undo-tree-id1419 . -11) (undo-tree-id1420 . -11) (undo-tree-id1421 . -11) (undo-tree-id1422 . -12) (undo-tree-id1423 . -12) 140 (t 26131 3884 979828 677000)) ((129 . 141) (t 26131 3896 576515 127000)) (26131 3896 572379 394000) 0 nil])
([nil nil ((484 . 485) (#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 484) (t 26131 3809 696366 912000)) ((484 . 485) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 484)) (26131 3865 511676 361000) 0 nil] [nil nil ((478 . 479) (#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 478) (t 26131 3667 839458 240000)) ((478 . 479) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 478)) (26131 3808 435300 840000) 0 nil])
([nil nil ((238 . 244) (t 26131 4354 727364 31000)) ((#("evenly" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 238)) (26131 4380 502684 717000) 0 nil] [nil nil ((238 . 245)) ((#("between" 0 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 238) (undo-tree-id1429 . -7) (undo-tree-id1430 . -7) (undo-tree-id1431 . -6) (undo-tree-id1432 . -6) (undo-tree-id1433 . -6) (undo-tree-id1434 . -6) (undo-tree-id1435 . -6) (undo-tree-id1436 . -6) (t 26131 3905 413196 870000)) (26131 3905 409001 993000) 0 nil])
nil
([nil nil ((486 . 487) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 486)) ((486 . 487) (#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 486) (t 26131 3864 63126 325000)) (26131 3863 51260 902000) 0 nil])
([nil nil ((480 . 481) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 480)) ((480 . 481) (#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 480)) (26131 3807 883390 325000) 0 nil])
([nil nil ((#("token" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 807) (undo-tree-id1502 . -4) (undo-tree-id1503 . -5) (undo-tree-id1504 . -5) (t 26131 4381 514083 73000)) nil (26131 4409 535586 391000) 0 nil] [nil nil ((608 . 611) (#("full" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 608) (undo-tree-id1475 . -3) (undo-tree-id1477 . -4) (t 26131 4355 960699 776000)) ((608 . 612) (#("3/4" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 608)) (26131 4380 197541 754000) 0 nil] [nil nil ((#("w" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 606) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (t 26131 4013 736715 1000)) ((606 . 607)) (26131 4353 114549 928000) 0 nil] [nil nil ((#("w-full" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 107) (undo-tree-id1438 . -5) (undo-tree-id1439 . -5) (undo-tree-id1440 . -5) (undo-tree-id1441 . -5) (undo-tree-id1443 . -6) 112 (t 26131 3921 439890 875000)) ((107 . 113)) (26131 4010 983601 125000) 0 nil] [nil nil ((537 . 538) (#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 537) (undo-tree-id1437 . -1) (t 26131 3909 609870 695000)) ((537 . 538) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 537) (t 26131 3918 823219 746000)) (26131 3918 817886 222000) 0 nil])
nil
([nil nil ((536 . 537) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 536) (t 26131 3822 469722 37000)) ((536 . 537) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 536)) (26131 3862 667334 706000) 0 nil])
([nil nil ((484 . 485) (#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 484) (t 26131 3693 359501 777000)) ((484 . 485) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 484)) (26131 3807 139578 514000) 0 nil])
([nil nil ((807 . 808)) nil (26131 4409 535584 471000) 0 nil])
([nil nil ((#("full" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 614) (undo-tree-id1472 . -3) (undo-tree-id1474 . -4)) ((614 . 618)) (26131 4379 857810 986000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 606) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1)) ((606 . 607)) (26131 4352 918287 419000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 107) (undo-tree-id1445 . 1) (t 26131 3964 176630 452000)) ((107 . 108) (t 26131 3965 276632 328000)) (26131 4010 737356 19000) 0 nil])
nil
([nil nil ((779 . 780) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 779) (t 26131 3831 803071 292000)) ((779 . 780) (#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 779)) (26131 3862 195549 245000) 0 nil])
([nil nil ((486 . 487) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 486)) ((486 . 487) (#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 486) (t 26131 3805 916360 463000)) (26131 3804 905320 579000) 0 nil])
([nil nil ((#("p" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -807) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) 808) nil (26131 4409 535583 521000) 0 nil])
([nil nil ((614 . 617)) ((#("3/4" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 614)) (26131 4379 377728 745000) 0 nil])
([nil nil ((#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 606) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1)) ((606 . 607)) (26131 4352 754670 843000) 0 nil])
([nil nil ((107 . 108) (t 26131 3965 276632 328000)) ((#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 107)) (26131 4010 735928 15000) 0 nil])
([nil nil ((779 . 780) (#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 779) (undo-tree-id1414 . -1) (t 26131 3839 553084 514000)) ((779 . 780) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 779)) (26131 3862 33133 262000) 0 nil] [nil nil ((787 . 788) (#("			" 0 3 (jsx-depth 1 part-side jsx)) . 787) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -787) (undo-tree-id1410 . -1) 779) ((787 . 788) (787 . 790) (#(" " 0 1 (jsx-depth 1 part-side jsx)) . 787)) (26131 3837 47852 155000) 0 nil])
([nil nil ((530 . 531) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 530) (t 26131 3700 219513 480000)) ((530 . 531) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 530)) (26131 3804 723482 788000) 0 nil])
([nil nil ((807 . 808)) nil (26131 4409 535574 611000) 0 nil])
([nil nil ((854 . 857) (#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -854) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) 855 (#("ull" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 855) (undo-tree-id1489 . -2) (undo-tree-id1490 . -3) (undo-tree-id1491 . -3) (t 26131 4367 30721 420000)) ((854 . 858) (#("3/4" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 854)) (26131 4379 36245 221000) 0 nil])
([nil nil ((#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 606) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1)) ((606 . 607)) (26131 4352 570747 798000) 0 nil])
nil
([nil nil ((1022 . 1023) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1022) (undo-tree-id1413 . -1)) ((1022 . 1023) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1022)) (26131 3861 839448 9000) 0 nil])
nil
([nil nil ((536 . 537) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 536)) ((536 . 537) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 536)) (26131 3804 554191 207000) 0 nil])
([nil nil ((808 . 809) (t 26131 4409 537471 202000)) nil (26131 4414 773103 369000) 0 nil])
([nil nil ((848 . 850) (847 . 848) (#("full" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 847) (undo-tree-id1478 . -3) (undo-tree-id1479 . -4) (undo-tree-id1480 . -4)) ((847 . 851) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 847) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (#("/4" 0 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 848) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (t 26131 4377 207407 985000)) (26131 4377 200971 604000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 606) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1)) ((606 . 607)) (26131 4352 106626 982000) 0 nil])
([nil nil ((1265 . 1266) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1265) (undo-tree-id1412 . -1)) ((1265 . 1266) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1265) (t 26131 3847 106430 733000)) (26131 3847 97558 538000) 0 nil])
([nil nil ((779 . 780) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 779) (t 26131 3705 562855 928000)) ((779 . 780) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 779)) (26131 3804 401641 738000) 0 nil])
([nil nil ((1045 . 1049) (#("token" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1045) (undo-tree-id1505 . -4) (undo-tree-id1506 . -5) (undo-tree-id1507 . -5)) nil (26131 4414 773101 349000) 0 nil])
nil
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 606) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1)) ((606 . 607)) (26131 4351 694741 641000) 0 nil])
nil
([nil nil ((773 . 774) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 773)) ((773 . 774) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 773)) (26131 3804 239049 254000) 0 nil])
([nil nil ((#("token" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1285) (undo-tree-id1508 . -4) (undo-tree-id1509 . -5) (undo-tree-id1510 . -5) (t 26131 4414 777481 448000)) nil (26131 4429 587888 10000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 606) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1)) ((606 . 607)) (26131 4351 310744 770000) 0 nil])
([nil nil ((1016 . 1017) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1016) (t 26131 3713 59535 384000)) ((1016 . 1017) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1016)) (26131 3804 62580 246000) 0 nil])
([nil nil ((1285 . 1295)) nil (26131 4429 587878 570000) 0 nil])
([nil nil ((#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 606) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1)) ((606 . 607)) (26131 4351 102240 66000) 0 nil])
([nil nil ((1022 . 1023) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1022)) ((1022 . 1023) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1022)) (26131 3803 895319 980000) 0 nil])
([nil nil ((1295 . 1297) (t 26131 4429 594177 85000)) nil (26131 4439 123638 165000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 606) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1)) ((606 . 607)) (26131 4350 930188 47000) 0 nil])
([nil nil ((1265 . 1266) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1265)) ((1265 . 1266) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1265)) (26131 3803 722579 901000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1286) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1287) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1288) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1289) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1290) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1291) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1292) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1293) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1294) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1295) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1296) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) 1297) nil (26131 4439 123636 895000) 0 nil])
([nil nil ((#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 606) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1)) ((606 . 607)) (26131 4350 746314 262000) 0 nil])
([nil nil ((1259 . 1260) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1259)) ((1259 . 1260) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1259)) (26131 3803 557527 751000) 0 nil])
([nil nil ((#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1285) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) 1286) nil (26131 4439 123551 75000) 0 nil])
([nil nil ((#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 606) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1)) ((606 . 607)) (26131 4350 534406 660000) 0 nil])
([nil nil ((476 . 491) (t 26131 3720 876215 386000)) ((#("justify-evenly " 0 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 8 14 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 14 15 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 476) (undo-tree-id1404 . 1) (undo-tree-id1405 . -8) (undo-tree-id1406 . -8)) (26131 3803 385114 163000) 0 nil])
([nil nil ((1285 . 1294)) nil (26131 4439 123540 404000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 606) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1)) ((606 . 607)) (26131 4350 110797 188000) 0 nil])
([nil nil ((#("evenly" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 484) (undo-tree-id1361 . -5) (undo-tree-id1363 . -6) (undo-tree-id1365 . -6) (t 26131 3732 306234 885000)) ((484 . 490)) (26131 3803 220927 245000) 0 nil])
([nil nil ((#("1,337,000,000 supply" 0 20 (jsx-depth 1 part-side jsx)) . 1420) (undo-tree-id1566 . -19) (undo-tree-id1567 . -19) (undo-tree-id1568 . -19) (undo-tree-id1569 . -19) (undo-tree-id1570 . -19) (undo-tree-id1571 . -20) (undo-tree-id1572 . -20) 1439 (t 26131 4439 124195 720000)) nil (26131 4452 597818 360000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 606) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1)) ((606 . 607) (t 26131 4347 427349 757000)) (26131 4347 420464 323000) 0 nil])
([nil nil ((484 . 490)) ((#("around" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 484) (undo-tree-id1402 . -6) (undo-tree-id1403 . -6)) (26131 3803 59368 963000) 0 nil])
([nil nil ((1420 . 1439)) nil (26131 4452 597806 450000) 0 nil])
nil
([nil nil ((#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -484) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1370 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -485) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1375 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -486) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1380 . -1) (#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -487) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1385 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -488) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1390 . -1) (#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -489) (undo-tree-id1392 . -1) (undo-tree-id1394 . -1) 490 (t 26131 3737 346243 484000)) ((484 . 490)) (26131 3802 896932 451000) 0 nil])
([nil nil ((1175 . 1194) (#("1" 0 1 (jsx-depth 1 part-side jsx)) . -1175) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (#("," 0 1 (jsx-depth 1 part-side jsx)) . -1176) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (#("3" 0 1 (jsx-depth 1 part-side jsx)) . -1177) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (#("3" 0 1 (jsx-depth 1 part-side jsx)) . -1178) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (#("7" 0 1 (jsx-depth 1 part-side jsx)) . -1179) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (#("," 0 1 (jsx-depth 1 part-side jsx)) . -1180) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (#("0" 0 1 (jsx-depth 1 part-side jsx)) . -1181) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (#("0" 0 1 (jsx-depth 1 part-side jsx)) . -1182) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (#("0" 0 1 (jsx-depth 1 part-side jsx)) . -1183) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (#("," 0 1 (jsx-depth 1 part-side jsx)) . -1184) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (#("0" 0 1 (jsx-depth 1 part-side jsx)) . -1185) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (#("0" 0 1 (jsx-depth 1 part-side jsx)) . -1186) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (#("0" 0 1 (jsx-depth 1 part-side jsx)) . -1187) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (#(" " 0 1 (jsx-depth 1 part-side jsx)) . -1188) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (#("s" 0 1 (jsx-depth 1 part-side jsx)) . -1189) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (#("u" 0 1 (jsx-depth 1 part-side jsx)) . -1190) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (#("p" 0 1 (jsx-depth 1 part-side jsx)) . -1191) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (#("p" 0 1 (jsx-depth 1 part-side jsx)) . -1192) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) 1193 (#("y" 0 1 (jsx-depth 1 part-side jsx)) . 1193) (#("l" 0 1 (jsx-depth 1 part-side jsx)) . 1193) (t 26131 4452 604222 78000)) nil (26131 4469 26593 828000) 0 nil])
([nil nil ((484 . 491)) ((#("between" 0 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 484)) (26131 3802 738141 177000) 0 nil])
([nil nil ((#("y" 0 1 (jsx-depth 1 part-side jsx)) . 954)) nil (26131 4469 26183 687000) 0 nil])
([nil nil ((557 . 558) (#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 557) (t 26131 3742 129584 977000)) ((557 . 558) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 557)) (26131 3802 573906 689000) 0 nil])
([nil nil ((#("l" 0 1 (jsx-depth 1 part-side jsx)) . -953) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) 954) nil (26131 4469 26183 157000) 0 nil])
([nil nil ((800 . 801) (#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 800)) ((800 . 801) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 800)) (26131 3802 410299 392000) 0 nil])
([nil nil ((#("1" 0 1 (jsx-depth 1 part-side jsx)) . -935) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (#("," 0 1 (jsx-depth 1 part-side jsx)) . -936) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (#("3" 0 1 (jsx-depth 1 part-side jsx)) . -937) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (#("3" 0 1 (jsx-depth 1 part-side jsx)) . -938) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (#("7" 0 1 (jsx-depth 1 part-side jsx)) . -939) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (#("," 0 1 (jsx-depth 1 part-side jsx)) . -940) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (#("0" 0 1 (jsx-depth 1 part-side jsx)) . -941) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (#("0" 0 1 (jsx-depth 1 part-side jsx)) . -942) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (#("0" 0 1 (jsx-depth 1 part-side jsx)) . -943) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (#("," 0 1 (jsx-depth 1 part-side jsx)) . -944) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (#("0" 0 1 (jsx-depth 1 part-side jsx)) . -945) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (#("0" 0 1 (jsx-depth 1 part-side jsx)) . -946) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (#("0" 0 1 (jsx-depth 1 part-side jsx)) . -947) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (#(" " 0 1 (jsx-depth 1 part-side jsx)) . -948) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (#("s" 0 1 (jsx-depth 1 part-side jsx)) . -949) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (#("u" 0 1 (jsx-depth 1 part-side jsx)) . -950) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (#("p" 0 1 (jsx-depth 1 part-side jsx)) . -951) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (#("p" 0 1 (jsx-depth 1 part-side jsx)) . -952) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) 953) nil (26131 4469 26178 567000) 0 nil])
([nil nil ((1043 . 1044) (#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1043)) ((1043 . 1044) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1043)) (26131 3802 250091 646000) 0 nil])
([nil nil ((935 . 942) (t 26131 4469 34254 203000)) nil (26131 4508 800007 972000) 0 nil])
([nil nil ((1286 . 1287) (#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1286)) ((1286 . 1287) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1286)) (26131 3802 95049 641000) 0 nil])
([nil nil ((#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 478) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (t 26131 4509 811000 601000)) nil (26131 4533 741428 747000) 0 nil] [nil nil ((248 . 249) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 248) (t 26131 4472 94260 186000)) ((248 . 249) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 248) (t 26131 4503 174320 959000)) (26131 4502 161565 700000) 0 nil])
([nil nil ((496 . 497) (#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 496) (t 26131 3756 702943 173000)) ((496 . 497) (#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 496)) (26131 3801 946112 532000) 0 nil])
([nil nil ((#("/" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 478) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1)) nil (26131 4533 741427 987000) 0 nil])
([nil nil ((250 . 251) (#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 250) (undo-tree-id1740 . -1) (t 26131 4481 927612 747000)) ((250 . 251) (#("7" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 250) (t 26131 4499 760980 950000)) (26131 4499 754898 827000) 0 nil])
([nil nil ((494 . 495) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 494) (t 26131 3785 249658 539000)) ((494 . 495) (#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 494)) (26131 3801 770273 595000) 0 nil])
([nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 478) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1)) nil (26131 4533 741427 177000) 0 nil])
nil
([nil nil ((494 . 495) (#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 494) (undo-tree-id1401 . -1) (t 26131 3793 903006 633000)) ((494 . 495) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 494) (t 26131 3796 803011 583000)) (26131 3796 801196 404000) 0 nil])
([nil nil ((478 . 480)) nil (26131 4533 741426 377000) 0 nil])
nil
([nil nil ((#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 483) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1)) nil (26131 4533 741426 97000) 0 nil])
([nil nil ((#("/" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 483) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1)) nil (26131 4533 741425 57000) 0 nil])
([nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 483) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1)) nil (26131 4533 741423 707000) 0 nil])
([nil nil ((483 . 485)) nil (26131 4533 741414 877000) 0 nil])
([nil nil ((294 . 299) (t 26131 4533 747714 72000)) nil (26131 4626 794828 10000) 0 nil])
([nil nil ((490 . 491) (t 26131 4626 801229 356000)) nil (26131 4721 880280 359000) 0 nil])
([nil nil ((251 . 256)) nil (26131 4728 570532 246000) 0 nil] [nil nil ((491 . 494) (t 26131 4679 61331 540000)) ((#("md:" 0 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 491) (undo-tree-id1766 . -1) (undo-tree-id1767 . 1) (undo-tree-id1768 . -3) (undo-tree-id1769 . -3)) (26131 4721 553262 925000) 0 nil])
([nil nil ((256 . 261) (t 26131 4728 578095 28000)) nil (26131 4731 58500 415000) 0 nil])
([nil nil ((494 . 495) (t 26131 4681 704670 43000)) ((#("w" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 494) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1)) (26131 4721 144284 633000) 0 nil])
([nil nil ((#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -257) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -258) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -259) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -260) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) 261 (t 26131 4731 64766 557000)) nil (26131 4739 218146 146000) 0 nil])
([nil nil ((495 . 500) (t 26131 4698 141368 848000)) ((#("-full" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 495)) (26131 4720 244474 959000) 0 nil])
([nil nil ((257 . 260)) nil (26131 4739 218139 706000) 0 nil])
([nil nil ((#("md" 0 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 491) (undo-tree-id1753 . -1) (undo-tree-id1754 . -2) (undo-tree-id1755 . -2) (t 26131 4702 638044 307000)) ((491 . 493)) (26131 4719 900372 29000) 0 nil])
([nil nil ((#("§" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -258) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -259) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) 260) nil (26131 4739 218139 336000) 0 nil])
([nil nil ((491 . 493)) ((#("sm" 0 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 491) (undo-tree-id1756 . -2) (undo-tree-id1757 . -2) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (t 26131 4715 651403 85000)) (26131 4715 649014 524000) 0 nil])
([nil nil ((258 . 260)) nil (26131 4739 218137 726000) 0 nil])
nil
([nil nil ((#("§" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -258) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -259) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) 260) nil (26131 4739 218136 726000) 0 nil])
([nil nil ((258 . 260)) nil (26131 4739 218127 136000) 0 nil])
([nil nil ((#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -257) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) 258 (t 26131 4739 224782 514000)) nil (26131 4748 669838 216000) 0 nil])
([nil nil ((257 . 258)) nil (26131 4748 669836 896000) 0 nil])
([nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 259) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1)) nil (26131 4748 669836 196000) 0 nil])
([nil nil ((259 . 260)) nil (26131 4748 669826 866000) 0 nil])
([nil nil ((260 . 269) (t 26131 4748 678134 330000)) nil (26131 4762 718492 56000) 0 nil])
([nil nil ((#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -266) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) 267 (t 26131 4762 724828 463000)) nil (26131 4773 771981 831000) 0 nil])
([nil nil ((266 . 267)) nil (26131 4773 771970 221000) 0 nil])
([nil nil ((#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -266) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) 267 (t 26131 4773 778183 409000)) nil (26131 4778 5495 15000) 0 nil])
([nil nil ((266 . 267)) nil (26131 4778 5483 305000) 0 nil])
([nil nil ((#("/" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 267) (t 26131 4778 8191 680000)) nil (26131 4782 512955 525000) 0 nil])
([nil nil ((#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -266) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) 267) nil (26131 4782 512955 85000) 0 nil])
([nil nil ((#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 266)) nil (26131 4782 512946 845000) 0 nil])
([nil nil ((266 . 270)) nil (26131 4782 512943 545000) 0 nil])
([nil nil ((#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 262) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (t 26131 4782 521533 838000)) nil (26131 4788 715444 210000) 0 nil])
([nil nil ((261 . 262)) nil (26131 4788 715435 470000) 0 nil])
([nil nil ((#("md:w-3/4 xs:w-full" 0 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 11 18 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 252) (undo-tree-id1822 . -17) (undo-tree-id1823 . -17) (undo-tree-id1824 . -17) (undo-tree-id1825 . 8) (undo-tree-id1826 . -14) (undo-tree-id1827 . -14) (undo-tree-id1828 . -10) (undo-tree-id1829 . -10) (undo-tree-id1830 . -10) (undo-tree-id1831 . -10) (undo-tree-id1832 . -10) (undo-tree-id1833 . -10) (undo-tree-id1834 . -9) (undo-tree-id1835 . -9) (undo-tree-id1836 . -9) (undo-tree-id1837 . -9) (undo-tree-id1838 . -17) (undo-tree-id1839 . -17) (undo-tree-id1840 . -18) (undo-tree-id1841 . -18) (t 26131 4788 721545 961000)) nil (26131 4856 591160 907000) 0 nil])
([nil nil ((246 . 249) (t 26131 4856 598345 349000)) nil (26131 4862 468016 792000) 0 nil])
([nil nil ((254 . 258) (t 26131 4862 475023 506000)) nil (26131 4874 405311 225000) 0 nil])
([nil nil ((258 . 264) (t 26131 4874 411713 514000)) nil (26131 4876 970566 150000) 0 nil])
([nil nil ((#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -260) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -261) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -262) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -263) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) 264 (t 26131 4876 978385 198000)) nil (26131 4892 30926 166000) 0 nil])
([nil nil ((260 . 261)) nil (26131 4892 30918 496000) 0 nil])
([nil nil ((#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -260) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) 261) nil (26131 5025 638234 32000) 0 nil])
([nil nil ((260 . 263) (t 26131 5026 652011 192000)) ((#("4/5" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 260) (undo-tree-id1907 . -3)) (26131 5026 986401 69000) 0 nil])
([nil nil ((357 . 360) (t 26131 5028 2013 832000) 356) nil (26131 5056 588998 253000) 0 nil] [nil nil ((#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 277) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (t 26131 4892 38414 647000)) ((277 . 278)) (26131 5024 818108 312000) 0 nil])
([nil nil ((360 . 362)) nil (26131 5056 588995 243000) 0 nil])
([nil nil ((#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 277) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1)) ((277 . 278)) (26131 5024 478119 192000) 0 nil])
([nil nil ((360 . 371) (#("div" 0 3 (jsx-depth 1 part-side jsx)) . -360) (undo-tree-id1908 . -2) (undo-tree-id1909 . -2) (undo-tree-id1910 . -3) (undo-tree-id1911 . -3) (undo-tree-id1912 . -3) 363 (362 . 363) (t 26131 5056 595403 74000)) nil (26131 5062 328 598000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 277) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1)) ((277 . 278)) (26131 5024 222168 808000) 0 nil])
([nil nil ((364 . 377)) nil (26131 5062 318 348000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 277) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1)) ((277 . 278)) (26131 5023 906198 335000) 0 nil])
([nil nil ((376 . 383) (t 26131 5062 5413 654000)) nil (26131 5065 243672 148000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 277) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1)) ((277 . 278)) (26131 5023 474187 388000) 0 nil])
([nil nil ((383 . 393) (t 26131 5065 252086 670000)) nil (26131 5086 962683 732000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 277) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1)) ((277 . 278)) (26131 5023 114098 212000) 0 nil])
([nil nil ((384 . 385) (t 26131 5089 528800 804000)) nil (26131 5096 792169 697000) 0 nil] [nil nil ((395 . 396) (t 26131 5080 798783 734000)) ((#("a" 0 1 (jsx-depth 1 part-side jsx)) . 395) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (t 26131 5085 418792 767000)) (26131 5085 414876 229000) 0 nil])
([nil nil ((277 . 279)) ((#("80" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 277) (undo-tree-id1900 . -2) (undo-tree-id1901 . -2) (undo-tree-id1902 . -2) (undo-tree-id1903 . -2) (undo-tree-id1904 . -1) (undo-tree-id1905 . -2) (undo-tree-id1906 . -2)) (26131 5022 443462 309000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -384) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) 385) nil (26131 5096 792169 277000) 0 nil])
nil
([nil nil ((#("8" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -277) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -278) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) 279 (t 26131 4978 488583 684000)) ((277 . 279)) (26131 5021 890300 484000) 0 nil])
([nil nil ((384 . 392)) nil (26131 5096 792167 417000) 0 nil])
([nil nil ((277 . 279)) ((#("96" 0 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 277) (undo-tree-id1888 . -2) (undo-tree-id1889 . -2) (undo-tree-id1890 . -2) (undo-tree-id1891 . -2) (undo-tree-id1892 . -2) (undo-tree-id1893 . -2) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (t 26131 4984 118594 692000)) (26131 4984 116218 725000) 0 nil])
([nil nil ((#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -391) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) 392) nil (26131 5096 792166 347000) 0 nil])
nil
([nil nil ((391 . 395)) nil (26131 5096 792156 617000) 0 nil])
([nil nil ((#("		<div className=\"bg-head bg-contain w-50 h-50\"></div>
" 0 2 (jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 12 13 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 13 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 14 15 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 15 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 46 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 46 47 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 47 48 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 48 49 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 49 50 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 50 53 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 53 54 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 54 55 (jsx-depth 1 part-side jsx)) . 358) (undo-tree-id1920 . -54) (undo-tree-id1921 . 18) (undo-tree-id1922 . -26) (undo-tree-id1923 . -37) (undo-tree-id1924 . -37) (undo-tree-id1925 . -36) (undo-tree-id1926 . -36) (undo-tree-id1927 . -36) (undo-tree-id1928 . -36) (undo-tree-id1929 . -36) (undo-tree-id1930 . -36) (undo-tree-id1931 . -36) (undo-tree-id1932 . -36) (undo-tree-id1933 . -55) 394 (t 26131 5096 795481 678000)) nil (26131 5130 708458 205000) 0 nil])
([nil nil ((315 . 402) 347 (t 26131 5131 718880 472000)) nil (26131 5134 566793 90000) 0 nil] [nil nil ((#("token" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 583) (undo-tree-id1942 . -4) (undo-tree-id1944 . -5)) ((583 . 588)) (26131 5130 344451 939000) 0 nil] [nil nil ((315 . 370) 356) ((#("		<div className=\"bg-head bg-contain w-50 h-50\"></div>
" 0 2 (jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 8 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 46 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 46 47 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 47 48 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 48 49 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 49 50 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 50 53 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 53 54 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 54 55 (jsx-depth 1 part-side jsx)) . 315) (undo-tree-id1934 . -55) (undo-tree-id1935 . -54) (undo-tree-id1936 . -2) (undo-tree-id1937 . -2) (undo-tree-id1938 . -2) (undo-tree-id1939 . -2) (t 26131 5101 928825 51000)) (26131 5101 927188 500000) 0 nil])
([nil nil ((381 . 383) (#("full" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 381) (undo-tree-id1965 . -3) (undo-tree-id1966 . -4) (undo-tree-id1967 . -4) (t 26131 5134 572218 281000)) nil (26131 5143 713057 280000) 0 nil])
([nil nil ((583 . 586)) ((#("hed" 0 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 583) (undo-tree-id1951 . -3) (undo-tree-id1952 . -2) (undo-tree-id1953 . -3)) (26131 5130 20666 119000) 0 nil])
nil
([nil nil ((#("ull" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 387) (undo-tree-id1962 . -2) (undo-tree-id1963 . -3) (undo-tree-id1964 . -3)) nil (26131 5143 713055 990000) 0 nil])
([nil nil ((#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -585) (undo-tree-id1940 . -1) 586) ((585 . 586)) (26131 5129 620678 147000) 0 nil])
([nil nil ((#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -386) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) 387) nil (26131 5143 713053 240000) 0 nil])
([nil nil ((585 . 587)) ((#("ad" 0 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 585) (t 26131 5129 82209 669000)) (26131 5128 76633 892000) 0 nil])
([nil nil ((386 . 388)) nil (26131 5143 713041 990000) 0 nil])
([nil nil ((358 . 445) 386 (t 26131 5117 345521 860000)) ((#("		    <div className=\"bg-head bg-contain bg-center bg-no-repeat w-full h-full \"></div>
" 0 6 (jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 10 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 10 11 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 12 20 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 20 21 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 21 78 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 78 79 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 79 80 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 80 81 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 81 82 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 82 85 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 85 86 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 86 87 (jsx-depth 1 part-side jsx)) . 358) (undo-tree-id1945 . -87) (undo-tree-id1946 . -86) (undo-tree-id1947 . -6) (undo-tree-id1948 . -6) (undo-tree-id1949 . -6) (undo-tree-id1950 . -6) (t 26131 5125 162203 520000)) (26131 5125 162061 237000) 0 nil])
([nil nil ((386 . 387) (#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 386) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (t 26131 5143 718899 295000)) nil (26131 5150 94195 776000) 0 nil])
nil
([nil nil ((381 . 382) (#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 381) (undo-tree-id1968 . -1)) nil (26131 5155 287488 174000) 0 nil])
([nil nil ((381 . 382) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 381) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1)) nil (26131 5158 666347 605000) 0 nil] [nil nil ((382 . 383) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 382) (undo-tree-id1974 . -1) (t 26131 5150 95575 965000)) ((382 . 383) (#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 382) (t 26131 5154 335582 617000)) (26131 5154 331316 403000) 0 nil])
([nil nil ((386 . 387) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 386) (undo-tree-id1975 . -1)) nil (26131 5158 666342 685000) 0 nil])
nil
([nil nil ((386 . 387) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 386) (undo-tree-id1982 . -1) (t 26131 5158 672256 86000)) nil (26131 5162 376885 404000) 0 nil])
([nil nil ((381 . 382) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 381) (undo-tree-id1983 . -1) (t 26131 5162 382261 907000)) nil (26131 5165 185003 352000) 0 nil])
([nil nil ((1560 . 1564) (1544 . 1545) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 1544) (1531 . 1535) (1442 . 1443) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 1442) (1353 . 1354) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 1353) (1298 . 1302) (1285 . 1289) (1196 . 1197) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 1196) (1112 . 1113) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 1112) (1057 . 1061) (1044 . 1048) (967 . 968) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 967) (885 . 886) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 885) (830 . 834) (817 . 821) (727 . 728) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 727) (642 . 643) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 642) (587 . 591) (540 . 541) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 540) (531 . 532) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 531) (440 . 444) (399 . 400) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 399) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -321) (181 . 185) 1539 (t 26131 5165 188932 974000)) nil (26131 5210 530340 775000) 0 nil])
([nil nil ((#("
" 0 1 (jsx-depth 1 part-side jsx)) . 1542) (undo-tree-id2002 . -1)) nil (26131 5229 889618 653000) 0 nil] [nil nil ((#("		    </div>

" 0 6 (jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 8 11 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 12 13 (jsx-depth 1 part-side jsx) 13 14 (jsx-depth 1 part-side jsx)) . 1529) (undo-tree-id1993 . -13) (undo-tree-id1994 . -13) (undo-tree-id1995 . -12) (undo-tree-id1996 . -13) (undo-tree-id1997 . -13) (undo-tree-id1998 . -13) (undo-tree-id1999 . -13) (undo-tree-id2000 . -13) (undo-tree-id2001 . -14)) ((1529 . 1543)) (26131 5210 528895 752000) 0 nil] [nil nil ((#("		    </div>
" 0 6 (jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 8 11 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 12 13 (jsx-depth 1 part-side jsx)) . 1529) (undo-tree-id1984 . -13) (undo-tree-id1985 . -12) (undo-tree-id1986 . -12) (undo-tree-id1987 . -13) (undo-tree-id1988 . -13) (undo-tree-id1989 . -13) (undo-tree-id1990 . -13) (undo-tree-id1991 . -13) (undo-tree-id1992 . -13)) ((1529 . 1542)) (26131 5209 393920 60000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1571 . 1572) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -1648) (1569 . 1649) 1567) nil (26131 5238 695384 174000) 0 nil] [nil nil ((1575 . 1586) (#("div" 0 3 (jsx-depth 1 part-side jsx)) . -1575) (undo-tree-id2004 . -2) (undo-tree-id2006 . -3) (undo-tree-id2008 . -3) (undo-tree-id2010 . -3) (undo-tree-id2012 . -3) (undo-tree-id2014 . -3) 1578 (1575 . 1578) (1570 . 1575) (1570 . 1571) 1580 (t 26131 5213 332341 829000)) ((#("
" 0 1 (jsx-depth 1 part-side jsx)) . 1570) (undo-tree-id2020 . 1) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 1570) (undo-tree-id2021 . -5) (undo-tree-id2022 . -5) (undo-tree-id2023 . -5) (undo-tree-id2024 . -5) (undo-tree-id2025 . -5) (undo-tree-id2026 . -5) (undo-tree-id2027 . -5) (#("div" 0 3 (jsx-depth 1 part-side jsx)) . 1575) (undo-tree-id2028 . -3) (1575 . 1578) (#("<div></div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 7 10 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx)) . 1575) (undo-tree-id2029 . -11) (undo-tree-id2030 . -11) (undo-tree-id2031 . -11) (undo-tree-id2032 . 6) (undo-tree-id2033 . -3) (undo-tree-id2034 . -3) (undo-tree-id2035 . -3) (undo-tree-id2036 . -3) (t 26131 5227 932364 731000)) (26131 5229 548671 293000) 0 nil])
nil
nil
([nil nil ((#("head" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1591) (undo-tree-id2037 . -3) (undo-tree-id2038 . -4) (undo-tree-id2039 . -4)) nil (26131 5238 695381 864000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1586 . 1587) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -1587) (1586 . 1588) 1578 (t 26131 5227 932364 731000)) ((#("

" 0 1 (jsx-depth 1 part-side jsx rear-nonsticky nil) 1 2 (jsx-depth 1 part-side jsx)) . 1586) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (1587 . 1588) (nil rear-nonsticky t 1586 . 1587)) (26131 5229 544399 422000) 0 nil])
([nil nil ((1591 . 1597) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1591) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) 1592 (1591 . 1592) (t 26131 5238 699048 288000)) nil (26131 5244 525710 654000) 0 nil])
nil
([nil nil ((#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1634) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (t 26131 5244 529057 434000)) nil (26131 5253 61080 125000) 0 nil])
([nil nil ((#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1634) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1)) nil (26131 5253 61078 35000) 0 nil])
([nil nil ((1634 . 1638)) nil (26131 5253 61076 865000) 0 nil])
([nil nil ((#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1641) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1)) nil (26131 5253 61076 565000) 0 nil])
([nil nil ((#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1641) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1)) nil (26131 5253 61075 245000) 0 nil])
([nil nil ((1641 . 1645)) nil (26131 5253 61066 5000) 0 nil])
([nil nil ((1648 . 1649) (t 26131 5253 65737 489000)) nil (26131 5263 482857 64000) 0 nil])
([nil nil ((#("a" 0 1 (jsx-depth 1 part-side jsx)) . -1648) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) 1649 (t 26131 5263 489087 175000)) nil (26131 5270 561741 600000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1645) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1)) nil (26131 5270 561737 520000) 0 nil])
([nil nil ((#("contain" 0 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1601) (undo-tree-id2079 . -6) (undo-tree-id2080 . -7) (undo-tree-id2081 . -7) (t 26131 5270 565764 943000)) nil (26131 5277 568382 891000) 0 nil])
([nil nil ((1601 . 1607)) nil (26131 5277 568381 551000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1603) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (#("v" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1604) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1605) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1606) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) 1607) nil (26131 5277 568380 641000) 0 nil])
([nil nil ((1603 . 1606)) nil (26131 5295 352934 79000) 0 nil])
([nil nil ((#("		<div className=\"bg-slogan bg-cover bg-center bg-no-repeat w-full h-full\"></div>
" 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx rear-nonsticky t) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 8 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 73 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 73 74 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 74 75 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 75 76 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 76 77 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 77 80 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 80 81 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 81 82 (jsx-depth 1 part-side jsx)) . 1570) (undo-tree-id2108 . -81) (undo-tree-id2109 . 46) (undo-tree-id2110 . -33) (undo-tree-id2111 . -33) (undo-tree-id2112 . -33) (undo-tree-id2113 . -33) (undo-tree-id2114 . -36) (undo-tree-id2115 . -36) (undo-tree-id2116 . -35) (undo-tree-id2117 . -35) (undo-tree-id2118 . -35) (undo-tree-id2119 . -35) (undo-tree-id2120 . -35) (undo-tree-id2121 . -35) (undo-tree-id2122 . -35) (undo-tree-id2123 . -35) (undo-tree-id2124 . -35) (undo-tree-id2125 . -35) (undo-tree-id2126 . -35) (undo-tree-id2127 . -35) (undo-tree-id2128 . -35) (undo-tree-id2129 . -35) (undo-tree-id2130 . -82) 1605 (t 26131 5296 359138 735000)) nil (26131 5315 547703 768000) 0 nil] [nil nil ((#("		<div className=\"bg-slogan bg-cover bg-center bg-no-repeat w-full h-full\"></div>
" 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx rear-nonsticky t) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 8 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 73 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 73 74 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 74 75 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 75 76 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 76 77 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 77 80 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 80 81 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 81 82 (jsx-depth 1 part-side jsx)) . 1570) (undo-tree-id2082 . -81) (undo-tree-id2083 . -81) (undo-tree-id2084 . 46) (undo-tree-id2085 . -33) (undo-tree-id2086 . -33) (undo-tree-id2087 . -33) (undo-tree-id2088 . -33) (undo-tree-id2089 . -36) (undo-tree-id2090 . -36) (undo-tree-id2091 . -35) (undo-tree-id2092 . -35) (undo-tree-id2093 . -35) (undo-tree-id2094 . -35) (undo-tree-id2095 . -35) (undo-tree-id2096 . -35) (undo-tree-id2097 . -35) (undo-tree-id2098 . -35) (undo-tree-id2099 . -82) 1605 (t 26131 5277 572442 600000)) ((1570 . 1652)) (26131 5295 81107 126000) 0 nil])
([nil nil ((1542 . 1624) 1544) nil (26131 5315 547685 708000) 0 nil])
([nil nil ((1551 . 1633) 1564) ((#("		<div className=\"bg-slogan bg-cover bg-center bg-no-repeat w-full h-full\"></div>
" 0 2 (jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 8 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 73 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 73 74 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 74 75 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 75 76 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 76 77 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 77 80 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 80 81 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 81 82 (jsx-depth 1 part-side jsx)) . 1551) (undo-tree-id2100 . -82) (undo-tree-id2101 . -81) (undo-tree-id2102 . -2) (undo-tree-id2103 . -2) (undo-tree-id2104 . -2) (undo-tree-id2105 . -2) (undo-tree-id2106 . -2) (undo-tree-id2107 . -2) (t 26131 5288 129125 824000)) (26131 5288 122486 409000) 0 nil])
([nil nil ((#("		<div className=\"bg-slogan bg-cover bg-center bg-no-repeat w-full h-full\"></div>
" 0 2 (jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 8 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 73 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 73 74 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 74 75 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 75 76 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 76 77 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 77 80 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 80 81 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 81 82 (jsx-depth 1 part-side jsx)) . 1542) (undo-tree-id2131 . -82) (undo-tree-id2132 . -81) (undo-tree-id2133 . -2) (undo-tree-id2134 . -2) (undo-tree-id2135 . -2) (undo-tree-id2136 . -2) (undo-tree-id2137 . -2) (undo-tree-id2138 . -2) (undo-tree-id2139 . -2) (undo-tree-id2140 . -2) (undo-tree-id2141 . -82) 1544 (t 26131 5315 555835 514000)) nil (26131 5327 602123 17000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1571 . 1572) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -1651) (1569 . 1652) 1567 (t 26131 5329 279190 375000)) nil (26131 5330 421735 992000) 0 nil] [nil nil ((nil rear-nonsticky nil 1552 . 1553) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -1632) (1550 . 1633) 1544) ((#("
		<div className=\"bg-slogan bg-cover bg-center bg-no-repeat w-full h-full\"></div>
" 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx) 2 3 (jsx-depth 1 part-side jsx rear-nonsticky nil) 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 4 7 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 9 17 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 18 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 18 74 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 74 75 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 75 76 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 76 77 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 77 78 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 78 81 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 81 82 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 82 83 (jsx-depth 1 part-side jsx)) . 1550) (undo-tree-id2142 . -82) (undo-tree-id2143 . -1) (undo-tree-id2144 . -82) (undo-tree-id2145 . -3) (undo-tree-id2146 . -3) (undo-tree-id2147 . -3) (undo-tree-id2148 . -3) (1632 . 1633) (nil rear-nonsticky t 1552 . 1553) (t 26131 5325 872518 365000)) (26131 5325 866776 350000) 0 nil])
([nil nil ((#("bg-no-repeat" 0 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1617) (undo-tree-id2159 . -11) (undo-tree-id2160 . -11) (undo-tree-id2161 . -11) (undo-tree-id2162 . -11) (undo-tree-id2163 . -11) (undo-tree-id2164 . -12) (undo-tree-id2165 . -12) 1628 (t 26131 5330 429192 178000)) nil (26131 5338 96187 271000) 0 nil])
nil
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1616) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1)) nil (26131 5338 96183 21000) 0 nil])
([nil nil ((#("		<div className=\"bg-slogan bg-cover bg-center w-full h-full\"></div>
" 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx rear-nonsticky t) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 8 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 60 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 60 61 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 61 62 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 62 63 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 63 64 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 64 67 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 67 68 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 68 69 (jsx-depth 1 part-side jsx)) . 1570) (undo-tree-id2166 . -46) (undo-tree-id2167 . -68) (undo-tree-id2168 . -46) (undo-tree-id2169 . 23) (undo-tree-id2170 . -46) (undo-tree-id2171 . -46) (undo-tree-id2172 . -69) (undo-tree-id2173 . -46) (undo-tree-id2174 . -46) (undo-tree-id2175 . -46) (undo-tree-id2176 . -46) (undo-tree-id2177 . -46) (undo-tree-id2178 . -46) (undo-tree-id2179 . -46) (undo-tree-id2180 . -46) (undo-tree-id2181 . -46) (undo-tree-id2182 . -46) (undo-tree-id2183 . -69) 1616 (t 26131 5338 102537 549000)) nil (26131 5391 620429 786000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1592 . 1593) (#("
" 0 1 (part-side jsx)) . -1688) (1584 . 1689) 1583 (t 26131 5392 635956 427000)) nil (26131 5416 723459 127000) 0 nil] [nil nil ((#("head" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 340) (undo-tree-id2191 . -3) (undo-tree-id2192 . -4) (undo-tree-id2193 . -4)) ((340 . 344)) (26131 5391 36600 621000) 0 nil] [nil nil ((nil rear-nonsticky nil 540 . 541) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -607) (538 . 608) 532) ((#("
		<div className=\"bg-slogan bg-cover bg-center w-full h-full\"></div>
" 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx) 2 3 (jsx-depth 1 part-side jsx rear-nonsticky nil) 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 4 7 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 9 17 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 18 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 18 61 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 61 62 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 62 63 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 63 64 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 64 65 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 65 68 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 68 69 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 69 70 (jsx-depth 1 part-side jsx)) . 538) (undo-tree-id2184 . -1) (undo-tree-id2185 . -69) (undo-tree-id2186 . -3) (undo-tree-id2187 . -3) (undo-tree-id2188 . -3) (undo-tree-id2189 . -3) (undo-tree-id2190 . -3) (607 . 608) (nil rear-nonsticky t 540 . 541) (t 26131 5343 12545 251000)) (26131 5343 7451 940000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1696 . 1697) (#("
" 0 1 (part-side jsx)) . -1703) (1688 . 1704) 1593) nil (26131 5416 723455 597000) 0 nil])
([nil nil ((340 . 346)) ((#("slogan" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 340) (undo-tree-id2194 . -6) (undo-tree-id2195 . -6) (undo-tree-id2196 . -5) (undo-tree-id2197 . -5) (undo-tree-id2198 . -5) (undo-tree-id2199 . -5) (undo-tree-id2200 . -5) (undo-tree-id2201 . -5) (t 26131 5388 702616 923000)) (26131 5388 696469 780000) 0 nil])
nil
([nil nil ((#("        <div className='flex flex-col w-full justify-center items-center bg-opacity-0  relative mb-5 '>
        </div>
" 0 7 (jsx-depth 1 part-side jsx) 7 8 (jsx-depth 1 part-side jsx rear-nonsticky t) 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 9 12 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 12 13 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 13 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 14 22 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 22 23 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 23 101 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 101 102 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 102 103 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 103 104 (jsx-depth 1 part-side jsx) 104 111 (jsx-depth 1 part-side jsx) 111 112 (jsx-depth 1 part-side jsx rear-nonsticky t) 112 113 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 113 114 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 114 117 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 117 118 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx) 118 119 (part-side jsx)) . 1585) (undo-tree-id2202 . -112) (undo-tree-id2203 . -118) (undo-tree-id2204 . -112) (undo-tree-id2205 . -8) (undo-tree-id2206 . -112) (undo-tree-id2207 . -112) (undo-tree-id2208 . -112) (undo-tree-id2209 . -8) (undo-tree-id2210 . -112) (undo-tree-id2211 . -8) (undo-tree-id2212 . -119) 1593 (t 26131 5416 729327 553000)) nil (26131 5427 686403 728000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1577 . 1578) (1570 . 1689) 1575) nil (26131 5427 686391 308000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1675 . 1676) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -1752) (1673 . 1753) 1578 (t 26131 5427 692678 87000)) nil (26131 5436 979604 922000) 0 nil])
([nil nil ((#("head" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1695) (undo-tree-id2213 . -3) (undo-tree-id2214 . -4) (undo-tree-id2215 . -4) (t 26131 5436 986025 996000)) nil (26131 5442 360559 142000) 0 nil])
([nil nil ((1695 . 1701)) nil (26131 5442 360549 622000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1695) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1696) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1697) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (#("g" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1698) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1699) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1700) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) 1701 (t 26131 5442 366034 438000)) nil (26131 5475 738898 277000) 0 nil])
([nil nil ((1695 . 1699)) nil (26131 5475 738687 826000) 0 nil])
([nil nil ((#("		<div className=\"bg-head bg-contain bg-center bg-no-repeat w-40 h-40 \"></div>
" 0 2 (jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 3 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 7 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 8 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 21 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 21 25 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 25 62 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 62 63 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 63 64 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 64 67 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 67 68 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 68 70 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 70 71 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 71 72 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 72 73 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 73 74 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 74 77 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 77 78 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 78 79 (jsx-depth 1 part-side jsx)) . 319) (undo-tree-id2269 . -78) (undo-tree-id2270 . 34) (undo-tree-id2271 . -45) (undo-tree-id2272 . -45) (undo-tree-id2273 . -45) (undo-tree-id2274 . -45) (undo-tree-id2275 . -45) (undo-tree-id2276 . -45) (undo-tree-id2277 . -44) (undo-tree-id2278 . -44) (undo-tree-id2279 . -44) (undo-tree-id2280 . -44) (undo-tree-id2281 . -44) (undo-tree-id2282 . -44) (undo-tree-id2283 . -44) (undo-tree-id2284 . -44) (undo-tree-id2285 . -79) 363 (t 26131 5475 746086 797000)) nil (26131 5689 666143 540000) 0 nil])
([nil nil ((1620 . 1625) (t 26131 5690 693090 641000)) nil (26131 5708 533997 755000) 0 nil] [nil nil ((554 . 559) (t 26131 5585 782926 73000)) ((#("my-9 " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 554) (undo-tree-id2382 . 1) (undo-tree-id2383 . -3) (undo-tree-id2384 . -3)) (26131 5689 264988 194000) 0 nil] [nil nil ((555 . 556) (#("b" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 555) (t 26131 5485 869436 11000)) ((555 . 556) (#("y" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 555)) (26131 5584 471562 960000) 0 nil])
([nil nil ((#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1624) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) 1625) nil (26131 5708 533996 915000) 0 nil])
([nil nil ((nil rear-nonsticky nil 805 . 806) (nil part-side jsx 802 . 806) (nil jsx-depth 1 802 . 806) (nil tag-attr t 802 . 806) (nil tag-name "div" 802 . 806) (nil tag-type start 802 . 806) (nil font-lock-face web-mode-html-attr-value-face 802 . 806) (802 . 806) (t 26131 5599 686281 216000)) ((#("my-9" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx rear-nonsticky nil)) . 802) (undo-tree-id2380 . -4) (undo-tree-id2381 . -4) (nil tag-name "div" 805 . 806) (nil tag-name "div" 802 . 805) (nil rear-nonsticky t 805 . 806)) (26131 5689 54393 297000) 0 nil] [nil nil ((555 . 556) (#("y" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 555) (undo-tree-id2302 . -1) (t 26131 5590 46266 96000)) ((555 . 556) (#("x" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 555) (t 26131 5596 669609 818000)) (26131 5596 662289 556000) 0 nil])
([nil nil ((nil rear-nonsticky nil 800 . 801) (nil part-side jsx 797 . 801) (nil jsx-depth 1 797 . 801) (nil tag-attr t 797 . 801) (nil tag-name "div" 797 . 801) (nil tag-type start 797 . 801) (nil font-lock-face web-mode-html-attr-value-face 797 . 801) (797 . 801) (t 26131 5553 746209 153000)) ((#("py-6" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx rear-nonsticky nil)) . 797) (undo-tree-id2300 . -4) (undo-tree-id2301 . -4) (nil tag-name "div" 800 . 801) (nil tag-name "div" 797 . 800) (nil rear-nonsticky t 800 . 801)) (26131 5584 163089 868000) 0 nil])
([nil nil ((1624 . 1634)) nil (26131 5708 533986 765000) 0 nil])
([nil nil ((806 . 807)) ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 806)) (26131 5688 883240 696000) 0 nil])
nil
([nil nil ((#("p" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 801) (undo-tree-id2294 . -1)) ((801 . 802)) (26131 5583 867329 986000) 0 nil])
([nil nil ((558 . 563) (t 26131 5708 539785 304000)) nil (26131 5789 446648 650000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1037 . 1038) (nil part-side jsx 1034 . 1038) (nil jsx-depth 1 1034 . 1038) (nil tag-attr t 1034 . 1038) (nil tag-name "div" 1034 . 1038) (nil tag-type start 1034 . 1038) (nil font-lock-face web-mode-html-attr-value-face 1034 . 1038) (1034 . 1038)) ((#("my-9" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx rear-nonsticky nil)) . 1034) (undo-tree-id2378 . -4) (undo-tree-id2379 . -4) (nil tag-name "div" 1037 . 1038) (nil tag-name "div" 1034 . 1037) (nil rear-nonsticky t 1037 . 1038)) (26131 5688 702336 740000) 0 nil])
([nil nil ((#("b" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 801) (undo-tree-id2292 . -1)) ((801 . 802)) (26131 5583 587106 921000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1036 . 1037) (nil part-side jsx 1033 . 1037) (nil jsx-depth 1 1033 . 1037) (nil tag-attr t 1033 . 1037) (nil tag-name "div" 1033 . 1037) (nil tag-type start 1033 . 1037) (nil font-lock-face web-mode-html-attr-value-face 1033 . 1037) (1033 . 1037) (t 26131 5789 453245 561000)) nil (26131 5799 938427 439000) 0 nil])
([nil nil ((1038 . 1039)) ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1038)) (26131 5688 512841 174000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 801) (undo-tree-id2290 . -1)) ((801 . 802)) (26131 5583 230779 604000) 0 nil])
([nil nil ((1033 . 1034)) nil (26131 5799 938424 209000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1283 . 1284) (nil part-side jsx 1280 . 1284) (nil jsx-depth 1 1280 . 1284) (nil tag-attr t 1280 . 1284) (nil tag-name "div" 1280 . 1284) (nil tag-type start 1280 . 1284) (nil font-lock-face web-mode-html-attr-value-face 1280 . 1284) (1280 . 1284)) ((#("my-9" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx rear-nonsticky nil)) . 1280) (undo-tree-id2371 . -4) (undo-tree-id2372 . -4) (undo-tree-id2373 . -4) (undo-tree-id2374 . -4) (undo-tree-id2375 . -4) (undo-tree-id2376 . -4) (undo-tree-id2377 . -4) (nil tag-name "div" 1283 . 1284) (nil tag-name "div" 1280 . 1283) (nil rear-nonsticky t 1283 . 1284)) (26131 5687 830172 532000) 0 nil])
([nil nil ((#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 801) (undo-tree-id2288 . -1)) ((801 . 802)) (26131 5583 65602 16000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1282 . 1283) (nil part-side jsx 1279 . 1283) (nil jsx-depth 1 1279 . 1283) (nil tag-attr t 1279 . 1283) (nil tag-name "div" 1279 . 1283) (nil tag-type start 1279 . 1283) (nil font-lock-face web-mode-html-attr-value-face 1279 . 1283) (1279 . 1283) (t 26131 5799 946595 354000)) nil (26131 5809 291005 385000) 0 nil])
([nil nil ((1284 . 1285)) ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1284) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (t 26131 5684 899748 220000)) (26131 5683 890637 711000) 0 nil])
([nil nil ((1025 . 1026) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1025) (t 26131 5566 272895 470000)) ((1025 . 1026) (#("y" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1025)) (26131 5582 888275 149000) 0 nil] [nil nil ((nil rear-nonsticky nil 1024 . 1025) (nil part-side jsx 1024 . 1025) (nil jsx-depth 1 1024 . 1025) (nil tag-attr t 1024 . 1025) (nil tag-name "div" 1024 . 1025) (nil tag-type start 1024 . 1025) (nil font-lock-face web-mode-html-attr-value-face 1024 . 1025) (1024 . 1025) (t 26131 5566 272895 470000)) ((#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx rear-nonsticky nil)) . 1024) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (nil tag-name "div" 1024 . 1025) (nil rear-nonsticky t 1024 . 1025)) (26131 5572 396499 812000) 0 nil])
([nil nil ((1279 . 1280)) nil (26131 5809 291004 775000) 0 nil])
([nil nil ((1285 . 1290) (t 26131 5611 989633 849000)) ((#("mx-9 " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1285) (undo-tree-id2363 . -5) (undo-tree-id2364 . -5)) (26131 5682 985881 814000) 0 nil])
([nil nil ((1266 . 1267) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1266)) ((1266 . 1267) (#("y" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1266)) (26131 5582 657630 245000) 0 nil])
nil
([nil nil ((1281 . 1282) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1281) (undo-tree-id2389 . -1)) nil (26131 5809 291002 575000) 0 nil])
([nil nil ((#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1285) (undo-tree-id2304 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2309 . -1) (#("x" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1286) (undo-tree-id2311 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2316 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1287) (undo-tree-id2318 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2323 . -1) (#("9" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1288) (undo-tree-id2325 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2330 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -1289) (undo-tree-id2332 . -1) (undo-tree-id2334 . -1) (undo-tree-id2336 . -1) 1290 (t 26131 5617 612976 3000)) ((1285 . 1290)) (26131 5682 816916 327000) 0 nil])
([nil nil ((1268 . 1269) (#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1268) (undo-tree-id2299 . -1) (t 26131 5576 122910 920000)) ((1268 . 1269) (#("9" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1268) (t 26131 5580 359584 232000)) (26131 5580 354547 362000) 0 nil])
([nil nil ((806 . 807) (t 26131 5809 293276 683000)) nil (26131 5817 712675 32000) 0 nil])
([nil nil ((1288 . 1289) (#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1288) (t 26131 5628 979660 500000)) ((1288 . 1289) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1288)) (26131 5682 652940 232000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 810 . 811) (nil part-side jsx 807 . 811) (nil jsx-depth 1 807 . 811) (nil tag-attr t 807 . 811) (nil tag-name "div" 807 . 811) (nil tag-type start 807 . 811) (nil font-lock-face web-mode-html-attr-value-face 807 . 811) (807 . 811) 806) nil (26131 5817 712674 372000) 0 nil])
([nil nil ((1042 . 1043) (#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1042)) ((1042 . 1043) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 1042)) (26131 5682 440817 391000) 0 nil])
([nil nil ((808 . 809) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 808) (undo-tree-id2390 . -1)) nil (26131 5817 712671 892000) 0 nil])
([nil nil ((810 . 811) (#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 810) (t 26131 5636 396338 801000)) ((810 . 811) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 810)) (26131 5681 527505 204000) 0 nil])
([nil nil ((810 . 811) (#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx rear-nonsticky t)) . 810) (undo-tree-id2391 . -1) (t 26131 5817 719956 568000)) nil (26131 5820 782943 630000) 0 nil])
([nil nil ((562 . 563) (#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 562)) ((562 . 563) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 562)) (26131 5681 310558 292000) 0 nil])
([nil nil ((562 . 563) (#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 562) (undo-tree-id2394 . -1) (t 26131 5820 789961 383000)) nil (26131 5826 871928 563000) 0 nil])
([nil nil ((#("evenly" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 242) (undo-tree-id2341 . -6) (undo-tree-id2342 . -5) (undo-tree-id2343 . -6) (undo-tree-id2344 . -6) (undo-tree-id2345 . -6) (undo-tree-id2346 . -6) (t 26131 5641 29679 404000)) ((242 . 248)) (26131 5681 130537 259000) 0 nil])
([nil nil ((1042 . 1043) (#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx rear-nonsticky t)) . 1042) (undo-tree-id2393 . -1)) nil (26131 5826 871927 443000) 0 nil])
([nil nil ((242 . 244)) ((#("ar" 0 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 242) (undo-tree-id2361 . -2) (undo-tree-id2362 . -2)) (26131 5680 950532 335000) 0 nil])
([nil current ((1288 . 1289) (#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx rear-nonsticky t)) . 1288) (undo-tree-id2392 . -1)) nil (26131 5826 871924 353000) 0 nil])
([nil nil ((244 . 248)) ((#("ound" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 244)) (26131 5680 778060 240000) 0 nil])
nil
([nil nil ((#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -289) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) 290 (t 26131 5650 393027 423000)) ((289 . 290)) (26131 5680 609844 665000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 289)) ((289 . 290)) (26131 5680 438026 92000) 0 nil])
([nil nil ((289 . 291)) ((#("ax" 0 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 289) (undo-tree-id2355 . -2) (undo-tree-id2356 . -2) (undo-tree-id2357 . -2) (undo-tree-id2358 . -2) (undo-tree-id2359 . -2) (undo-tree-id2360 . -2) (t 26131 5666 393052 524000)) (26131 5666 386440 357000) 0 nil])
nil
