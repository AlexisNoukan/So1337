(undo-tree-save-format-version . 1)
"0b32fb292015733ab730e7f82f66f0dba762f3fa"
[nil nil nil nil (26130 30559 732361 29000) 0 nil]
([nil nil ((#("import React from \"react\";
import { MatrixRainingLetters } from 'react-mdr';
import Layout from \"./components/Layouts\";
import Main from \"./panels/Main\";
import Leet from \"./panels/Leet\";
import Contact from \"./panels/Contact\";

function App() {
  return (
    <div className=\"App\">
          <Layout>
            <Main/>
            <Leet/>
            <Contact/>
        </Layout>
    </div>
  );
}

export default App;
" 0 6 (face font-lock-keyword-face fontified t invisible nil part-side jsx) 6 7 (fontified t invisible nil part-side jsx) 7 12 (fontified t invisible nil part-side jsx) 12 13 (fontified t invisible nil part-side jsx) 13 17 (fontified t invisible nil part-side jsx) 17 18 (fontified t invisible nil part-side jsx) 18 19 (face font-lock-string-face fontified t invisible nil font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 19 24 (face font-lock-string-face fontified t invisible nil font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 24 25 (face font-lock-string-face fontified t invisible nil font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 25 27 (fontified t invisible nil part-side jsx) 27 33 (face font-lock-keyword-face fontified t invisible nil part-side jsx) 33 59 (fontified t invisible nil part-side jsx) 59 63 (fontified t invisible nil part-side jsx) 63 64 (fontified t invisible nil part-side jsx) 64 65 (face font-lock-string-face fontified t invisible nil font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 65 74 (face font-lock-string-face fontified t invisible nil font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 74 75 (face font-lock-string-face fontified t invisible nil font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 75 77 (fontified t invisible nil part-side jsx) 77 83 (face font-lock-keyword-face fontified t invisible nil part-side jsx) 83 84 (fontified t invisible nil part-side jsx) 84 90 (fontified t invisible nil part-side jsx) 90 91 (fontified t invisible nil part-side jsx) 91 95 (fontified t invisible nil part-side jsx) 95 96 (fontified t invisible nil part-side jsx) 96 97 (face font-lock-string-face fontified t invisible nil font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 97 117 (face font-lock-string-face fontified t invisible nil font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 117 118 (face font-lock-string-face fontified t invisible nil font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 118 120 (fontified t invisible nil part-side jsx) 120 126 (face font-lock-keyword-face fontified t invisible nil part-side jsx) 126 127 (fontified t invisible nil part-side jsx) 127 131 (fontified t invisible nil part-side jsx) 131 132 (fontified t invisible nil part-side jsx) 132 136 (fontified t invisible nil part-side jsx) 136 137 (fontified t invisible nil part-side jsx) 137 138 (face font-lock-string-face fontified t invisible nil font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 138 151 (face font-lock-string-face fontified t invisible nil font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 151 152 (face font-lock-string-face fontified t invisible nil font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 152 154 (fontified t invisible nil part-side jsx) 154 160 (face font-lock-keyword-face fontified t invisible nil part-side jsx) 160 161 (fontified t invisible nil part-side jsx) 161 165 (fontified t invisible nil part-side jsx) 165 166 (fontified t invisible nil part-side jsx) 166 170 (fontified t invisible nil part-side jsx) 170 171 (fontified t invisible nil part-side jsx) 171 172 (face font-lock-string-face fontified t invisible nil font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 172 185 (face font-lock-string-face fontified t invisible nil font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 185 186 (face font-lock-string-face fontified t invisible nil font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 186 188 (fontified t invisible nil part-side jsx) 188 194 (face font-lock-keyword-face fontified t invisible nil part-side jsx) 194 195 (fontified t invisible nil part-side jsx) 195 202 (fontified t invisible nil part-side jsx) 202 203 (fontified t invisible nil part-side jsx) 203 207 (fontified t invisible nil part-side jsx) 207 208 (fontified t invisible nil part-side jsx) 208 209 (face font-lock-string-face fontified t invisible nil font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 209 225 (face font-lock-string-face fontified t invisible nil font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 225 226 (face font-lock-string-face fontified t invisible nil font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 226 229 (fontified t invisible nil part-side jsx) 229 237 (face font-lock-keyword-face fontified t invisible nil part-side jsx) 237 238 (fontified t invisible nil part-side jsx) 238 241 (face font-lock-function-name-face fontified t invisible nil part-side jsx) 241 244 (fontified t invisible nil part-side jsx) 244 245 (js--pstate ((nil 0 function 230 ("App") 401) (nil -2305843009213693952 toplevel nil nil nil)) fontified t invisible nil part-side jsx) 245 248 (fontified t invisible nil part-side jsx) 248 254 (face font-lock-keyword-face fontified t invisible nil part-side jsx) 254 261 (fontified t invisible nil part-side jsx) 261 262 (font-lock-multiline t js-jsx-close-tag-pos 388 syntax-multiline t js-jsx-tag-beg (open . 283) syntax-table (4 . 62) fontified t invisible nil font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 262 263 (font-lock-multiline t face font-lock-function-name-face syntax-multiline t js-jsx-tag-name (#<marker at 1 in App.js> #<marker at 1 in App.js>) fontified t invisible nil font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 263 265 (font-lock-multiline t face font-lock-function-name-face syntax-multiline t fontified t invisible nil font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 265 266 (font-lock-multiline t syntax-multiline t fontified t invisible nil tag-type start tag-name "div" jsx-depth 1 part-side jsx) 266 267 (font-lock-multiline t face font-lock-variable-name-face syntax-multiline t js-jsx-attribute-name (#<marker at 1 in App.js> #<marker at 1 in App.js>) fontified t invisible nil font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 267 275 (font-lock-multiline t face font-lock-variable-name-face syntax-multiline t fontified t invisible nil font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 275 276 (font-lock-multiline t syntax-multiline t fontified t invisible nil font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 276 277 (font-lock-multiline t face font-lock-string-face syntax-multiline t js-jsx-string t fontified t invisible nil font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 277 280 (font-lock-multiline t face font-lock-string-face syntax-multiline t fontified t invisible nil font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 280 281 (font-lock-multiline t face font-lock-string-face syntax-multiline t fontified t invisible nil font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 281 282 (font-lock-multiline t syntax-multiline t syntax-table (5 . 60) fontified t invisible nil font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 282 283 (face default font-lock-multiline t js-jsx-text (283 294 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 262 fontified t invisible nil jsx-depth 1 part-side jsx) 283 293 (face default font-lock-multiline t syntax-multiline t fontified t invisible nil jsx-depth 1 part-side jsx) 293 294 (font-lock-multiline t js-jsx-close-tag-pos 374 syntax-multiline t js-jsx-tag-beg (open . 302) syntax-table (4 . 62) fontified t invisible nil font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "layout" jsx-depth 1 part-side jsx) 294 295 (font-lock-multiline t face font-lock-function-name-face syntax-multiline t js-jsx-tag-name (#<marker at 1 in App.js> #<marker at 1 in App.js>) fontified t invisible nil font-lock-face web-mode-html-tag-face tag-type start tag-name "layout" jsx-depth 1 part-side jsx) 295 300 (font-lock-multiline t face font-lock-function-name-face syntax-multiline t fontified t invisible nil font-lock-face web-mode-html-tag-face tag-type start tag-name "layout" jsx-depth 1 part-side jsx) 300 301 (font-lock-multiline t syntax-multiline t syntax-table (5 . 60) fontified t invisible nil font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "layout" jsx-depth 1 part-side jsx) 301 302 (face default font-lock-multiline t js-jsx-text (302 315 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 294 fontified t invisible nil jsx-depth 1 part-side jsx) 302 314 (face default font-lock-multiline t syntax-multiline t fontified t invisible nil jsx-depth 1 part-side jsx) 314 315 (font-lock-multiline t syntax-multiline t js-jsx-tag-beg (self-closing . 322) syntax-table (4 . 62) fontified t invisible nil font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "main" jsx-depth 1 part-side jsx) 315 316 (font-lock-multiline t face font-lock-function-name-face syntax-multiline t js-jsx-tag-name (#<marker at 1 in App.js> #<marker at 1 in App.js>) fontified t invisible nil font-lock-face web-mode-html-tag-face tag-type void tag-name "main" jsx-depth 1 part-side jsx) 316 319 (font-lock-multiline t face font-lock-function-name-face syntax-multiline t fontified t invisible nil font-lock-face web-mode-html-tag-face tag-type void tag-name "main" jsx-depth 1 part-side jsx) 319 320 (font-lock-multiline t syntax-multiline t fontified t invisible nil font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "main" jsx-depth 1 part-side jsx) 320 321 (font-lock-multiline t syntax-multiline t syntax-table (5 . 60) fontified t invisible nil font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "main" jsx-depth 1 part-side jsx) 321 322 (face default font-lock-multiline t js-jsx-text (322 335 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 315 fontified t invisible nil jsx-depth 1 part-side jsx) 322 334 (face default font-lock-multiline t syntax-multiline t fontified t invisible nil jsx-depth 1 part-side jsx) 334 335 (font-lock-multiline t syntax-multiline t js-jsx-tag-beg (self-closing . 342) syntax-table (4 . 62) fontified t invisible nil font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "leet" jsx-depth 1 part-side jsx) 335 336 (font-lock-multiline t face font-lock-function-name-face syntax-multiline t js-jsx-tag-name (#<marker at 1 in App.js> #<marker at 1 in App.js>) fontified t invisible nil font-lock-face web-mode-html-tag-face tag-type void tag-name "leet" jsx-depth 1 part-side jsx) 336 339 (font-lock-multiline t face font-lock-function-name-face syntax-multiline t fontified t invisible nil font-lock-face web-mode-html-tag-face tag-type void tag-name "leet" jsx-depth 1 part-side jsx) 339 340 (font-lock-multiline t syntax-multiline t fontified t invisible nil font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "leet" jsx-depth 1 part-side jsx) 340 341 (font-lock-multiline t syntax-multiline t syntax-table (5 . 60) fontified t invisible nil font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "leet" jsx-depth 1 part-side jsx) 341 342 (face default font-lock-multiline t js-jsx-text (342 355 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 335 fontified t invisible nil jsx-depth 1 part-side jsx) 342 354 (face default font-lock-multiline t syntax-multiline t fontified t invisible nil jsx-depth 1 part-side jsx) 354 355 (font-lock-multiline t syntax-multiline t js-jsx-tag-beg (self-closing . 365) syntax-table (4 . 62) fontified t invisible nil font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "contact" jsx-depth 1 part-side jsx) 355 356 (font-lock-multiline t face font-lock-function-name-face syntax-multiline t js-jsx-tag-name (#<marker at 1 in App.js> #<marker at 1 in App.js>) fontified t invisible nil font-lock-face web-mode-html-tag-face tag-type void tag-name "contact" jsx-depth 1 part-side jsx) 356 362 (font-lock-multiline t face font-lock-function-name-face syntax-multiline t fontified t invisible nil font-lock-face web-mode-html-tag-face tag-type void tag-name "contact" jsx-depth 1 part-side jsx) 362 363 (font-lock-multiline t syntax-multiline t fontified t invisible nil font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "contact" jsx-depth 1 part-side jsx) 363 364 (font-lock-multiline t syntax-multiline t syntax-table (5 . 60) fontified t invisible nil font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "contact" jsx-depth 1 part-side jsx) 364 365 (face default font-lock-multiline t js-jsx-text (365 374 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 355 fontified t invisible nil jsx-depth 1 part-side jsx) 365 373 (face default font-lock-multiline t syntax-multiline t fontified t invisible nil jsx-depth 1 part-side jsx) 373 374 (font-lock-multiline t syntax-multiline t js-jsx-tag-beg (close . 383) syntax-table (4 . 62) fontified t invisible nil font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "layout" jsx-depth 1 part-side jsx) 374 375 (font-lock-multiline t syntax-multiline t fontified t invisible nil font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "layout" jsx-depth 1 part-side jsx) 375 376 (font-lock-multiline t face font-lock-function-name-face syntax-multiline t js-jsx-tag-name (#<marker at 1 in App.js> #<marker at 1 in App.js>) fontified t invisible nil font-lock-face web-mode-html-tag-face tag-type end tag-name "layout" jsx-depth 1 part-side jsx) 376 381 (font-lock-multiline t face font-lock-function-name-face syntax-multiline t fontified t invisible nil font-lock-face web-mode-html-tag-face tag-type end tag-name "layout" jsx-depth 1 part-side jsx) 381 382 (font-lock-multiline t syntax-multiline t syntax-table (5 . 60) fontified t invisible nil font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "layout" jsx-depth 1 part-side jsx) 382 383 (face default font-lock-multiline t js-jsx-text (383 388 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 374 fontified t invisible nil jsx-depth 1 part-side jsx) 383 387 (face default font-lock-multiline t syntax-multiline t fontified t invisible nil jsx-depth 1 part-side jsx) 387 388 (font-lock-multiline t syntax-multiline t js-jsx-tag-beg (close . 394) syntax-table (4 . 62) fontified t invisible nil font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 388 389 (font-lock-multiline t syntax-multiline t fontified t invisible nil font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 389 390 (font-lock-multiline t face font-lock-function-name-face syntax-multiline t js-jsx-tag-name (#<marker at 1 in App.js> #<marker at 1 in App.js>) fontified t invisible nil font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 390 392 (font-lock-multiline t face font-lock-function-name-face syntax-multiline t fontified t invisible nil font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 392 393 (font-lock-multiline t syntax-multiline t syntax-table (5 . 60) fontified t invisible nil font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx) 393 394 (syntax-multiline t js-jsx-tag-end 388 fontified t invisible nil part-side jsx) 394 399 (fontified t invisible nil part-side jsx) 399 400 (js--pend (nil 0 function 230 ("App") 401) fontified t invisible nil part-side jsx) 400 402 (fontified t invisible nil part-side jsx) 402 408 (face font-lock-keyword-face fontified t invisible nil part-side jsx) 408 409 (fontified t invisible nil part-side jsx) 409 416 (face font-lock-keyword-face fontified t invisible nil part-side jsx) 416 422 (fontified t invisible nil part-side jsx)) . 1) (undo-tree-id0 . -422) (undo-tree-id1 . -422) (undo-tree-id2 . -282) (undo-tree-id3 . -27) (undo-tree-id4 . -26) (undo-tree-id5 . -244) (undo-tree-id6 . -245) (undo-tree-id7 . -401) (undo-tree-id8 . -300) (undo-tree-id9 . -401) (undo-tree-id10 . -422) (undo-tree-id11 . -262) (undo-tree-id12 . -265) (undo-tree-id13 . -266) (undo-tree-id14 . -275) (undo-tree-id15 . -294) (undo-tree-id16 . -300) (undo-tree-id17 . -315) (undo-tree-id18 . -319) (undo-tree-id19 . -335) (undo-tree-id20 . -339) (undo-tree-id21 . -355) (undo-tree-id22 . -362) (undo-tree-id23 . -375) (undo-tree-id24 . -381) (undo-tree-id25 . -389) (undo-tree-id26 . -392) (undo-tree-id27 . -422) (undo-tree-id28 . -422) (undo-tree-id29 . -422) (undo-tree-id30 . -422) (undo-tree-id31 . -422) (undo-tree-id32 . -422) (undo-tree-id33 . -422) (undo-tree-id34 . -341) (undo-tree-id35 . -341) (undo-tree-id36 . -340) (undo-tree-id37 . -340) (undo-tree-id38 . -340) (undo-tree-id39 . -340) (undo-tree-id40 . -340) (undo-tree-id41 . -340) (undo-tree-id42 . -76) (undo-tree-id43 . -76) (undo-tree-id44 . -75) (undo-tree-id45 . -75) (undo-tree-id46 . -75) (undo-tree-id47 . -75) (undo-tree-id48 . -422) (undo-tree-id49 . -422) (undo-tree-id50 . -422) (undo-tree-id51 . -422) (undo-tree-id52 . -422) (undo-tree-id53 . -422) (undo-tree-id54 . -422) (undo-tree-id55 . -421) (t 26130 30496 922406 196000)) nil (26130 30559 732357 849000) 0 nil])
([nil nil ((nil rear-nonsticky nil 697 . 698) (nil fontified nil 1 . 698) (1 . 698) (t 26130 30559 732430 993000)) nil (26130 30563 364412 816000) 0 nil])
([nil nil ((#("        
" 0 9 (face default font-lock-multiline t syntax-multiline t fontified t)) . 495) (undo-tree-id56 . -8) (undo-tree-id57 . -3) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -3) (undo-tree-id61 . -9) 498 (t 26130 30563 362432 428000)) nil (26130 30755 415756 340000) 0 nil])
([nil nil ((545 . 548) (545 . 546) 560 (t 26130 30756 422527 30000)) nil (26130 30827 395836 599000) 0 nil] [nil nil ((#("      {/* Container for the entire content */}
      <div className=\"relative h-full\">
" 0 6 (face default font-lock-multiline t syntax-multiline t fontified t) 6 7 (font-lock-multiline t syntax-multiline t js-jsx-expr 330 fontified t) 7 10 (font-lock-multiline t face font-lock-comment-delimiter-face syntax-multiline t fontified t) 10 42 (font-lock-multiline t face font-lock-comment-face syntax-multiline t fontified t) 42 45 (font-lock-multiline t face font-lock-comment-delimiter-face syntax-multiline t fontified t) 45 46 (font-lock-multiline t syntax-multiline t fontified t) 46 47 (face default font-lock-multiline t syntax-multiline t js-jsx-text (330 337 #<buffer App.js>) fontified t) 47 53 (face default font-lock-multiline t syntax-multiline t fontified t) 53 54 (font-lock-multiline t js-jsx-close-tag-pos 643 syntax-multiline t js-jsx-tag-beg (open . 370) syntax-table (4 . 62) fontified t) 54 55 (font-lock-multiline t face font-lock-function-name-face syntax-multiline t js-jsx-tag-name (#<marker at 271 in App.js> #<marker at 271 in App.js>) fontified t) 55 57 (font-lock-multiline t face font-lock-function-name-face syntax-multiline t fontified t) 57 58 (font-lock-multiline t syntax-multiline t fontified t) 58 59 (font-lock-multiline t face font-lock-variable-name-face syntax-multiline t js-jsx-attribute-name (#<marker at 271 in App.js> #<marker at 271 in App.js>) fontified t) 59 67 (font-lock-multiline t face font-lock-variable-name-face syntax-multiline t fontified t) 67 68 (font-lock-multiline t syntax-multiline t fontified t) 68 69 (font-lock-multiline t face font-lock-string-face syntax-multiline t js-jsx-string t fontified t) 69 85 (font-lock-multiline t face font-lock-string-face syntax-multiline t fontified t) 85 86 (font-lock-multiline t syntax-multiline t syntax-table (5 . 60) fontified t) 86 87 (face default font-lock-multiline t js-jsx-text (370 379 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 337 fontified t)) . 284) (undo-tree-id107 . -85) (undo-tree-id108 . -85) (undo-tree-id109 . -38) (undo-tree-id110 . -86) (undo-tree-id112 . -57) (undo-tree-id114 . -67) (undo-tree-id116 . -57) (undo-tree-id118 . -67) (undo-tree-id119 . -54) (undo-tree-id120 . -57) (undo-tree-id121 . -58) (undo-tree-id122 . -67) (undo-tree-id124 . -86) (undo-tree-id126 . -85) (undo-tree-id128 . -85) (undo-tree-id130 . -38) (undo-tree-id131 . -54) (undo-tree-id132 . -57) (undo-tree-id133 . -58) (undo-tree-id134 . -67) (undo-tree-id136 . -38) (t 26130 30620 209121 520000)) ((284 . 371)) (26130 30755 11823 934000) 0 nil] [nil nil ((560 . 573) (t 26130 30577 695771 415000)) ((#(" className=\"\"" 0 1 (font-lock-multiline t syntax-multiline t fontified t) 1 2 (font-lock-multiline t face font-lock-variable-name-face syntax-multiline t js-jsx-attribute-name (#<marker at 291 in App.js> #<marker at 291 in App.js>) fontified t) 2 10 (font-lock-multiline t face font-lock-variable-name-face syntax-multiline t fontified t) 10 11 (font-lock-multiline t syntax-multiline t fontified t) 11 12 (font-lock-multiline t face font-lock-string-face syntax-multiline t js-jsx-string t fontified t) 12 13 (font-lock-multiline t face font-lock-string-face syntax-multiline t fontified t)) . 560) (undo-tree-id68 . 1) (undo-tree-id69 . -1) (undo-tree-id70 . -10) (undo-tree-id71 . -12) (undo-tree-id72 . -12) (undo-tree-id73 . -12) (undo-tree-id74 . -12) (undo-tree-id75 . -12) (undo-tree-id76 . -12) (undo-tree-id77 . -12) (undo-tree-id78 . -1) (undo-tree-id79 . -10) (undo-tree-id80 . -12) (undo-tree-id81 . -12)) (26130 30618 438675 766000) 0 nil])
([nil nil ((548 . 552)) nil (26130 30827 395833 439000) 0 nil])
([nil nil ((291 . 299) (#("-" 0 1 (font-lock-multiline t face font-lock-string-face syntax-multiline t fontified t)) . -291) (undo-tree-id137 . -1) (undo-tree-id139 . -1) (undo-tree-id141 . -1) (undo-tree-id143 . -1) (#("h" 0 1 (font-lock-multiline t face font-lock-string-face syntax-multiline t fontified t)) . -292) (undo-tree-id144 . -1) (undo-tree-id146 . -1) (undo-tree-id148 . -1) (#("s" 0 1 (font-lock-multiline t face font-lock-string-face syntax-multiline t fontified t)) . -293) (undo-tree-id149 . -1) (undo-tree-id151 . -1) 294 (281 . 294)) ((#(" relative -hs" 0 10 (font-lock-multiline t face font-lock-string-face syntax-multiline t fontified nil) 10 11 (font-lock-multiline t face font-lock-string-face syntax-multiline t fontified nil) 11 12 (font-lock-multiline t face font-lock-string-face syntax-multiline t fontified nil) 12 13 (font-lock-multiline t face font-lock-string-face syntax-multiline t fontified nil)) . 281) (291 . 294) (#("h-screen" 0 8 (font-lock-multiline t face font-lock-string-face syntax-multiline t fontified t)) . 291)) (26130 30754 368188 459000) 0 nil])
([nil nil ((572 . 576)) ((#("z-10" 0 4 (font-lock-multiline t face font-lock-string-face syntax-multiline t fontified t)) . 572) (undo-tree-id62 . -4) (undo-tree-id63 . -4) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (t 26130 30608 295783 487000)) (26130 30608 299054 960000) 0 nil])
([nil nil ((552 . 561) (t 26130 30827 395908 19000)) nil (26130 30830 172703 870000) 0 nil])
([nil nil ((#("      </div>
" 0 6 (face default font-lock-multiline t syntax-multiline t fontified t) 6 7 (font-lock-multiline t syntax-multiline t js-jsx-tag-beg (close . 580) syntax-table (4 . 62) fontified t) 7 8 (font-lock-multiline t syntax-multiline t fontified t) 8 9 (font-lock-multiline t face font-lock-function-name-face syntax-multiline t js-jsx-tag-name (#<marker at 373 in App.js> #<marker at 376 in App.js>) fontified t) 9 11 (font-lock-multiline t face font-lock-function-name-face syntax-multiline t fontified t) 11 12 (font-lock-multiline t syntax-multiline t syntax-table (5 . 60) fontified t) 12 13 (syntax-multiline t js-jsx-tag-end 574 fontified t)) . 568) (undo-tree-id152 . -12) (undo-tree-id153 . 13) (undo-tree-id154 . -12) (undo-tree-id155 . -8) (undo-tree-id156 . -11) (undo-tree-id158 . -12) (undo-tree-id160 . -11) (undo-tree-id161 . -11) (undo-tree-id163 . -13) 579 (t 26130 30701 885823 726000)) ((568 . 581) (t 26130 30753 829191 958000)) (26130 30752 823733 497000) 0 nil])
nil
([nil nil ((561 . 562)) nil (26130 30830 172701 310000) 0 nil])
([nil nil ((421 . 430) (t 26130 30706 919160 440000)) ((#(" -hscreen" 0 1 (font-lock-multiline t face font-lock-string-face syntax-multiline t fontified t) 1 2 (font-lock-multiline t face font-lock-string-face syntax-multiline t fontified t) 2 3 (font-lock-multiline t face font-lock-string-face syntax-multiline t fontified t) 3 9 (font-lock-multiline t face font-lock-string-face syntax-multiline t fontified t)) . 421) (undo-tree-id174 . -3) (undo-tree-id175 . -3) (undo-tree-id176 . -3) (undo-tree-id177 . -3) (undo-tree-id178 . -1) (undo-tree-id179 . -3) (undo-tree-id180 . -3) (undo-tree-id181 . -3) (undo-tree-id182 . -1) (undo-tree-id183 . -1)) (26130 30752 507724 891000) 0 nil])
([nil nil ((631 . 633) (621 . 622) (#("    " 0 4 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 621) (609 . 614) (#("      " 0 6 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 609) (597 . 599) (#("        " 0 8 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 597) (580 . 586) (#("          " 0 10 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 580) (566 . 572) (#("          " 0 10 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 566) (552 . 558) (#("          " 0 10 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 552) (541 . 543) (#("        " 0 8 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 541) (525 . 526) (#("  " 0 2 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 525) (480 . 482) (#("        " 0 8 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 480) (417 . 419) (#("        " 0 8 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 417) (368 . 370) (#("        " 0 8 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 368) (329 . 334) (#("      " 0 6 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 329) (283 . 288) (#("      " 0 6 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 283) (260 . 261) (#("    " 0 4 (part-side jsx fontified t)) . 260) (249 . 251) 562 (t 26130 30830 172576 549000)) nil (26130 30876 675031 506000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-multiline t face font-lock-string-face syntax-multiline t fontified t)) . 422) (t 26130 30729 595842 339000)) ((422 . 423)) (26130 30752 167724 806000) 0 nil])
([nil nil ((#("e" 0 1 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 538) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (t 26130 30877 682608 442000)) nil (26130 30882 921590 417000) 0 nil] [nil nil ((526 . 555) (#("div.className" 0 4 (jsx-depth 1 part-side jsx syntax-multiline t fontified t) 4 13 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . -526) (undo-tree-id0 . -13) (undo-tree-id1 . -13) (undo-tree-id2 . -13) (undo-tree-id3 . -13) 539) ((526 . 539) (#("<div class=\"className\"></div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 4 5 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 6 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 11 21 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 21 22 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t jsx-depth 1 part-side jsx) 22 23 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 23 24 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 24 25 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 25 28 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 28 29 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx)) . 526) (undo-tree-id4 . 6) (undo-tree-id5 . -23) (undo-tree-id6 . -23) (undo-tree-id7 . -22) (undo-tree-id8 . -22) (undo-tree-id9 . -22) (undo-tree-id10 . -22) (undo-tree-id11 . -22) (undo-tree-id12 . -22) (t 26130 30872 705938 432000)) (26130 30872 708812 310000) 0 nil])
([nil nil ((423 . 424)) ((#("h" 0 1 (font-lock-multiline t face font-lock-string-face syntax-multiline t fontified t)) . 423) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1)) (26130 30751 775652 53000) 0 nil])
([nil nil ((#("m" 0 1 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 537) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1)) nil (26130 30882 921588 797000) 0 nil])
nil
([nil nil ((#("h" 0 1 (font-lock-multiline t face font-lock-string-face syntax-multiline t fontified t)) . -423) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) 424) ((423 . 424)) (26130 30751 243918 988000) 0 nil])
([nil nil ((#("a" 0 1 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 536) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1)) nil (26130 30882 921585 347000) 0 nil])
([nil nil ((423 . 424)) ((#("-" 0 1 (font-lock-multiline t face font-lock-string-face syntax-multiline t fontified t)) . 423) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (t 26130 30734 155845 402000)) (26130 30734 154455 851000) 0 nil])
([nil nil ((#("N" 0 1 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 535) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1)) nil (26130 30882 921582 847000) 0 nil])
nil
([nil nil ((#("s" 0 1 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 534) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1)) nil (26130 30882 921580 157000) 0 nil])
([nil nil ((#("s" 0 1 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 533) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1)) nil (26130 30882 921577 447000) 0 nil])
([nil nil ((#("a" 0 1 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 532) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1)) nil (26130 30882 921574 167000) 0 nil])
([nil nil ((#("l" 0 1 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 531) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1)) nil (26130 30882 921528 407000) 0 nil])
([nil nil ((#("c" 0 1 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 530) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1)) nil (26130 30882 921522 687000) 0 nil])
([nil nil ((526 . 537) (#("div" 0 3 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . -526) (undo-tree-id101 . -3) (undo-tree-id102 . -3) (undo-tree-id103 . -3) (undo-tree-id104 . -3) (undo-tree-id105 . -3) (undo-tree-id106 . -3) (undo-tree-id107 . -3) (undo-tree-id108 . -3) (undo-tree-id109 . -3) (undo-tree-id110 . -3) (undo-tree-id111 . -3) (undo-tree-id112 . -3) (undo-tree-id113 . -3) (undo-tree-id114 . -3) (undo-tree-id115 . -3) (undo-tree-id116 . -3) (undo-tree-id117 . -3) (undo-tree-id118 . -3) (undo-tree-id119 . -3) 529 (#("." 0 1 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . -529) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) 530 (t 26130 30882 922611 964000)) nil (26130 30891 551129 201000) 0 nil])
([nil nil ((553 . 555) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -553) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -554) (undo-tree-id142 . -1) (undo-tree-id143 . -1) 555 (552 . 555) (#("(" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -552) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -553) (undo-tree-id146 . -1) (undo-tree-id147 . -1) 554 (553 . 554) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -553) (undo-tree-id148 . -1) (undo-tree-id149 . -1) 554 (551 . 554) (542 . 551) (#("\"" 0 1 (tag-type start tag-name "div" jsx-depth 1 part-side jsx)) . 543) (542 . 543) (530 . 543) (t 26130 30891 552617 757000)) nil (26130 30903 54295 498000) 0 nil])
([nil nil ((#("</div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 2 5 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx)) . 557) (undo-tree-id138 . -5) (undo-tree-id139 . -6)) nil (26130 30903 60229 368000) 0 nil])
([nil nil ((#("		" 0 2 (jsx-depth 1 part-side jsx)) . -627) (undo-tree-id153 . -2) (undo-tree-id154 . -2) (undo-tree-id155 . -2) (undo-tree-id156 . -2) 629 (626 . 629) 625) nil (26130 30906 538552 567000) 0 nil] [nil nil ((nil rear-nonsticky nil 631 . 632) (nil part-side jsx 631 . 632) (nil jsx-depth 1 631 . 632) (nil tag-name "div" 631 . 632) (nil tag-type end 631 . 632) (nil tag-end t 631 . 632) (nil font-lock-face web-mode-html-tag-bracket-face 631 . 632) (nil part-side jsx 628 . 631) (nil jsx-depth 1 628 . 631) (nil tag-name "div" 628 . 631) (nil tag-type end 628 . 631) (nil font-lock-face web-mode-html-tag-face 628 . 631) (nil part-side jsx 627 . 628) (nil jsx-depth 1 627 . 628) (nil tag-name "div" 627 . 628) (nil tag-type end 627 . 628) (nil font-lock-face web-mode-html-tag-bracket-face 627 . 628) (nil part-side jsx 626 . 627) (nil jsx-depth 1 626 . 627) (nil tag-name "div" 626 . 627) (nil tag-type end 626 . 627) (nil tag-beg 20 626 . 627) (nil font-lock-face web-mode-html-tag-bracket-face 626 . 627) (626 . 632) 625) ((#("</div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 2 5 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx rear-nonsticky nil)) . 626) (undo-tree-id150 . -5) (undo-tree-id151 . -5) (undo-tree-id152 . -5) (nil tag-name "div" 626 . 627) (nil tag-name "div" 627 . 628) (nil tag-name "div" 628 . 631) (nil tag-name "div" 631 . 632) (nil rear-nonsticky t 631 . 632)) (26130 30903 54281 748000) 0 nil])
([nil nil ((nil rear-nonsticky nil 632 . 633) (nil part-side jsx 632 . 633) (nil jsx-depth 1 632 . 633) (nil tag-name "div" 632 . 633) (nil tag-type end 632 . 633) (nil tag-end t 632 . 633) (nil font-lock-face web-mode-html-tag-bracket-face 632 . 633) (nil part-side jsx 629 . 632) (nil jsx-depth 1 629 . 632) (nil tag-name "div" 629 . 632) (nil tag-type end 629 . 632) (nil font-lock-face web-mode-html-tag-face 629 . 632) (nil part-side jsx 628 . 629) (nil jsx-depth 1 628 . 629) (nil tag-name "div" 628 . 629) (nil tag-type end 628 . 629) (nil font-lock-face web-mode-html-tag-bracket-face 628 . 629) (nil part-side jsx 627 . 628) (nil jsx-depth 1 627 . 628) (nil tag-name "div" 627 . 628) (nil tag-type end 627 . 628) (nil tag-beg 20 627 . 628) (nil font-lock-face web-mode-html-tag-bracket-face 627 . 628) (627 . 633)) nil (26130 30906 538545 377000) 0 nil])
nil
([nil nil ((626 . 628) (612 . 616) (598 . 599) (#("    " 0 4 (jsx-depth 1 part-side jsx js-jsx-text (615 626 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 608 fontified t)) . 598) (587 . 588) (#("    " 0 4 (jsx-depth 1 part-side jsx js-jsx-text (597 608 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 590 fontified t)) . 587) (576 . 577) (#("    " 0 4 (jsx-depth 1 part-side jsx js-jsx-text (579 590 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 571 fontified t)) . 576) (561 . 565) 632) nil (26130 30906 538540 507000) 0 nil])
([nil nil ((#("relative h-full" 0 15 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 350) (undo-tree-id196 . -14) (undo-tree-id197 . -14) (undo-tree-id198 . -14) (undo-tree-id199 . -14) (undo-tree-id200 . -14) (undo-tree-id201 . -15) 364 (t 26130 30906 539294 481000)) nil (26130 30925 72407 74000) 0 nil])
([nil nil ((280 . 281)) nil (26130 30925 72404 944000) 0 nil])
([nil nil ((nil rear-nonsticky nil 295 . 296) (nil part-side jsx 281 . 296) (nil jsx-depth 1 281 . 296) (nil tag-attr t 281 . 296) (nil tag-name "div" 281 . 296) (nil tag-type start 281 . 296) (nil font-lock-face web-mode-html-attr-value-face 281 . 296) (281 . 296) 280) nil (26130 30925 72404 604000) 0 nil])
([nil nil ((#("	    <div className=\"\">
" 0 5 (jsx-depth 1 part-side jsx syntax-multiline t js-jsx-text (330 337 #<buffer App.js>) fontified t) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx js-jsx-close-tag-pos 661 syntax-multiline t js-jsx-tag-beg (open . 370) fontified t) 6 7 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx syntax-multiline t js-jsx-tag-name (#<marker at 271 in App.js> #<marker at 271 in App.js>) fontified t) 7 9 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx syntax-multiline t fontified t) 9 10 (tag-type start tag-name "div" jsx-depth 1 part-side jsx syntax-multiline t fontified t) 10 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx syntax-multiline t js-jsx-attribute-name (#<marker at 271 in App.js> #<marker at 271 in App.js>) fontified t) 11 19 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 19 20 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 20 21 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t js-jsx-string t fontified t) 21 22 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 22 23 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx syntax-multiline t fontified t) 23 24 (jsx-depth 1 part-side jsx js-jsx-text (370 379 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 337 fontified t)) . 345) (undo-tree-id168 . -21) (undo-tree-id169 . 3) (undo-tree-id170 . -21) (undo-tree-id171 . -21) (undo-tree-id172 . -23) (undo-tree-id173 . -6) (undo-tree-id174 . -9) (undo-tree-id175 . -10) (undo-tree-id176 . -19) (undo-tree-id177 . -6) (undo-tree-id178 . -9) (undo-tree-id179 . -10) (undo-tree-id180 . -19) (undo-tree-id181 . -6) (undo-tree-id182 . -9) (undo-tree-id183 . -10) (undo-tree-id184 . -19) (undo-tree-id185 . -21) (undo-tree-id186 . -21) (undo-tree-id187 . -21) (undo-tree-id188 . -21) (undo-tree-id189 . -21) (undo-tree-id190 . -21) (undo-tree-id191 . -22) (undo-tree-id192 . -22) (undo-tree-id193 . -22) (undo-tree-id194 . -22) (undo-tree-id195 . -24) 367) nil (26130 30925 72403 134000) 0 nil])
([nil nil ((#("		</div>
" 0 2 (jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 4 7 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx rear-nonsticky t) 8 9 (jsx-depth 1 part-side jsx js-jsx-text (654 661 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 645 fontified t)) . 603) (undo-tree-id157 . -8) (undo-tree-id158 . -7) (undo-tree-id159 . -7) (undo-tree-id160 . -7) (undo-tree-id161 . -7) (undo-tree-id162 . -7) (undo-tree-id163 . -7) (undo-tree-id164 . -7) (undo-tree-id165 . -7) (undo-tree-id166 . -7) (undo-tree-id167 . -9) 610) nil (26130 30925 72394 894000) 0 nil])
([nil nil ((#("    " 0 4 (jsx-depth 1 part-side jsx js-jsx-text (636 645 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 626 fontified t)) . -606) (#("	" 0 1 (jsx-depth 1 part-side jsx js-jsx-text (615 626 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 608 fontified t)) . -593) (593 . 594) (#("	" 0 1 (jsx-depth 1 part-side jsx js-jsx-text (615 626 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 608 fontified t)) . 593) (589 . 593) (#("	" 0 1 (jsx-depth 1 part-side jsx js-jsx-text (597 608 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 590 fontified t)) . -579) (579 . 580) (#("	" 0 1 (jsx-depth 1 part-side jsx js-jsx-text (597 608 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 590 fontified t)) . 579) (575 . 579) (#("	" 0 1 (jsx-depth 1 part-side jsx js-jsx-text (579 590 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 571 fontified t)) . -565) (565 . 566) (#("	" 0 1 (jsx-depth 1 part-side jsx js-jsx-text (579 590 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 571 fontified t)) . 565) (561 . 565) (#("    " 0 4 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . -550) (#("	" 0 1 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . -515) (515 . 516) (#("	" 0 1 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 515) (511 . 515) (#("	" 0 1 (jsx-depth 1 part-side jsx js-jsx-text (494 503 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 434 fontified t)) . -468) (468 . 469) (#("	" 0 1 (jsx-depth 1 part-side jsx js-jsx-text (494 503 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 434 fontified t)) . 468) (464 . 468) (#("	" 0 1 (jsx-depth 1 part-side jsx syntax-multiline t js-jsx-text (425 434 #<buffer App.js>) fontified t)) . -402) (402 . 403) (#("	" 0 1 (jsx-depth 1 part-side jsx syntax-multiline t js-jsx-text (425 434 #<buffer App.js>) fontified t)) . 402) (398 . 402) (#("	" 0 1 (jsx-depth 1 part-side jsx js-jsx-text (370 379 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 337 fontified t)) . -350) (350 . 351) (#("	" 0 1 (jsx-depth 1 part-side jsx js-jsx-text (370 379 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 337 fontified t)) . 350) (346 . 350) 613) nil (26130 30925 72381 394000) 0 nil])
([nil nil ((292 . 298) (#("full" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx rear-nonsticky t)) . 292) (undo-tree-id202 . -3) (undo-tree-id203 . -4) (undo-tree-id204 . -4) (t 26130 30925 82640 272000)) nil (26130 30932 347646 926000) 0 nil])
([nil nil ((#("	    {/* Container for the entire content */}
	    {/* MatrixRainingLetters as the background */}
" 0 5 (jsx-depth 1 part-side jsx js-jsx-text (283 290 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 262 fontified t) 5 6 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx syntax-multiline t js-jsx-expr 330 fontified t) 6 7 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx syntax-multiline t fontified t) 7 9 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx syntax-multiline t fontified t) 9 19 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx syntax-multiline t fontified t) 19 22 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx syntax-multiline t fontified t) 22 41 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx syntax-multiline t fontified t) 41 43 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx syntax-multiline t fontified t) 43 44 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx syntax-multiline t fontified t) 44 45 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx syntax-multiline t fontified t) 45 46 (jsx-depth 1 part-side jsx syntax-multiline t js-jsx-text (330 337 #<buffer App.js>) fontified t) 46 51 (jsx-depth 1 part-side jsx js-jsx-text (370 379 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 337 fontified t) 51 52 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx syntax-multiline t js-jsx-expr 425 fontified t) 52 53 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx syntax-multiline t fontified t) 53 55 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx syntax-multiline t fontified t) 55 76 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx syntax-multiline t fontified t) 76 78 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx syntax-multiline t fontified t) 78 93 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx syntax-multiline t fontified t) 93 95 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx syntax-multiline t fontified t) 95 96 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx syntax-multiline t fontified t) 96 97 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx syntax-multiline t fontified t) 97 98 (jsx-depth 1 part-side jsx syntax-multiline t js-jsx-text (425 434 #<buffer App.js>) fontified t)) . 301) (undo-tree-id205 . -96) (undo-tree-id206 . -96) (undo-tree-id207 . -45) (undo-tree-id208 . -97) (undo-tree-id209 . -46) (undo-tree-id210 . -46) (undo-tree-id211 . -46) (undo-tree-id212 . -46) (undo-tree-id213 . -46) (undo-tree-id214 . -46) (undo-tree-id215 . -46) (undo-tree-id216 . -46) (undo-tree-id217 . -46) (undo-tree-id218 . -46) (undo-tree-id219 . -46) (undo-tree-id220 . -46) (undo-tree-id221 . -97) (undo-tree-id222 . -97) (undo-tree-id223 . -96) (undo-tree-id224 . -96) (undo-tree-id225 . -96) (undo-tree-id226 . -45) (undo-tree-id227 . -96) (undo-tree-id228 . -45) (undo-tree-id229 . -98) 346 (t 26130 30932 349311 817000)) nil (26130 31294 329241 249000) 0 nil])
([nil nil ((#("
" 0 1 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 451)) ((451 . 452) (t 26130 31294 109554 701000)) (26130 31295 281154 666000) 0 nil])
([nil nil ((292 . 296) (#("screen" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 292) (undo-tree-id249 . -5) (undo-tree-id250 . -6) (undo-tree-id251 . -6) (t 26130 31294 109554 701000)) nil (26130 31321 421932 546000) 0 nil] [nil nil ((#("screen" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 292) (undo-tree-id240 . -5) (undo-tree-id241 . -6) (undo-tree-id242 . -6) (t 26130 31015 356034 221000)) ((292 . 298)) (26130 31292 465403 486000) 0 nil] [nil nil ((448 . 455) (t 26130 30949 435989 960000)) ((#(" h-full" 0 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 448) (undo-tree-id231 . -7) (undo-tree-id232 . -7) (undo-tree-id233 . -7) (undo-tree-id234 . -6) (undo-tree-id235 . -6) (undo-tree-id236 . -6) (undo-tree-id237 . -6) (undo-tree-id238 . -6) (undo-tree-id239 . -6) (t 26130 30998 102689 294000)) (26130 30998 103244 713000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 295) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (t 26130 31321 422906 371000)) nil (26130 31389 251735 535000) 0 nil])
([nil nil ((292 . 296)) ((#("full" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 292)) (26130 31292 45401 252000) 0 nil])
nil
([nil nil ((#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 290) (undo-tree-id277 . -1) (undo-tree-id278 . -1)) nil (26130 31389 251734 725000) 0 nil])
([nil nil ((446 . 453) (t 26130 31253 242860 592000)) ((#(" h-full" 0 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 446) (undo-tree-id243 . -7) (undo-tree-id244 . -7) (undo-tree-id245 . -6) (undo-tree-id246 . -6) (undo-tree-id247 . -6) (undo-tree-id248 . -6) (t 26130 31258 622864 206000)) (26130 31258 619922 532000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 290) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1)) nil (26130 31389 251733 915000) 0 nil])
nil
([nil nil ((#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 290) (undo-tree-id272 . -1) (undo-tree-id273 . -1)) nil (26130 31389 251732 785000) 0 nil])
([nil nil ((#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 290) (undo-tree-id270 . -1) (undo-tree-id271 . -1)) nil (26130 31389 251731 865000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 290) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1)) nil (26130 31389 251730 685000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 289) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1)) nil (26130 31389 251726 525000) 0 nil])
([nil nil ((#("relative" 0 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 281) (undo-tree-id309 . -7) (undo-tree-id310 . -8) (undo-tree-id311 . -8) (undo-tree-id312 . -8) (undo-tree-id313 . -8) (undo-tree-id314 . -8) (undo-tree-id315 . -8) (undo-tree-id316 . -8) (undo-tree-id317 . -8) (undo-tree-id318 . -8) (undo-tree-id319 . -8) (undo-tree-id320 . -8) (undo-tree-id321 . -8) (undo-tree-id322 . -8) (undo-tree-id323 . -8) (undo-tree-id324 . -8) (undo-tree-id325 . -8) (undo-tree-id326 . -8) (t 26130 31389 252951 929000)) nil (26130 31425 317500 723000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . -280) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) 281) nil (26130 31540 32538 273000) 0 nil])
([nil nil ((#("	    <MatrixRainingLetters custom_class=\"absolute inset-0 z-0\" />
" 0 5 (jsx-depth 1 part-side jsx syntax-multiline t js-jsx-text (425 434 #<buffer App.js>) fontified t) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx syntax-multiline t js-jsx-tag-beg (self-closing . 494) fontified t) 6 7 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx syntax-multiline t js-jsx-tag-name (#<marker at 271 in App.js> #<marker at 271 in App.js>) fontified t) 7 26 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx syntax-multiline t fontified t) 26 27 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx syntax-multiline t fontified t) 27 28 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx syntax-multiline t js-jsx-attribute-name (#<marker at 271 in App.js> #<marker at 271 in App.js>) fontified t) 28 39 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 39 40 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 40 41 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t js-jsx-string t fontified t) 41 61 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 61 62 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 62 63 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx syntax-multiline t fontified t) 63 64 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx syntax-multiline t fontified t) 64 65 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx syntax-multiline t fontified t) 65 66 (jsx-depth 1 part-side jsx js-jsx-text (494 503 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 434 fontified t)) . 283) (undo-tree-id344 . -65) (undo-tree-id345 . -6) (undo-tree-id346 . -26) (undo-tree-id347 . -27) (undo-tree-id348 . -39) (undo-tree-id349 . -32) (undo-tree-id350 . -32) (undo-tree-id351 . -20) (undo-tree-id352 . -20) (undo-tree-id353 . -20) (undo-tree-id354 . -20) (undo-tree-id355 . -20) (undo-tree-id356 . -20) (undo-tree-id357 . -66) 303 (t 26130 31541 696387 627000)) nil (26130 31560 343745 623000) 0 nil] [nil nil ((280 . 285) (t 26130 31425 319642 817000)) ((#(" min-" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 280) (undo-tree-id342 . -5) (undo-tree-id343 . -5)) (26130 31539 700376 702000) 0 nil])
([nil nil ((nil rear-nonsticky nil 334 . 335) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -395) (329 . 396) 302) nil (26130 31582 86985 745000) 0 nil] [nil nil ((378 . 444) 390) ((#("	    <MatrixRainingLetters custom_class=\"absolute inset-0 z-0\" />
" 0 5 (jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 6 26 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 26 27 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 27 28 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 28 39 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 39 40 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 40 61 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 61 62 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 62 63 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 63 64 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 64 65 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 65 66 (jsx-depth 1 part-side jsx)) . 378) (undo-tree-id365 . -66) (undo-tree-id366 . -65) (undo-tree-id367 . -5) (undo-tree-id368 . -5) (undo-tree-id369 . -5) (undo-tree-id370 . -5) (t 26130 31557 993065 239000)) (26130 31557 991039 302000) 0 nil] [nil nil ((nil rear-nonsticky nil 396 . 397) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -457) (391 . 458) 390) ((#("
	    <MatrixRainingLetters custom_class=\"absolute inset-0 z-0\" />
" 0 1 (jsx-depth 1 part-side jsx) 1 5 (jsx-depth 1 part-side jsx) 5 6 (jsx-depth 1 part-side jsx rear-nonsticky nil) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 7 27 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 27 28 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 28 29 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 29 40 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 40 41 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 41 62 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 62 63 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 63 64 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 64 65 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 65 66 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 66 67 (jsx-depth 1 part-side jsx)) . 391) (undo-tree-id358 . -66) (undo-tree-id359 . -1) (undo-tree-id360 . -66) (undo-tree-id361 . -6) (undo-tree-id362 . -6) (undo-tree-id363 . -6) (undo-tree-id364 . -6) (457 . 458) (nil rear-nonsticky t 396 . 397) (t 26130 31551 233060 699000)) (26130 31551 229985 426000) 0 nil])
([nil nil ((285 . 293) (t 26130 31502 119694 382000)) ((#("h-screen" 0 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 285)) (26130 31539 352368 566000) 0 nil])
([nil nil ((391 . 392) (t 26130 31583 96415 434000)) nil (26130 31596 416990 216000) 0 nil] [nil nil ((#("	    <MatrixRainingLetters custom_class=\"absolute inset-0 z-0\" />
	    <div className=\"relative z-10\">
" 0 4 (jsx-depth 1 part-side jsx) 4 5 (jsx-depth 1 part-side jsx rear-nonsticky t) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 6 26 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 26 27 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 27 28 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 28 39 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 39 40 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 40 61 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 61 62 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 62 63 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 63 64 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 64 65 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 65 66 (jsx-depth 1 part-side jsx syntax-multiline t js-jsx-text (544 571 #<buffer App.js>) fontified t) 66 71 (jsx-depth 1 part-side jsx syntax-multiline t fontified t) 71 72 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 72 75 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 75 76 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 76 77 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 77 78 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 78 79 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 79 80 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 80 81 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 81 82 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 82 83 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 83 84 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 84 85 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 85 86 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 86 96 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 96 100 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 100 101 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 101 102 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 102 103 (jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 330) (undo-tree-id371 . -71) (undo-tree-id372 . -5) (undo-tree-id373 . -71) (undo-tree-id374 . -102) (undo-tree-id375 . -103) (undo-tree-id376 . -103) (undo-tree-id377 . -103) (undo-tree-id378 . -103) (undo-tree-id379 . -100) (undo-tree-id380 . -5) (undo-tree-id381 . -5) (undo-tree-id382 . -5) (undo-tree-id383 . -71) (undo-tree-id384 . -5) (undo-tree-id385 . -71) (undo-tree-id386 . -103) 401 (t 26130 31563 286402 128000)) ((330 . 433)) (26130 31581 776677 717000) 0 nil])
nil
nil
([nil nil ((#("	    <MatrixRainingLetters custom_class=\"absolute inset-0 z-0\" />
" 0 5 (jsx-depth 1 part-side jsx syntax-multiline t js-jsx-text (425 434 #<buffer App.js>) fontified t) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx syntax-multiline t js-jsx-tag-beg (self-closing . 494) fontified t) 6 7 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx syntax-multiline t js-jsx-tag-name (#<marker at 271 in App.js> #<marker at 271 in App.js>) fontified t) 7 26 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx syntax-multiline t fontified t) 26 27 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx syntax-multiline t fontified t) 27 28 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx syntax-multiline t js-jsx-attribute-name (#<marker at 271 in App.js> #<marker at 271 in App.js>) fontified t) 28 39 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 39 40 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 40 41 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t js-jsx-string t fontified t) 41 61 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 61 62 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 62 63 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx syntax-multiline t fontified t) 63 64 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx syntax-multiline t fontified t) 64 65 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx syntax-multiline t fontified t) 65 66 (jsx-depth 1 part-side jsx js-jsx-text (494 503 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 434 fontified t)) . 296) (undo-tree-id327 . -65) (undo-tree-id328 . -6) (undo-tree-id329 . -26) (undo-tree-id330 . -27) (undo-tree-id331 . -39) (undo-tree-id332 . -32) (undo-tree-id333 . -32) (undo-tree-id334 . -32) (undo-tree-id335 . -32) (undo-tree-id336 . -66) 328 (t 26130 31507 216364 467000)) ((296 . 362)) (26130 31539 189269 260000) 0 nil])
([nil nil ((392 . 398) (t 26130 31596 419757 717000)) nil (26130 31598 640973 383000) 0 nil])
([nil nil ((nil rear-nonsticky nil 345 . 346) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -443) (340 . 444) 332) ((#("
	    <MatrixRainingLetters custom_class=\"absolute inset-0 z-0\" />
	    <div className=\"relative z-10\">
" 0 1 (jsx-depth 1 part-side jsx) 1 5 (jsx-depth 1 part-side jsx) 5 6 (jsx-depth 1 part-side jsx rear-nonsticky nil) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 7 27 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 27 28 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 28 29 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 29 40 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 40 41 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 41 62 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 62 63 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 63 64 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 64 65 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 65 66 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 66 72 (jsx-depth 1 part-side jsx) 72 73 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 73 76 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 76 77 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 77 78 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 78 86 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 86 87 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 87 101 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 101 102 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 102 103 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 103 104 (jsx-depth 1 part-side jsx)) . 340) (undo-tree-id387 . -103) (undo-tree-id388 . -1) (undo-tree-id389 . -103) (undo-tree-id390 . -6) (undo-tree-id391 . -6) (undo-tree-id392 . -6) (undo-tree-id393 . -6) (443 . 444) (nil rear-nonsticky t 345 . 346) (t 26130 31572 503074 988000)) (26130 31572 501115 555000) 0 nil])
([nil nil ((nil rear-nonsticky nil 409 . 410) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -470) (404 . 471) 403) ((#("
	    <MatrixRainingLetters custom_class=\"absolute inset-0 z-0\" />
" 0 1 (jsx-depth 1 part-side jsx) 1 5 (jsx-depth 1 part-side jsx) 5 6 (jsx-depth 1 part-side jsx rear-nonsticky nil) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 7 27 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 27 28 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 28 29 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 29 40 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 40 41 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 41 62 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 62 63 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 63 64 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 64 65 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 65 66 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 66 67 (jsx-depth 1 part-side jsx)) . 404) (undo-tree-id337 . -66) (undo-tree-id338 . -1) (undo-tree-id339 . -66) (undo-tree-id340 . -6) (undo-tree-id341 . -6) (470 . 471) (nil rear-nonsticky t 409 . 410) (t 26130 31533 423048 736000)) (26130 31533 421623 194000) 0 nil])
([nil nil ((#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . -392) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . -393) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . -394) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . -395) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . -396) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . -397) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) 398 (t 26130 31598 643092 544000)) nil (26130 31602 51292 742000) 0 nil])
nil
nil
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . -391) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (t 26130 31602 53094 836000)) nil (26130 31603 828357 354000) 0 nil])
([nil nil ((#("inset-0 " 0 8 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 380) (undo-tree-id430 . -7) (undo-tree-id431 . -7) (undo-tree-id432 . -7) (undo-tree-id433 . -7) (undo-tree-id434 . -7) (undo-tree-id435 . -8) (undo-tree-id436 . -8) 387 (t 26130 31603 826429 358000)) nil (26130 31774 694902 745000) 0 nil])
([nil nil ((28 . 83) (#("import { MatrixRainingLetters } from 'react-mdr';" 0 6 (face web-mode-keyword-face part-side jsx fontified t) 6 32 (part-side jsx fontified t) 32 36 (face web-mode-keyword-face part-side jsx fontified t) 36 37 (part-side jsx fontified t) 37 38 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx fontified t) 38 47 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx fontified t) 47 48 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx fontified t) 48 49 (part-side jsx fontified t)) . 28) (undo-tree-id445 . -49) (undo-tree-id446 . -48) (undo-tree-id447 . -48) (undo-tree-id448 . -49) (undo-tree-id449 . -49) (undo-tree-id450 . -48) (undo-tree-id451 . -48) (undo-tree-id452 . -48) (undo-tree-id453 . -48) (undo-tree-id454 . -48) 78 (t 26130 31774 696567 285000)) nil (26130 31947 723782 75000) 0 nil])
([nil nil ((341 . 401) (#("<MatrixRainingLetters custom_class=\"absolute z-0\" />" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 1 21 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 21 22 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 22 23 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 23 34 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 34 35 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 35 48 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 48 49 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 49 50 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 50 51 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 51 52 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx)) . 341) (undo-tree-id437 . -52) (undo-tree-id438 . 4) (undo-tree-id439 . -45) (undo-tree-id440 . -45) (undo-tree-id441 . -45) (undo-tree-id442 . -45) (undo-tree-id443 . -45) (undo-tree-id444 . -45) 394) nil (26130 31947 723775 695000) 0 nil])
([nil nil ((83 . 84) (t 26130 31947 726761 367000) 82) nil (26130 31964 478163 146000) 0 nil])
([nil nil ((nil rear-nonsticky nil 84 . 85) (nil part-side jsx 84 . 85) (nil part-side jsx 84 . 85) (84 . 85)) nil (26130 31964 478162 496000) 0 nil])
([nil nil ((nil rear-nonsticky nil 84 . 85) (nil part-side jsx 84 . 85) (nil part-side jsx 84 . 85) (84 . 85) 85) nil (26130 31964 478158 6000) 0 nil])
([nil nil ((nil rear-nonsticky nil 147 . 148) (nil part-side jsx 147 . 148) (nil part-side jsx 146 . 147) (nil part-token string 146 . 147) (nil syntax-table (15) 146 . 147) (nil font-lock-face web-mode-javascript-string-face 146 . 147) (nil part-side jsx 124 . 146) (nil part-token string 124 . 146) (nil font-lock-face web-mode-javascript-string-face 124 . 146) (nil part-side jsx 123 . 124) (nil part-token string 123 . 124) (nil syntax-table (15) 123 . 124) (nil font-lock-face web-mode-javascript-string-face 123 . 124) (nil part-side jsx 122 . 123) (nil part-side jsx 118 . 122) (nil face web-mode-keyword-face 118 . 122) (nil part-side jsx 92 . 118) (nil part-side jsx 86 . 92) (nil face web-mode-keyword-face 86 . 92) (86 . 148) 85 (t 26130 31964 483446 828000)) nil (26130 31969 52512 749000) 0 nil])
([nil nil ((#("
" 0 1 (syntax-table (12) part-side jsx)) . -83) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (#("
" 0 1 (part-side jsx rear-nonsticky t)) . -84) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) 85) nil (26130 31969 52508 919000) 0 nil])
([nil nil ((466 . 471) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 465) (undo-tree-id480 . -5) (undo-tree-id481 . -5) (undo-tree-id482 . -5) (464 . 471) (t 26130 31969 56785 293000)) nil (26130 32050 195824 728000) 0 nil])
([nil nil ((nil rear-nonsticky nil 591 . 592) (nil part-side jsx 591 . 592) (nil jsx-depth 1 591 . 592) (nil tag-name "div" 591 . 592) (nil tag-type end 591 . 592) (nil tag-end t 591 . 592) (nil font-lock-face web-mode-html-tag-bracket-face 591 . 592) (nil part-side jsx 588 . 591) (nil jsx-depth 1 588 . 591) (nil tag-name "div" 588 . 591) (nil tag-type end 588 . 591) (nil font-lock-face web-mode-html-tag-face 588 . 591) (nil part-side jsx 587 . 588) (nil jsx-depth 1 587 . 588) (nil tag-name "div" 587 . 588) (nil tag-type end 587 . 588) (nil font-lock-face web-mode-html-tag-bracket-face 587 . 588) (nil part-side jsx 586 . 587) (nil jsx-depth 1 586 . 587) (nil tag-name "div" 586 . 587) (nil tag-type end 586 . 587) (nil tag-beg 20 586 . 587) (nil font-lock-face web-mode-html-tag-bracket-face 586 . 587) (nil part-side jsx 581 . 586) (nil jsx-depth 1 581 . 586) (nil part-side jsx 580 . 581) (nil jsx-depth 1 580 . 581) (nil tag-name "reactmatrixanimation" 580 . 581) (nil tag-type void 580 . 581) (nil tag-end t 580 . 581) (nil font-lock-face web-mode-html-tag-bracket-face 580 . 581) (nil part-side jsx 579 . 580) (nil jsx-depth 1 579 . 580) (nil tag-name "reactmatrixanimation" 579 . 580) (nil tag-type void 579 . 580) (nil font-lock-face web-mode-html-tag-bracket-face 579 . 580) (nil part-side jsx 578 . 579) (nil jsx-depth 1 578 . 579) (nil tag-name "reactmatrixanimation" 578 . 579) (nil tag-type void 578 . 579) (nil part-side jsx 558 . 578) (nil jsx-depth 1 558 . 578) (nil tag-name "reactmatrixanimation" 558 . 578) (nil tag-type void 558 . 578) (nil font-lock-face web-mode-html-tag-face 558 . 578) (nil part-side jsx 557 . 558) (nil jsx-depth 1 557 . 558) (nil tag-name "reactmatrixanimation" 557 . 558) (nil tag-type void 557 . 558) (nil tag-beg 24 557 . 558) (nil font-lock-face web-mode-html-tag-bracket-face 557 . 558) (nil part-side jsx 550 . 557) (nil jsx-depth 1 550 . 557) (nil part-side jsx 549 . 550) (nil jsx-depth 1 549 . 550) (nil tag-name "div" 549 . 550) (nil tag-type start 549 . 550) (nil tag-end t 549 . 550) (nil font-lock-face web-mode-html-tag-bracket-face 549 . 550) (nil part-side jsx 548 . 549) (nil jsx-depth 1 548 . 549) (nil tag-attr t 548 . 549) (nil tag-attr-end 9 548 . 549) (nil tag-name "div" 548 . 549) (nil tag-type start 548 . 549) (nil font-lock-face web-mode-html-attr-value-face 548 . 549) (nil part-side jsx 490 . 548) (nil jsx-depth 1 490 . 548) (nil tag-attr t 490 . 548) (nil tag-name "div" 490 . 548) (nil tag-type start 490 . 548) (nil font-lock-face web-mode-html-attr-value-face 490 . 548) (nil part-side jsx 489 . 490) (nil jsx-depth 1 489 . 490) (nil tag-attr t 489 . 490) (nil tag-name "div" 489 . 490) (nil tag-type start 489 . 490) (nil font-lock-face web-mode-html-attr-equal-face 489 . 490) (nil part-side jsx 481 . 489) (nil jsx-depth 1 481 . 489) (nil tag-attr t 481 . 489) (nil tag-name "div" 481 . 489) (nil tag-type start 481 . 489) (nil font-lock-face web-mode-html-attr-name-face 481 . 489) (nil part-side jsx 480 . 481) (nil jsx-depth 1 480 . 481) (nil tag-attr-beg 0 480 . 481) (nil tag-attr t 480 . 481) (nil tag-name "div" 480 . 481) (nil tag-type start 480 . 481) (nil font-lock-face web-mode-html-attr-name-face 480 . 481) (nil part-side jsx 479 . 480) (nil jsx-depth 1 479 . 480) (nil tag-name "div" 479 . 480) (nil tag-type start 479 . 480) (nil part-side jsx 476 . 479) (nil jsx-depth 1 476 . 479) (nil tag-name "div" 476 . 479) (nil tag-type start 476 . 479) (nil font-lock-face web-mode-html-tag-face 476 . 479) (nil part-side jsx 475 . 476) (nil jsx-depth 1 475 . 476) (nil tag-name "div" 475 . 476) (nil tag-type start 475 . 476) (nil tag-beg 17 475 . 476) (nil font-lock-face web-mode-html-tag-bracket-face 475 . 476) (nil part-side jsx 471 . 475) (nil jsx-depth 1 471 . 475) (471 . 592)) nil (26130 32050 195814 388000) 0 nil])
([nil nil ((574 . 579) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 574) (547 . 549) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 547) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . -471) 591 (t 26130 32050 200209 638000)) nil (26130 32053 310940 1000) 0 nil])
([nil nil ((#("
" 0 1 (jsx-depth 1 part-side jsx)) . 465) (undo-tree-id483 . -1)) nil (26130 32053 310937 421000) 0 nil])
([nil nil ((499 . 500) (497 . 499) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -497) (undo-tree-id484 . -1) (undo-tree-id485 . -1) 498 (497 . 498) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -497) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (#("°" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -498) (undo-tree-id488 . -1) (undo-tree-id489 . -1) 499 (498 . 499) (#("+" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -498) (undo-tree-id490 . -1) (undo-tree-id491 . -1) 499 (498 . 499) (#("°" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -498) (undo-tree-id492 . -1) (undo-tree-id493 . -1) 499 (496 . 499) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -496) (undo-tree-id494 . -1) (undo-tree-id495 . -1) 497 (489 . 497) (#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -489) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -490) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -491) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -492) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -493) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -494) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -495) (undo-tree-id508 . -1) (undo-tree-id509 . -1) 496 (488 . 496) (486 . 488) (t 26130 32053 313546 464000)) nil (26130 32070 138082 946000) 0 nil])
([nil nil ((#("screen" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 514) (undo-tree-id512 . -5) (undo-tree-id513 . -6) (undo-tree-id514 . -6) (t 26130 32070 136898 670000)) nil (26130 32142 137388 632000) 0 nil])
([nil nil ((514 . 515)) nil (26130 32142 137385 882000) 0 nil])
([nil nil ((#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -514) (undo-tree-id510 . -1) (undo-tree-id511 . -1) 515) nil (26130 32142 137384 662000) 0 nil])
([nil nil ((514 . 518)) nil (26130 32142 137373 352000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -511) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -512) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -513) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -514) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -515) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -516) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -517) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) 518 (t 26130 32142 143646 107000)) nil (26130 32233 689781 415000) 0 nil])
([nil nil ((548 . 557) (t 26130 32234 697083 261000)) nil (26130 32668 224730 267000) 0 nil] [nil nil ((#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 486) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -486) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -487) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) 488 (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 488) (#("b" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -488) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -489) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -490) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -491) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) 492 (#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 492) (t 26130 32220 510400 679000)) ((488 . 493) (486 . 489) (486 . 487) (t 26130 32227 380408 387000)) (26130 32227 370070 470000) 0 nil])
([nil nil ((592 . 593) (#("    " 0 4 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx)) . 592) (470 . 606) (#("<div className=\" absolute z-0 m-auto flex w-screen items-center justify-center h-screen\">
		<ReactMatrixAnimation />
	    </div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 4 5 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 6 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 14 15 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 15 16 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 18 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 18 19 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 19 20 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 20 21 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 21 22 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 22 23 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 23 24 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 24 25 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 25 77 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 77 78 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 78 79 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 79 80 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 80 81 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 81 82 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 82 83 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 83 84 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 84 85 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 85 86 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 86 87 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 87 88 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 88 89 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 89 92 (jsx-depth 1 part-side jsx) 92 93 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "reactmatrixanimation" jsx-depth 1 part-side jsx) 93 113 (font-lock-face web-mode-html-tag-face tag-type void tag-name "reactmatrixanimation" jsx-depth 1 part-side jsx) 113 114 (tag-type void tag-name "reactmatrixanimation" jsx-depth 1 part-side jsx) 114 115 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "reactmatrixanimation" jsx-depth 1 part-side jsx) 115 116 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "reactmatrixanimation" jsx-depth 1 part-side jsx) 116 122 (jsx-depth 1 part-side jsx) 122 123 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 123 124 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 124 127 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 127 128 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx rear-nonsticky t)) . 470) (undo-tree-id798 . -128) (undo-tree-id799 . -87) (undo-tree-id800 . -128) (undo-tree-id801 . -22) (undo-tree-id802 . -90) (undo-tree-id803 . -90) (undo-tree-id804 . -90) (undo-tree-id805 . -77) (undo-tree-id806 . -87) (undo-tree-id807 . -87) (undo-tree-id808 . -87) (undo-tree-id809 . -87) (undo-tree-id810 . -87) (undo-tree-id811 . -128) (undo-tree-id812 . -87) 599 (t 26130 32669 234237 350000)) nil (26130 32691 439937 68000) 0 nil] [nil nil ((#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -547) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id628 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id633 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -548) (undo-tree-id635 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id640 . -1) (#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -549) (undo-tree-id642 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id647 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -550) (undo-tree-id649 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id654 . -1) (#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -551) (undo-tree-id656 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id661 . -1) (#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -552) (undo-tree-id663 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id668 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -553) (undo-tree-id670 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id675 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -554) (undo-tree-id677 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id682 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -555) (undo-tree-id684 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id689 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -556) (undo-tree-id691 . -1) (undo-tree-id693 . -1) (undo-tree-id695 . -1) 557 (t 26130 32250 803767 993000)) ((547 . 557)) (26130 32667 739803 287000) 0 nil])
nil
([nil nil ((404 . 457) (#("{/* <MatrixRainingLetters custom_class=\"absolute z-0\" /> */}
" 0 1 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 1 2 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 2 4 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 4 5 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 2 part-side jsx) 5 26 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "matrixrainingletters" jsx-depth 2 part-side jsx) 26 27 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 2 part-side jsx) 27 52 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 52 53 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 2 part-side jsx) 53 55 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "matrixrainingletters" jsx-depth 2 part-side jsx) 55 56 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 2 part-side jsx) 56 58 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 58 59 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 59 60 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 60 61 (jsx-depth 1 part-side jsx)) . 404) (undo-tree-id793 . -60) (undo-tree-id794 . -60) (undo-tree-id795 . -61) (undo-tree-id796 . -61) (undo-tree-id797 . -61) 465) nil (26130 32691 439931 628000) 0 nil])
([nil nil ((547 . 548)) ((#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 547) (t 26130 32665 74232 684000)) (26130 32664 64860 464000) 0 nil])
([nil nil ((399 . 498) 404) nil (26130 32691 439921 368000) 0 nil])
([nil nil ((470 . 558) (#("<div className=\" absolute z-0 m-auto flex w-screen items-center justify-center\">" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 4 5 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 6 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 14 15 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 15 16 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 16 17 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 17 18 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 18 19 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 19 20 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 20 21 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 21 22 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 22 23 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 23 24 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 24 25 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 25 78 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 78 79 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 79 80 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx)) . 470) (undo-tree-id715 . -80) (undo-tree-id716 . -41) (undo-tree-id717 . -41) (undo-tree-id719 . -22) (undo-tree-id721 . -77) (undo-tree-id723 . -77) (undo-tree-id725 . -78) (undo-tree-id727 . -78) (undo-tree-id729 . -78) (undo-tree-id731 . -78) 551 (t 26130 32341 207202 725000)) ((470 . 550) (#("{/* <div className=\" absolute z-0 m-auto flex w-screen items-center justify-center\"> */}" 0 1 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 1 2 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 2 4 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 4 5 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 17 tag-type start tag-name "div" jsx-depth 2 part-side jsx) 5 9 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" jsx-depth 2 part-side jsx) 9 10 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 2 part-side jsx) 10 82 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr t jsx-depth 2 part-side jsx) 82 83 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 2 part-side jsx) 83 84 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type start tag-name "div" jsx-depth 2 part-side jsx) 84 86 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 86 87 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 87 88 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx)) . 470) (t 26130 32662 417563 38000)) (26130 32661 409753 892000) 0 nil])
([nil nil ((#("{" 0 1 (jsx-depth 1 part-side jsx)) . 404) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (t 26130 32691 444262 264000)) nil (26130 32702 470860 257000) 0 nil])
([nil nil ((404 . 457) (#("{/* <MatrixRainingLetters custom_class=\"absolute z-0\" /> */}
" 0 1 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 1 2 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 2 4 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 4 5 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 2 part-side jsx) 5 26 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "matrixrainingletters" jsx-depth 2 part-side jsx) 26 27 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 2 part-side jsx) 27 52 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 52 53 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 2 part-side jsx) 53 55 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "matrixrainingletters" jsx-depth 2 part-side jsx) 55 56 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 2 part-side jsx) 56 58 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 58 59 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 59 60 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 60 61 (jsx-depth 1 part-side jsx)) . 404) (undo-tree-id712 . -60) (undo-tree-id713 . -60) 465) ((404 . 465) (#("<MatrixRainingLetters custom_class=\"absolute z-0\" />
" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 1 21 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 21 22 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 22 23 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 23 34 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 34 35 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 35 36 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 36 48 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 48 49 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 49 50 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 50 51 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 51 52 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 52 53 (jsx-depth 1 part-side jsx)) . 404) (undo-tree-id778 . -47) (undo-tree-id779 . 5) (undo-tree-id780 . -36) (undo-tree-id781 . 5) (undo-tree-id782 . -36) (undo-tree-id783 . -47) (undo-tree-id784 . -36) (undo-tree-id785 . -47) (undo-tree-id786 . -36) (undo-tree-id787 . -36) (undo-tree-id788 . -35) (undo-tree-id789 . -35) (undo-tree-id790 . -35) (undo-tree-id791 . -35) (undo-tree-id792 . -47)) (26130 32660 552374 311000) 0 nil])
([nil nil ((#("/" 0 1 (jsx-depth 1 part-side jsx)) . 404) (undo-tree-id826 . -1) (undo-tree-id827 . -1)) nil (26130 32702 470859 247000) 0 nil])
([nil nil ((84 . 152) (#("import { ReactMatrixAnimation } from 'react-matrix-animation';" 0 6 (face web-mode-keyword-face part-side jsx) 6 32 (part-side jsx) 32 36 (face web-mode-keyword-face part-side jsx) 36 37 (part-side jsx) 37 38 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 38 60 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 60 61 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 61 62 (part-side jsx rear-nonsticky t)) . 84) (undo-tree-id706 . -62) (undo-tree-id707 . -12) (undo-tree-id708 . -12) (undo-tree-id710 . -12) 147) ((84 . 146) (#("/* import { ReactMatrixAnimation } from 'react-matrix-animation'; */" 0 1 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 1 3 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 3 9 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 9 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 35 39 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 39 68 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx)) . 84)) (26130 32659 772481 643000) 0 nil])
([nil nil ((#("*" 0 1 (jsx-depth 1 part-side jsx)) . 404) (undo-tree-id824 . -1) (undo-tree-id825 . -1)) nil (26130 32702 470858 317000) 0 nil])
([nil nil ((28 . 78) (#("/* import { MatrixRainingLetters } from 'react-mdr'; */
" 0 1 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 1 3 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 3 9 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 9 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 35 39 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 39 55 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 55 56 (syntax-table (12) part-side jsx rear-nonsticky t)) . 28) (undo-tree-id696 . -55) (undo-tree-id697 . -55) (undo-tree-id698 . -55) (undo-tree-id699 . -55) (undo-tree-id700 . -56) (undo-tree-id702 . -56) (undo-tree-id704 . -56) 84) ((28 . 84) (#("import { MatrixRainingLetters } from 'react-mdr';
" 0 6 (face web-mode-keyword-face part-side jsx) 6 32 (part-side jsx) 32 36 (face web-mode-keyword-face part-side jsx) 36 37 (part-side jsx) 37 38 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 38 47 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 47 48 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 48 50 (part-side jsx)) . 28)) (26130 32659 424971 522000) 0 nil])
([nil nil ((#(" " 0 1 (jsx-depth 1 part-side jsx)) . 404) (undo-tree-id822 . -1) (undo-tree-id823 . -1)) nil (26130 32702 470857 267000) 0 nil])
([nil nil ((398 . 404) (t 26130 32597 630823 701000) 397) ((#("
	    " 0 6 (jsx-depth 1 part-side jsx)) . 398) (undo-tree-id776 . -5) (undo-tree-id777 . -5)) (26130 32659 124920 404000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 433) (undo-tree-id820 . -1) (undo-tree-id821 . -1)) nil (26130 32702 470856 367000) 0 nil])
([nil nil ((404 . 407)) ((#("div" 0 3 (jsx-depth 1 part-side jsx)) . 404) (undo-tree-id774 . -2) (undo-tree-id775 . -2)) (26130 32658 853794 592000) 0 nil])
([nil nil ((#("m-auto flex w-screen items-center justify-center " 0 49 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 433) (undo-tree-id813 . -48) (undo-tree-id814 . -48) (undo-tree-id815 . -48) (undo-tree-id816 . -48) (undo-tree-id817 . -48) (undo-tree-id818 . -49) (undo-tree-id819 . -49) 481) nil (26130 32702 470854 837000) 0 nil])
([nil nil ((404 . 415) (#("div" 0 3 (jsx-depth 1 part-side jsx)) . -404) (undo-tree-id735 . -3) (undo-tree-id737 . -3) 407) ((404 . 407) (#("<div></div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 1 3 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 7 10 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx)) . 404) (undo-tree-id772 . -5) (undo-tree-id773 . -5)) (26130 32658 616881 818000) 0 nil])
([nil nil ((433 . 434)) nil (26130 32702 470844 57000) 0 nil])
([nil nil ((#(">" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx)) . -408) (undo-tree-id732 . -1) (undo-tree-id734 . -1) 409) ((408 . 409)) (26130 32658 456905 554000) 0 nil])
([nil nil ((28 . 78) (#("/* import { MatrixRainingLetters } from 'react-mdr'; */
" 0 1 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 1 3 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 3 9 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 9 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 35 39 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 39 55 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 55 56 (syntax-table (12) part-side jsx rear-nonsticky t)) . 28) (undo-tree-id830 . -55) (undo-tree-id831 . -41) (undo-tree-id832 . -41) (undo-tree-id833 . -55) (undo-tree-id834 . -55) (undo-tree-id835 . -55) (undo-tree-id836 . -56) (undo-tree-id837 . -41) (undo-tree-id838 . -41) (undo-tree-id839 . -41) (undo-tree-id840 . -56) 84 (t 26130 32702 477607 978000)) nil (26130 32706 678328 521000) 0 nil])
([nil nil ((408 . 422)) ((#(" className=\"\" " 0 1 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 12 13 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 13 14 (tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx)) . 408) (undo-tree-id770 . -12) (undo-tree-id771 . -12)) (26130 32658 292920 493000) 0 nil])
([nil nil ((496 . 502) (t 26130 32706 684279 363000) 439) nil (26130 32713 11883 923000) 0 nil])
([nil nil ((420 . 431) (t 26130 32616 40844 353000)) ((#(" absolute -" 0 10 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 420) (undo-tree-id768 . -11) (undo-tree-id769 . -11)) (26130 32658 132776 989000) 0 nil])
([nil nil ((502 . 508)) nil (26130 32713 11881 203000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -430) (undo-tree-id743 . -1) 431) ((430 . 431)) (26130 32657 964728 760000) 0 nil])
([nil nil ((440 . 441) (#("    " 0 3 (jsx-depth 1 part-side jsx) 3 4 (jsx-depth 1 part-side jsx rear-nonsticky t)) . 440) (undo-tree-id841 . -4) (undo-tree-id842 . -4) 507 (t 26130 32713 17619 799000)) nil (26130 32738 556971 670000) 0 nil])
([nil nil ((430 . 433)) ((#("z-+" 0 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 430) (undo-tree-id766 . -3) (undo-tree-id767 . -3)) (26130 32657 800732 389000) 0 nil])
([nil nil ((#("h-screen" 0 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 428) (undo-tree-id879 . -7) (undo-tree-id880 . -7) (undo-tree-id881 . -7) (undo-tree-id882 . -7) (undo-tree-id883 . -7) (undo-tree-id884 . -8) (undo-tree-id885 . -8) 435 (t 26130 32739 567649 582000)) nil (26130 32800 515553 611000) 0 nil] [nil nil ((#("	    </div>
" 0 5 (jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 7 10 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 11 12 (jsx-depth 1 part-side jsx)) . 494) (undo-tree-id843 . 1) (undo-tree-id844 . -11) (undo-tree-id845 . -10) (undo-tree-id846 . -10) (undo-tree-id847 . -10) (undo-tree-id848 . -10) (undo-tree-id849 . -10) (undo-tree-id850 . -10) (undo-tree-id851 . -12) 504 (t 26130 32728 554303 894000)) ((494 . 506)) (26130 32738 123359 529000) 0 nil])
([nil nil ((#("+" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -432) (undo-tree-id741 . -1) 433) ((432 . 433)) (26130 32657 648760 20000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -427) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) 428) nil (26130 32800 515287 391000) 0 nil])
([nil nil ((nil rear-nonsticky nil 754 . 755) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -761) (749 . 762) 748) ((#("
	    </div>
" 0 1 (jsx-depth 1 part-side jsx) 1 5 (jsx-depth 1 part-side jsx) 5 6 (jsx-depth 1 part-side jsx rear-nonsticky nil) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 8 11 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 12 13 (jsx-depth 1 part-side jsx)) . 749) (undo-tree-id852 . -12) (undo-tree-id853 . -1) (undo-tree-id854 . -12) (undo-tree-id855 . -6) (undo-tree-id856 . -6) (undo-tree-id857 . -6) (undo-tree-id858 . -6) (undo-tree-id859 . -6) (undo-tree-id860 . -6) (761 . 762) (nil rear-nonsticky t 754 . 755) (t 26130 32732 820975 347000)) (26130 32732 816644 471000) 0 nil])
([nil nil ((432 . 433)) ((#("°" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 432) (undo-tree-id764 . -1) (undo-tree-id765 . -1)) (26130 32657 476806 454000) 0 nil])
([nil nil ((427 . 428)) nil (26130 32800 515277 821000) 0 nil])
nil
([nil nil ((#("°" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -432) (undo-tree-id739 . -1) 433) ((432 . 433)) (26130 32657 300751 669000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -427) (undo-tree-id861 . -1) (undo-tree-id862 . -1) 428) nil (26130 32800 515274 41000) 0 nil])
([nil nil ((432 . 433)) ((#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 432) (undo-tree-id762 . -1) (undo-tree-id763 . -1)) (26130 32657 89747 355000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -414) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) 415 (t 26130 32800 521086 552000)) nil (26130 32850 292955 249000) 0 nil])
([nil nil ((#("\"" 0 1 (tag-type start tag-name "div" jsx-depth 1 part-side jsx)) . 434) (433 . 434) (t 26130 32621 547517 197000)) ((#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx)) . 433) (434 . 435)) (26130 32656 844739 125000) 0 nil])
([nil nil ((426 . 433) (t 26130 32850 294511 31000)) nil (26130 32974 363402 726000) 0 nil])
([nil nil ((#(" " 0 1 (tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx)) . -434) (undo-tree-id746 . -1) (undo-tree-id748 . -1) 435 (t 26130 32624 184186 821000)) ((434 . 435)) (26130 32656 692720 707000) 0 nil])
([nil nil ((496 . 497) (#("    " 0 4 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx)) . 496) (398 . 510) (#("<div className=\"absolute z-0 h-full\">
		<MatrixRainingLetters custom_class=\"absolute z-0\" />
	    </div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 4 5 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 6 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 14 15 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 15 35 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 35 36 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 36 37 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 37 38 (jsx-depth 1 part-side jsx) 38 40 (jsx-depth 1 part-side jsx) 40 41 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 41 61 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 61 62 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 62 63 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 63 74 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 74 75 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 75 88 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 88 89 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 89 90 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 90 91 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 91 92 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 92 93 (jsx-depth 1 part-side jsx) 93 98 (jsx-depth 1 part-side jsx) 98 99 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 99 100 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 100 103 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 103 104 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx)) . 398) (undo-tree-id917 . 12) (undo-tree-id918 . -103) (undo-tree-id919 . -5) (undo-tree-id920 . -39) (undo-tree-id921 . -61) (undo-tree-id922 . -61) (undo-tree-id923 . -61) (undo-tree-id924 . -61) (undo-tree-id925 . -61) (undo-tree-id926 . -61) (undo-tree-id927 . -103) (undo-tree-id928 . -5) (undo-tree-id929 . -103) 393 (t 26130 32975 371406 736000)) nil (26130 33469 498028 656000) 0 nil] [nil nil ((nil rear-nonsticky nil 763 . 764) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -868) (758 . 869) 757 (t 26130 32961 351381 63000)) ((#("
	    <div className=\"absolute z-0 h-full\">
		<MatrixRainingLetters custom_class=\"absolute z-0\" />
	    </div>
" 0 1 (jsx-depth 1 part-side jsx) 1 5 (jsx-depth 1 part-side jsx) 5 6 (jsx-depth 1 part-side jsx rear-nonsticky nil) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 10 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 10 11 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 12 20 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 20 21 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 21 41 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 41 42 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 42 43 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 43 46 (jsx-depth 1 part-side jsx) 46 47 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 47 67 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 67 68 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 68 69 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 69 80 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 80 81 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 81 94 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 94 95 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 95 96 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 96 97 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 97 98 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 98 104 (jsx-depth 1 part-side jsx) 104 105 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 105 106 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 106 109 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 109 110 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 110 111 (jsx-depth 1 part-side jsx)) . 758) (undo-tree-id908 . -110) (undo-tree-id909 . -1) (undo-tree-id910 . -110) (undo-tree-id911 . -6) (undo-tree-id912 . -6) (undo-tree-id913 . -6) (undo-tree-id914 . -6) (undo-tree-id915 . -6) (undo-tree-id916 . -6) (868 . 869) (nil rear-nonsticky t 763 . 764) (t 26130 32965 681388 992000)) (26130 32965 676045 239000) 0 nil] [nil nil ((nil rear-nonsticky nil 507 . 508) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -612) (502 . 613) 501 (t 26130 32954 671368 830000)) ((#("
	    <div className=\"absolute z-0 h-full\">
		<MatrixRainingLetters custom_class=\"absolute z-0\" />
	    </div>
" 0 1 (jsx-depth 1 part-side jsx) 1 5 (jsx-depth 1 part-side jsx) 5 6 (jsx-depth 1 part-side jsx rear-nonsticky nil) 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 7 10 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 10 11 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 12 20 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 20 21 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 21 41 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 41 42 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 42 43 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 43 46 (jsx-depth 1 part-side jsx) 46 47 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 47 67 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 67 68 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 68 69 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 69 80 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 80 81 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 81 94 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 94 95 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 95 96 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 96 97 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 97 98 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 98 104 (jsx-depth 1 part-side jsx) 104 105 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 105 106 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 106 109 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 109 110 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 110 111 (jsx-depth 1 part-side jsx)) . 502) (undo-tree-id901 . -110) (undo-tree-id902 . -1) (undo-tree-id903 . -110) (undo-tree-id904 . -6) (undo-tree-id905 . -6) (undo-tree-id906 . -6) (undo-tree-id907 . -6) (612 . 613) (nil rear-nonsticky t 507 . 508) (t 26130 32957 94706 602000)) (26130 32957 82926 554000) 0 nil] [nil nil ((nil rear-nonsticky nil 492 . 493) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -545) (490 . 546) 489 (t 26130 32856 551189 153000)) ((#("
		<MatrixRainingLetters custom_class=\"absolute z-0\" />
" 0 1 (jsx-depth 1 part-side jsx) 1 2 (jsx-depth 1 part-side jsx) 2 3 (jsx-depth 1 part-side jsx rear-nonsticky nil) 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 4 24 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 24 25 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 25 26 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 26 37 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 37 38 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 38 51 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 51 52 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 52 53 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 53 54 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 54 55 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 55 56 (jsx-depth 1 part-side jsx)) . 490) (undo-tree-id894 . -55) (undo-tree-id895 . -1) (undo-tree-id896 . -55) (undo-tree-id897 . -3) (undo-tree-id898 . -3) (undo-tree-id899 . -3) (undo-tree-id900 . -3) (545 . 546) (nil rear-nonsticky t 492 . 493) (t 26130 32951 488029 669000)) (26130 32951 480611 362000) 0 nil])
([nil nil ((434 . 435)) ((#(">" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx)) . 434)) (26130 32656 533497 955000) 0 nil])
([nil nil ((#("	" 0 1 (jsx-depth 1 part-side jsx)) . -496) (496 . 497) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 496) (492 . 496) (398 . 500) (#("{/* <div className=\"absolute z-0 h-full\">
		<MatrixRainingLetters custom_class=\"absolute z-0\" />
		</div> */}
" 0 1 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 1 2 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 2 4 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 4 5 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 17 tag-type start tag-name "div" jsx-depth 2 part-side jsx) 5 9 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" jsx-depth 2 part-side jsx) 9 10 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 2 part-side jsx) 10 39 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr t jsx-depth 2 part-side jsx) 39 40 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 2 part-side jsx) 40 41 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type start tag-name "div" jsx-depth 2 part-side jsx) 41 44 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 44 45 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 2 part-side jsx) 45 66 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "matrixrainingletters" jsx-depth 2 part-side jsx) 66 67 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 2 part-side jsx) 67 92 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 92 93 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 2 part-side jsx) 93 95 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "matrixrainingletters" jsx-depth 2 part-side jsx) 95 96 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 2 part-side jsx) 96 99 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 99 100 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 20 tag-type end tag-name "div" jsx-depth 2 part-side jsx) 100 104 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type end tag-name "div" jsx-depth 2 part-side jsx) 104 105 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type end tag-name "div" jsx-depth 2 part-side jsx) 105 107 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 107 108 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 108 109 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 109 110 (jsx-depth 1 part-side jsx)) . 398) (undo-tree-id949 . -110) (undo-tree-id950 . 1) (undo-tree-id951 . -97) (undo-tree-id952 . -110) (undo-tree-id953 . -110) (undo-tree-id954 . -110) (undo-tree-id955 . -97) (undo-tree-id956 . -97) 393 (t 26130 33181 661784 485000)) nil (26130 33473 741483 368000) 0 nil] [nil nil ((#("	" 0 1 (jsx-depth 1 part-side jsx)) . -635) (635 . 636) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 635) (631 . 635) (513 . 639) (#("{/* <div className=\" absolute z-0 m-auto flex w-screen items-center justify-center h-screen\">
		<ReactMatrixAnimation />
		</div> */}
" 0 1 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 1 2 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 2 4 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 4 5 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 17 tag-type start tag-name "div" jsx-depth 2 part-side jsx) 5 8 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" jsx-depth 2 part-side jsx) 8 9 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" jsx-depth 2 part-side jsx) 9 10 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 2 part-side jsx) 10 18 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr t jsx-depth 2 part-side jsx) 18 19 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr t jsx-depth 2 part-side jsx) 19 91 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr t jsx-depth 2 part-side jsx) 91 92 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 2 part-side jsx) 92 93 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type start tag-name "div" jsx-depth 2 part-side jsx) 93 96 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 96 97 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 24 tag-type void tag-name "reactmatrixanimation" jsx-depth 2 part-side jsx) 97 117 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "reactmatrixanimation" jsx-depth 2 part-side jsx) 117 118 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "reactmatrixanimation" jsx-depth 2 part-side jsx) 118 119 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "reactmatrixanimation" jsx-depth 2 part-side jsx) 119 120 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type void tag-name "reactmatrixanimation" jsx-depth 2 part-side jsx) 120 123 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 123 124 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 20 tag-type end tag-name "div" jsx-depth 2 part-side jsx) 124 125 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type end tag-name "div" jsx-depth 2 part-side jsx) 125 128 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type end tag-name "div" jsx-depth 2 part-side jsx) 128 129 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type end tag-name "div" jsx-depth 2 part-side jsx) 129 131 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 131 132 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 132 133 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 133 134 (jsx-depth 1 part-side jsx syntax-multiline t js-jsx-text (544 571 #<buffer App.js>) fontified t)) . 513) (undo-tree-id930 . -134) (undo-tree-id931 . -132) (undo-tree-id932 . -13) (undo-tree-id933 . -133) (undo-tree-id934 . -133) (undo-tree-id935 . -133) (undo-tree-id936 . -133) (undo-tree-id937 . -132) (undo-tree-id938 . -132) (undo-tree-id939 . -132) (undo-tree-id940 . -13) (undo-tree-id941 . -132) (undo-tree-id942 . -13) (undo-tree-id943 . -13) (undo-tree-id944 . -13) (undo-tree-id945 . -13) (undo-tree-id946 . -13) (undo-tree-id947 . -13) 508 (t 26130 33181 661784 485000)) ((513 . 647) (#("<div className=\" absolute z-0 m-auto flex w-screen items-center justify-center h-screen\">
		<ReactMatrixAnimation />
		</div>
" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 4 5 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 6 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 14 15 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 15 87 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 87 88 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 88 89 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 89 92 (jsx-depth 1 part-side jsx) 92 93 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "reactmatrixanimation" jsx-depth 1 part-side jsx) 93 113 (font-lock-face web-mode-html-tag-face tag-type void tag-name "reactmatrixanimation" jsx-depth 1 part-side jsx) 113 114 (tag-type void tag-name "reactmatrixanimation" jsx-depth 1 part-side jsx) 114 115 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "reactmatrixanimation" jsx-depth 1 part-side jsx) 115 116 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "reactmatrixanimation" jsx-depth 1 part-side jsx) 116 118 (jsx-depth 1 part-side jsx) 118 119 (jsx-depth 1 part-side jsx) 119 120 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 120 121 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 121 124 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 124 125 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 125 126 (jsx-depth 1 part-side jsx)) . 513) (undo-tree-id948 . 36) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 631) (635 . 636) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 635) (635 . 636)) (26130 33469 493132 133000) 0 nil])
nil
nil
nil
([nil nil ((596 . 628) (#("<ReactMatrixAnimation />" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "reactmatrixanimation" jsx-depth 1 part-side jsx) 1 21 (font-lock-face web-mode-html-tag-face tag-type void tag-name "reactmatrixanimation" jsx-depth 1 part-side jsx) 21 22 (tag-type void tag-name "reactmatrixanimation" jsx-depth 1 part-side jsx) 22 23 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "reactmatrixanimation" jsx-depth 1 part-side jsx) 23 24 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "reactmatrixanimation" jsx-depth 1 part-side jsx)) . 596) (undo-tree-id749 . -24) (undo-tree-id750 . -23) (undo-tree-id751 . -23) (undo-tree-id753 . -23) 621 (t 26130 32625 587521 728000)) ((596 . 620) (#("{/* <ReactMatrixAnimation /> */}" 0 1 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 1 2 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 2 4 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 4 5 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 24 tag-type void tag-name "reactmatrixanimation" jsx-depth 2 part-side jsx) 5 27 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "reactmatrixanimation" jsx-depth 2 part-side jsx) 27 28 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type void tag-name "reactmatrixanimation" jsx-depth 2 part-side jsx) 28 30 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 30 31 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 31 32 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx)) . 596)) (26130 32656 384837 754000) 0 nil])
([nil nil ((496 . 497) (#("    " 0 4 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx)) . 496) (398 . 510) (#("<div className=\"absolute z-0 h-full\">
		<MatrixRainingLetters custom_class=\"absolute z-0\" />
	    </div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 4 5 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 6 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 14 15 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 15 35 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 35 36 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 36 37 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 37 40 (jsx-depth 1 part-side jsx) 40 41 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 41 61 (font-lock-face web-mode-html-tag-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 61 62 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 62 63 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 63 74 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 74 75 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 75 88 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx) 88 89 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 1 part-side jsx) 89 90 (tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 90 91 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 91 92 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 1 part-side jsx) 92 98 (jsx-depth 1 part-side jsx) 98 99 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 99 100 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 100 103 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 103 104 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx)) . 398) (undo-tree-id957 . -104) (undo-tree-id958 . -32) (undo-tree-id959 . -104) (undo-tree-id960 . -29) (undo-tree-id961 . -34) (undo-tree-id962 . -104) (undo-tree-id963 . -32) (undo-tree-id964 . -104) (undo-tree-id965 . -32) 503 (t 26130 33473 742319 586000)) nil (26130 47579 917339 367000) 0 nil])
nil
([nil nil ((#("absolute z-0" 0 12 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 1 part-side jsx)) . 483) (undo-tree-id755 . -11) (undo-tree-id756 . -11) (undo-tree-id757 . -11) (undo-tree-id758 . -11) (undo-tree-id759 . -11) (undo-tree-id760 . -12) (undo-tree-id761 . -12) 494 (t 26130 32633 14196 725000)) ((483 . 495) (t 26130 32654 464220 781000)) (26130 32654 458293 158000) 0 nil])
([nil nil ((#("relative z-10" 0 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 9 13 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . 668) (t 26130 47580 990097 994000)) ((668 . 681) (t 26130 47413 726695 599000)) (26130 47592 7521 719000) 0 nil] [nil nil ((343 . 347) (t 26130 33875 976289 587000)) ((#(" h-s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 343) (undo-tree-id1100 . -3) (undo-tree-id1101 . -3) (undo-tree-id1102 . -3) (undo-tree-id1103 . -3) (undo-tree-id1104 . -3) (undo-tree-id1105 . -3) (undo-tree-id1106 . -3) (undo-tree-id1107 . -3) (undo-tree-id1108 . -3) (undo-tree-id1109 . -3) (undo-tree-id1110 . -3) (undo-tree-id1111 . -3) (undo-tree-id1112 . -3) (undo-tree-id1113 . -4) (undo-tree-id1114 . -3) (undo-tree-id1115 . -4)) (26130 37687 908492 504000) 0 nil])
nil
([nil nil ((#("import { ReactMatrixAnimation } from 'react-matrix-animation';
" 0 6 (face web-mode-keyword-face part-side jsx) 6 32 (part-side jsx) 32 36 (face web-mode-keyword-face part-side jsx) 36 37 (part-side jsx) 37 38 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 38 60 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 60 61 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 61 62 (part-side jsx rear-nonsticky t) 62 63 (part-side jsx fontified t)) . 78) (undo-tree-id1127 . -36) (undo-tree-id1128 . -62) (undo-tree-id1129 . -36) (undo-tree-id1130 . -36) (undo-tree-id1131 . -36) (undo-tree-id1132 . -36) (undo-tree-id1133 . -36) (undo-tree-id1134 . -36) (undo-tree-id1135 . -36) (undo-tree-id1136 . -36) (undo-tree-id1137 . -63) 114 (t 26130 47593 33436 300000)) nil (26130 47669 351513 176000) 0 nil] [nil nil ((nil rear-nonsticky nil 1618 . 1619) (nil tag-name "button" 1571 . 1572) (nil tag-name "button" 1565 . 1571) (nil tag-name "button" 1564 . 1565) (nil tag-name "button" 1563 . 1564) (nil tag-name "button" 1541 . 1542) (nil tag-name "button" 1536 . 1541) (nil tag-name "button" 1535 . 1536) (nil tag-name "button" 1484 . 1535) (nil tag-name "button" 1479 . 1484) (nil tag-name "button" 1466 . 1479) (nil tag-name "button" 1465 . 1466) (nil tag-name "button" 1457 . 1465) (nil tag-name "button" 1456 . 1457) (nil tag-name "button" 1449 . 1456) (nil tag-name "button" 1448 . 1449) (nil tag-name "button" 1433 . 1448) (nil tag-name "button" 1432 . 1433) (nil tag-name "button" 1431 . 1432) (nil tag-name "button" 1425 . 1431) (nil tag-name "button" 1424 . 1425) (nil tag-name "button" 1416 . 1424) (nil tag-name "button" 1410 . 1416) (nil tag-name "button" 1409 . 1410) (789 . 1619)) ((#("const CopyToClipboardButton = ({ text }) => {
  const copyToClipboard = () => {
    // Create a textarea element to hold the text to be copied
    const textarea = document.createElement('textarea');
    textarea.value = text;
    document.body.appendChild(textarea);
    
    // Select the text inside the textarea
    textarea.select();
    
    // Copy the selected text to the clipboard
    document.execCommand('copy');
    
    // Remove the textarea element
    document.body.removeChild(textarea);
    
    // Optionally, provide feedback to the user
    alert('Text copied to clipboard!');
  };

  return (
    <button 
      onClick={copyToClipboard}
      className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"
    >
      Copy Text
    </button>
  );
};

export default CopyToClipboardButton;" 0 5 (face web-mode-keyword-face part-side jsx) 5 6 (part-side jsx) 6 27 (face web-mode-function-name-face part-side jsx) 27 33 (part-side jsx) 33 37 (face web-mode-variable-name-face part-side jsx) 37 46 (part-side jsx) 46 48 (part-side jsx) 48 53 (face web-mode-keyword-face part-side jsx) 53 54 (part-side jsx) 54 69 (face web-mode-function-name-face part-side jsx) 69 80 (part-side jsx) 80 84 (part-side jsx) 84 85 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 85 142 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 142 143 (syntax-table (12) part-side jsx) 143 147 (part-side jsx) 147 152 (face web-mode-keyword-face part-side jsx) 152 153 (part-side jsx) 153 161 (face web-mode-variable-name-face part-side jsx) 161 173 (part-side jsx) 173 186 (face web-mode-function-call-face part-side jsx) 186 187 (part-side jsx) 187 188 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 188 196 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 196 197 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 197 200 (part-side jsx) 200 245 (part-side jsx) 245 256 (face web-mode-function-call-face part-side jsx) 256 268 (part-side jsx) 268 277 (part-side jsx) 277 278 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 278 315 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 315 316 (syntax-table (12) part-side jsx) 316 329 (part-side jsx) 329 335 (face web-mode-function-call-face part-side jsx) 335 339 (part-side jsx) 339 348 (part-side jsx) 348 349 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 349 390 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 390 391 (syntax-table (12) part-side jsx) 391 404 (part-side jsx) 404 415 (face web-mode-function-call-face part-side jsx) 415 416 (part-side jsx) 416 417 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 417 421 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 421 422 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 422 425 (part-side jsx) 425 434 (part-side jsx) 434 435 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 435 464 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 464 465 (syntax-table (12) part-side jsx) 465 483 (part-side jsx) 483 494 (face web-mode-function-call-face part-side jsx) 494 506 (part-side jsx) 506 515 (part-side jsx) 515 516 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side jsx) 516 558 (font-lock-face web-mode-javascript-comment-face part-token comment part-side jsx) 558 559 (syntax-table (12) part-side jsx) 559 563 (part-side jsx) 563 568 (face web-mode-function-call-face part-side jsx) 568 569 (part-side jsx) 569 570 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 570 595 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 595 596 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 596 599 (part-side jsx) 599 607 (part-side jsx) 607 613 (face web-mode-keyword-face part-side jsx) 613 616 (part-side jsx) 616 620 (part-side jsx) 620 621 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button" jsx-depth 1 jsx-beg 1 part-side jsx) 621 627 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button" jsx-depth 1 part-side jsx) 627 635 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 635 636 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 8 jsx-depth 1 part-side jsx) 636 642 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 642 643 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 643 644 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 644 659 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 659 660 (font-lock-face web-mode-block-delimiter-face jsx-end 2 tag-type start tag-name "button" tag-attr-end 7 tag-attr t jsx-depth 2 part-side jsx) 660 667 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 667 668 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 668 676 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 676 677 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 677 690 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 690 695 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 695 746 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 746 747 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 747 752 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 752 753 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button" jsx-depth 1 part-side jsx) 753 774 (jsx-depth 1 part-side jsx) 774 775 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button" jsx-depth 1 part-side jsx) 775 776 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 776 782 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 782 783 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button" jsx-depth 1 jsx-end 1 part-side jsx) 783 789 (part-side jsx) 789 792 (part-side jsx) 792 793 (part-side jsx) 793 799 (face web-mode-keyword-face part-side jsx) 799 800 (part-side jsx) 800 807 (face web-mode-keyword-face part-side jsx) 807 829 (part-side jsx) 829 830 (part-side jsx rear-nonsticky nil)) . 789) (undo-tree-id1125 . 830) (undo-tree-id1126 . -829) (nil tag-name "button" 1409 . 1410) (nil tag-name "button" 1410 . 1416) (nil tag-name "button" 1416 . 1424) (nil tag-name "button" 1424 . 1425) (nil tag-name "button" 1425 . 1431) (nil tag-name "button" 1431 . 1432) (nil tag-name "button" 1432 . 1433) (nil tag-name "button" 1433 . 1448) (nil tag-name "button" 1448 . 1449) (nil tag-name "button" 1449 . 1456) (nil tag-name "button" 1456 . 1457) (nil tag-name "button" 1457 . 1465) (nil tag-name "button" 1465 . 1466) (nil tag-name "button" 1466 . 1479) (nil tag-name "button" 1479 . 1484) (nil tag-name "button" 1484 . 1535) (nil tag-name "button" 1535 . 1536) (nil tag-name "button" 1536 . 1541) (nil tag-name "button" 1541 . 1542) (nil tag-name "button" 1563 . 1564) (nil tag-name "button" 1564 . 1565) (nil tag-name "button" 1565 . 1571) (nil tag-name "button" 1571 . 1572) (nil rear-nonsticky t 1618 . 1619)) (26130 47591 363008 753000) 0 nil])
([nil nil ((347 . 362)) ((#("creen overflow-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 5 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 6 14 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 14 15 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 347) (undo-tree-id1096 . 10) (undo-tree-id1097 . 15) (undo-tree-id1098 . -15) (undo-tree-id1099 . -15)) (26130 37687 728413 752000) 0 nil])
([nil nil ((#("import { MatrixRainingLetters } from 'react-mdr';
" 0 6 (face web-mode-keyword-face part-side jsx) 6 32 (part-side jsx) 32 36 (face web-mode-keyword-face part-side jsx) 36 37 (part-side jsx) 37 38 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 38 47 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 47 48 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 48 50 (part-side jsx)) . 28) (undo-tree-id1138 . -49) (undo-tree-id1139 . -49) (undo-tree-id1140 . -44) (undo-tree-id1141 . -50) (undo-tree-id1142 . -50) (undo-tree-id1143 . -50) (undo-tree-id1144 . -50) (undo-tree-id1145 . -50) (undo-tree-id1146 . -50) (undo-tree-id1147 . -49) (undo-tree-id1148 . -49) (undo-tree-id1149 . -48) (undo-tree-id1150 . -48) (undo-tree-id1151 . -48) (undo-tree-id1152 . -48) (undo-tree-id1153 . -48) (undo-tree-id1154 . -48) (undo-tree-id1155 . -50) 76 (t 26130 47669 360134 482000)) nil (26130 47678 361746 955000) 0 nil])
([nil nil ((1619 . 1620) 789) ((#("
" 0 1 (part-side jsx)) . 1619)) (26130 47590 985439 741000) 0 nil] [nil nil ((789 . 790) 825) ((#("
" 0 1 (part-side jsx)) . 789) (undo-tree-id1119 . 1)) (26130 47411 478370 936000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . -361) (undo-tree-id970 . -1) 362) ((361 . 362)) (26130 37687 432584 192000) 0 nil])
([nil nil ((#("	    {/* Layout component and its children */}
	    {/* <div className=\"absolute z-0 h-full\">
		<MatrixRainingLetters custom_class=\"absolute z-0\" />
		</div> */}
	    {/* <div className=\" absolute z-0 m-auto flex w-screen items-center justify-center h-screen\">
		<ReactMatrixAnimation />
		</div> */}
" 0 5 (jsx-depth 1 part-side jsx js-jsx-text (494 503 #<buffer App.js>) syntax-multiline t js-jsx-tag-end 434 fontified t) 5 6 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx syntax-multiline t js-jsx-expr 544 fontified t) 6 7 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx syntax-multiline t fontified t) 7 9 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx syntax-multiline t fontified t) 9 42 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx syntax-multiline t fontified t) 42 44 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx syntax-multiline t fontified t) 44 45 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx syntax-multiline t fontified t) 45 46 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx syntax-multiline t fontified t) 46 47 (jsx-depth 1 part-side jsx) 47 52 (jsx-depth 1 part-side jsx) 52 53 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 53 54 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 54 56 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 56 57 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 17 tag-type start tag-name "div" jsx-depth 2 part-side jsx) 57 61 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" jsx-depth 2 part-side jsx) 61 62 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 2 part-side jsx) 62 91 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr t jsx-depth 2 part-side jsx) 91 92 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 2 part-side jsx) 92 93 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type start tag-name "div" jsx-depth 2 part-side jsx) 93 96 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 96 97 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 25 tag-type void tag-name "matrixrainingletters" jsx-depth 2 part-side jsx) 97 118 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "matrixrainingletters" jsx-depth 2 part-side jsx) 118 119 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "matrixrainingletters" tag-attr t tag-attr-beg 0 jsx-depth 2 part-side jsx) 119 144 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "matrixrainingletters" tag-attr t jsx-depth 2 part-side jsx) 144 145 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "matrixrainingletters" tag-attr-end 12 tag-attr t jsx-depth 2 part-side jsx) 145 147 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "matrixrainingletters" jsx-depth 2 part-side jsx) 147 148 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type void tag-name "matrixrainingletters" jsx-depth 2 part-side jsx) 148 151 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 151 152 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 20 tag-type end tag-name "div" jsx-depth 2 part-side jsx) 152 156 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type end tag-name "div" jsx-depth 2 part-side jsx) 156 157 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type end tag-name "div" jsx-depth 2 part-side jsx) 157 159 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 159 160 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 160 161 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 161 162 (jsx-depth 1 part-side jsx) 162 167 (jsx-depth 1 part-side jsx) 167 168 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 168 169 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 169 171 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 171 172 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 17 tag-type start tag-name "div" jsx-depth 2 part-side jsx) 172 175 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" jsx-depth 2 part-side jsx) 175 176 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" jsx-depth 2 part-side jsx) 176 177 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 2 part-side jsx) 177 185 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr t jsx-depth 2 part-side jsx) 185 186 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr t jsx-depth 2 part-side jsx) 186 258 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr t jsx-depth 2 part-side jsx) 258 259 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 2 part-side jsx) 259 260 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type start tag-name "div" jsx-depth 2 part-side jsx) 260 263 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 263 264 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 24 tag-type void tag-name "reactmatrixanimation" jsx-depth 2 part-side jsx) 264 284 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "reactmatrixanimation" jsx-depth 2 part-side jsx) 284 285 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "reactmatrixanimation" jsx-depth 2 part-side jsx) 285 286 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "reactmatrixanimation" jsx-depth 2 part-side jsx) 286 287 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type void tag-name "reactmatrixanimation" jsx-depth 2 part-side jsx) 287 290 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 290 291 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 20 tag-type end tag-name "div" jsx-depth 2 part-side jsx) 291 292 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type end tag-name "div" jsx-depth 2 part-side jsx) 292 295 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type end tag-name "div" jsx-depth 2 part-side jsx) 295 296 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type end tag-name "div" jsx-depth 2 part-side jsx) 296 298 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 298 299 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 299 300 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 300 301 (jsx-depth 1 part-side jsx syntax-multiline t js-jsx-text (544 571 #<buffer App.js>) fontified t)) . 233) (undo-tree-id1156 . -300) (undo-tree-id1157 . -300) (undo-tree-id1158 . -52) (undo-tree-id1159 . -40) (undo-tree-id1160 . -40) (undo-tree-id1161 . -40) (undo-tree-id1162 . -40) (undo-tree-id1163 . -40) (undo-tree-id1164 . -40) (undo-tree-id1165 . -161) (undo-tree-id1166 . -300) (undo-tree-id1167 . -161) (undo-tree-id1168 . -300) (undo-tree-id1169 . -301) 533 (t 26130 47678 370138 202000)) nil (26130 47682 258311 179000) 0 nil])
([nil nil ((789 . 790) (t 26130 47583 60098 850000)) ((#("
" 0 1 (part-side jsx)) . 789) (undo-tree-id1124 . 1) (t 26130 47589 363434 785000)) (26130 47589 356248 84000) 0 nil])
([nil nil ((1620 . 1621) 789) ((#("
" 0 1 (part-side jsx)) . 1620) (t 26130 47351 780003 356000)) (26130 47351 771206 228000) 0 nil])
([nil nil ((361 . 363)) ((#("(-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 361) (undo-tree-id1094 . -2) (undo-tree-id1095 . -2)) (26130 37686 950071 285000) 0 nil])
([nil nil ((#("className=\"\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 8 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 11 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx)) . 243) (undo-tree-id1183 . -11) (undo-tree-id1184 . -11) (undo-tree-id1185 . -11) (undo-tree-id1186 . -9) (undo-tree-id1187 . -9) (undo-tree-id1188 . -11) (undo-tree-id1189 . -11) (undo-tree-id1190 . -11) (undo-tree-id1191 . -11) (undo-tree-id1192 . -12) (undo-tree-id1193 . -12) 254 (t 26130 47682 266806 478000)) nil (26130 47687 341855 397000) 0 nil])
nil
nil
([nil nil ((#("(" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . -361) (undo-tree-id966 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . -362) (undo-tree-id968 . -1) 363) ((361 . 363)) (26130 37686 748508 456000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "div" jsx-depth 1 part-side jsx)) . 242) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1)) nil (26130 47687 341847 637000) 0 nil])
([nil nil ((361 . 366)) ((#("-auto" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 361)) (26130 37686 448404 177000) 0 nil])
([nil nil ((nil rear-nonsticky nil 226 . 227) (nil part-side jsx 215 . 227) (nil part-token string 215 . 227) (nil font-lock-face web-mode-javascript-string-face 215 . 227) (nil part-side jsx 214 . 215) (nil part-token string 214 . 215) (nil syntax-table (15) 214 . 215) (nil font-lock-face web-mode-javascript-string-face 214 . 215) (nil part-side jsx 213 . 214) (nil part-side jsx 209 . 213) (nil face web-mode-keyword-face 209 . 213) (nil part-side jsx 185 . 209) (nil part-side jsx 179 . 185) (nil face web-mode-keyword-face 179 . 185) (179 . 227) (t 26130 47687 346808 575000)) nil (26130 47698 914298 11000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 346) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (t 26130 37357 583956 826000)) ((346 . 347)) (26130 37686 128377 824000) 0 nil] [nil nil ((#("	" 0 1 (jsx-depth 1 part-side jsx)) . -658) (658 . 659) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 658) (654 . 658) (536 . 662) (#("{/* <div className=\" absolute z-0 m-auto flex w-screen items-center justify-center h-screen\">
		<ReactMatrixAnimation />
		</div> */}
" 0 1 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 1 2 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 2 4 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 4 5 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 17 tag-type start tag-name "div" jsx-depth 2 part-side jsx) 5 8 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" jsx-depth 2 part-side jsx) 8 9 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" jsx-depth 2 part-side jsx) 9 10 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 2 part-side jsx) 10 18 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr t jsx-depth 2 part-side jsx) 18 19 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr t jsx-depth 2 part-side jsx) 19 91 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr t jsx-depth 2 part-side jsx) 91 92 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 2 part-side jsx) 92 93 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type start tag-name "div" jsx-depth 2 part-side jsx) 93 96 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 96 97 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 24 tag-type void tag-name "reactmatrixanimation" jsx-depth 2 part-side jsx) 97 117 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "reactmatrixanimation" jsx-depth 2 part-side jsx) 117 118 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "reactmatrixanimation" jsx-depth 2 part-side jsx) 118 119 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "reactmatrixanimation" jsx-depth 2 part-side jsx) 119 120 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type void tag-name "reactmatrixanimation" jsx-depth 2 part-side jsx) 120 123 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 123 124 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 20 tag-type end tag-name "div" jsx-depth 2 part-side jsx) 124 125 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type end tag-name "div" jsx-depth 2 part-side jsx) 125 128 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type end tag-name "div" jsx-depth 2 part-side jsx) 128 129 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type end tag-name "div" jsx-depth 2 part-side jsx) 129 131 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 131 132 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 132 133 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 133 134 (jsx-depth 1 part-side jsx syntax-multiline t js-jsx-text (544 571 #<buffer App.js>) fontified t)) . 536) (undo-tree-id987 . -134) (undo-tree-id988 . -132) (undo-tree-id989 . -13) (undo-tree-id990 . -133) (undo-tree-id991 . -120) (undo-tree-id992 . -120) (undo-tree-id993 . -120) (undo-tree-id994 . -120) (undo-tree-id995 . -14) (undo-tree-id996 . -14) (undo-tree-id997 . -14) (undo-tree-id998 . -14) (undo-tree-id999 . -132) (undo-tree-id1000 . -132) (undo-tree-id1001 . -132) (undo-tree-id1002 . -13) (undo-tree-id1003 . -132) 531 (t 26130 37340 370599 536000)) ((536 . 670) (#("<div className=\" absolute z-0 m-auto flex w-screen items-center justify-center h-screen\">
		<ReactMatrixAnimation />
		</div>
" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 4 5 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 6 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 14 15 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 15 87 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 87 88 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 88 89 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 89 92 (jsx-depth 1 part-side jsx) 92 93 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "reactmatrixanimation" jsx-depth 1 part-side jsx) 93 113 (font-lock-face web-mode-html-tag-face tag-type void tag-name "reactmatrixanimation" jsx-depth 1 part-side jsx) 113 114 (tag-type void tag-name "reactmatrixanimation" jsx-depth 1 part-side jsx) 114 115 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "reactmatrixanimation" jsx-depth 1 part-side jsx) 115 116 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "reactmatrixanimation" jsx-depth 1 part-side jsx) 116 118 (jsx-depth 1 part-side jsx) 118 119 (jsx-depth 1 part-side jsx) 119 120 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 120 121 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 121 124 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 124 125 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 125 126 (jsx-depth 1 part-side jsx)) . 536) (undo-tree-id1004 . 36) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 654) (658 . 659) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 658) (658 . 659) (t 26130 37353 617284 640000)) (26130 37353 611637 632000) 0 nil] [nil nil ((#("	    {/* <div className=\" absolute z-0 m-auto flex w-screen items-center justify-center h-screen\">
		<ReactMatrixAnimation />
		</div> */}
" 0 5 (jsx-depth 1 part-side jsx) 5 6 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 6 7 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment jsx-depth 2 part-side jsx) 7 9 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 9 10 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 17 tag-type start tag-name "div" jsx-depth 2 part-side jsx) 10 13 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" jsx-depth 2 part-side jsx) 13 14 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" jsx-depth 2 part-side jsx) 14 15 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 2 part-side jsx) 15 23 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr t jsx-depth 2 part-side jsx) 23 24 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr t jsx-depth 2 part-side jsx) 24 96 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr t jsx-depth 2 part-side jsx) 96 97 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 2 part-side jsx) 97 98 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type start tag-name "div" jsx-depth 2 part-side jsx) 98 101 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 101 102 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 24 tag-type void tag-name "reactmatrixanimation" jsx-depth 2 part-side jsx) 102 122 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "reactmatrixanimation" jsx-depth 2 part-side jsx) 122 123 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "reactmatrixanimation" jsx-depth 2 part-side jsx) 123 124 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type void tag-name "reactmatrixanimation" jsx-depth 2 part-side jsx) 124 125 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type void tag-name "reactmatrixanimation" jsx-depth 2 part-side jsx) 125 128 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 128 129 (font-lock-face web-mode-javascript-comment-face part-token comment tag-beg 20 tag-type end tag-name "div" jsx-depth 2 part-side jsx) 129 130 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type end tag-name "div" jsx-depth 2 part-side jsx) 130 133 (font-lock-face web-mode-javascript-comment-face part-token comment tag-type end tag-name "div" jsx-depth 2 part-side jsx) 133 134 (font-lock-face web-mode-javascript-comment-face part-token comment tag-end t tag-type end tag-name "div" jsx-depth 2 part-side jsx) 134 136 (font-lock-face web-mode-javascript-comment-face part-token comment jsx-depth 2 part-side jsx) 136 137 (font-lock-face web-mode-javascript-comment-face syntax-table (12) part-token comment jsx-depth 2 part-side jsx) 137 138 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 138 139 (jsx-depth 1 part-side jsx syntax-multiline t js-jsx-text (544 571 #<buffer App.js>) fontified t)) . 531) (undo-tree-id972 . -138) (undo-tree-id973 . -19) (undo-tree-id974 . -138) (undo-tree-id975 . -138) (undo-tree-id976 . -125) (undo-tree-id977 . -125) (undo-tree-id978 . -125) (undo-tree-id979 . -125) (undo-tree-id980 . -19) (undo-tree-id981 . -19) (undo-tree-id982 . -19) (undo-tree-id983 . -138) (undo-tree-id984 . -19) (undo-tree-id985 . -138) (undo-tree-id986 . -139) 669 (t 26130 37340 370599 536000)) ((531 . 670)) (26130 37351 606772 214000) 0 nil])
([nil nil ((227 . 228) (t 26130 47698 923480 21000) 226) nil (26130 47700 846547 278000) 0 nil])
([nil nil ((346 . 349)) ((#("wfu" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 346) (undo-tree-id1092 . -3) (undo-tree-id1093 . -3)) (26130 37685 823543 984000) 0 nil])
nil
nil
([nil nil ((411 . 412) (t 26130 47700 853480 820000)) nil (26130 47763 851071 820000) 0 nil])
([nil nil ((#("w" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . -346) (undo-tree-id1010 . -1) (#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . -347) (undo-tree-id1012 . -1) (#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . -348) (undo-tree-id1014 . -1) 349) ((346 . 349)) (26130 37685 528463 996000) 0 nil])
([nil nil ((#("{" 0 1 (part-side jsx)) . 186) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (t 26130 47764 876840 587000)) nil (26130 47780 825564 820000) 0 nil] [nil nil ((1060 . 1061) (nil rear-nonsticky nil 1059 . 1060) (nil part-side jsx 1054 . 1060) (nil part-side jsx 1053 . 1054) (nil jsx-end 1 1053 . 1054) (nil jsx-depth 1 1053 . 1054) (nil tag-name "_fragment_" 1053 . 1054) (nil tag-type end 1053 . 1054) (nil tag-end t 1053 . 1054) (nil font-lock-face web-mode-html-tag-bracket-face 1053 . 1054) (nil part-side jsx 1052 . 1053) (nil jsx-depth 1 1052 . 1053) (nil tag-name "_fragment_" 1052 . 1053) (nil tag-type end 1052 . 1053) (nil font-lock-face web-mode-html-tag-bracket-face 1052 . 1053) (nil part-side jsx 1051 . 1052) (nil jsx-depth 1 1051 . 1052) (nil tag-name "_fragment_" 1051 . 1052) (nil tag-type end 1051 . 1052) (nil tag-beg 20 1051 . 1052) (nil font-lock-face web-mode-html-tag-bracket-face 1051 . 1052) (nil part-side jsx 1046 . 1051) (nil jsx-depth 1 1046 . 1051) (nil part-side jsx 1045 . 1046) (nil jsx-depth 1 1045 . 1046) (nil tag-name "p" 1045 . 1046) (nil tag-type end 1045 . 1046) (nil tag-end t 1045 . 1046) (nil font-lock-face web-mode-html-tag-bracket-face 1045 . 1046) (nil part-side jsx 1044 . 1045) (nil jsx-depth 1 1044 . 1045) (nil tag-name "p" 1044 . 1045) (nil tag-type end 1044 . 1045) (nil font-lock-face web-mode-html-tag-face 1044 . 1045) (nil part-side jsx 1043 . 1044) (nil jsx-depth 1 1043 . 1044) (nil tag-name "p" 1043 . 1044) (nil tag-type end 1043 . 1044) (nil font-lock-face web-mode-html-tag-bracket-face 1043 . 1044) (nil part-side jsx 1042 . 1043) (nil jsx-depth 1 1042 . 1043) (nil tag-name "p" 1042 . 1043) (nil tag-type end 1042 . 1043) (nil tag-beg 20 1042 . 1043) (nil font-lock-face web-mode-html-tag-bracket-face 1042 . 1043) (nil part-side jsx 1041 . 1042) (nil jsx-depth 2 1041 . 1042) (nil jsx-end 2 1041 . 1042) (nil font-lock-face web-mode-block-delimiter-face 1041 . 1042) (nil part-side jsx 1040 . 1041) (nil jsx-depth 2 1040 . 1041) (nil part-token string 1040 . 1041) (nil syntax-table (15) 1040 . 1041) (nil font-lock-face web-mode-javascript-string-face 1040 . 1041) (nil part-side jsx 1018 . 1040) (nil jsx-depth 2 1018 . 1040) (nil part-token string 1018 . 1040) (nil font-lock-face web-mode-javascript-string-face 1018 . 1040) (nil part-side jsx 1017 . 1018) (nil jsx-depth 2 1017 . 1018) (nil part-token string 1017 . 1018) (nil syntax-table (15) 1017 . 1018) (nil font-lock-face web-mode-javascript-string-face 1017 . 1018) (nil part-side jsx 1003 . 1017) (nil jsx-depth 2 1003 . 1017) (nil part-side jsx 1002 . 1003) (nil jsx-depth 2 1002 . 1003) (nil jsx-beg 2 1002 . 1003) (nil font-lock-face web-mode-block-delimiter-face 1002 . 1003) (nil part-side jsx 1000 . 1002) (nil jsx-depth 1 1000 . 1002) (nil part-side jsx 995 . 1000) (nil jsx-depth 1 995 . 1000) (nil part-side jsx 988 . 995) (nil jsx-depth 1 988 . 995) (nil part-side jsx 987 . 988) (nil jsx-depth 1 987 . 988) (nil tag-name "p" 987 . 988) (nil tag-type start 987 . 988) (nil tag-end t 987 . 988) (nil font-lock-face web-mode-html-tag-bracket-face 987 . 988) (nil part-side jsx 986 . 987) (nil jsx-depth 1 986 . 987) (nil tag-name "p" 986 . 987) (nil tag-type start 986 . 987) (nil font-lock-face web-mode-html-tag-face 986 . 987) (nil part-side jsx 985 . 986) (nil jsx-depth 1 985 . 986) (nil tag-name "p" 985 . 986) (nil tag-type start 985 . 986) (nil tag-beg 16 985 . 986) (nil font-lock-face web-mode-html-tag-bracket-face 985 . 986) (nil part-side jsx 978 . 985) (nil jsx-depth 1 978 . 985) (nil part-side jsx 977 . 978) (nil jsx-depth 1 977 . 978) (nil tag-name "div" 977 . 978) (nil tag-type end 977 . 978) (nil tag-end t 977 . 978) (nil font-lock-face web-mode-html-tag-bracket-face 977 . 978) (nil part-side jsx 974 . 977) (nil jsx-depth 1 974 . 977) (nil tag-name "div" 974 . 977) (nil tag-type end 974 . 977) (nil font-lock-face web-mode-html-tag-face 974 . 977) (nil part-side jsx 973 . 974) (nil jsx-depth 1 973 . 974) (nil tag-name "div" 973 . 974) (nil tag-type end 973 . 974) (nil font-lock-face web-mode-html-tag-bracket-face 973 . 974) (nil part-side jsx 972 . 973) (nil jsx-depth 1 972 . 973) (nil tag-name "div" 972 . 973) (nil tag-type end 972 . 973) (nil tag-beg 20 972 . 973) (nil font-lock-face web-mode-html-tag-bracket-face 972 . 973) (nil part-side jsx 965 . 972) (nil jsx-depth 1 965 . 972) (nil part-side jsx 964 . 965) (nil jsx-depth 1 964 . 965) (nil tag-name "button" 964 . 965) (nil tag-type end 964 . 965) (nil tag-end t 964 . 965) (nil font-lock-face web-mode-html-tag-bracket-face 964 . 965) (nil part-side jsx 958 . 964) (nil jsx-depth 1 958 . 964) (nil tag-name "button" 958 . 964) (nil tag-type end 958 . 964) (nil font-lock-face web-mode-html-tag-face 958 . 964) (nil part-side jsx 957 . 958) (nil jsx-depth 1 957 . 958) (nil tag-name "button" 957 . 958) (nil tag-type end 957 . 958) (nil font-lock-face web-mode-html-tag-bracket-face 957 . 958) (nil part-side jsx 956 . 957) (nil jsx-depth 1 956 . 957) (nil tag-name "button" 956 . 957) (nil tag-type end 956 . 957) (nil tag-beg 20 956 . 957) (nil font-lock-face web-mode-html-tag-bracket-face 956 . 957) (nil part-side jsx 955 . 956) (nil jsx-depth 1 955 . 956) (nil part-side jsx 954 . 955) (nil jsx-depth 1 954 . 955) (nil tag-name "button" 954 . 955) (nil tag-type start 954 . 955) (nil tag-end t 954 . 955) (nil font-lock-face web-mode-html-tag-bracket-face 954 . 955) (nil part-side jsx 953 . 954) (nil jsx-depth 2 953 . 954) (nil tag-attr t 953 . 954) (nil tag-attr-end 7 953 . 954) (nil tag-name "button" 953 . 954) (nil tag-type start 953 . 954) (nil jsx-end 2 953 . 954) (nil font-lock-face web-mode-block-delimiter-face 953 . 954) (nil part-side jsx 952 . 953) (nil jsx-depth 2 952 . 953) (nil tag-attr t 952 . 953) (nil tag-name "button" 952 . 953) (nil tag-type start 952 . 953) (nil part-side jsx 951 . 952) (nil jsx-depth 2 951 . 952) (nil tag-attr t 951 . 952) (nil tag-name "button" 951 . 952) (nil tag-type start 951 . 952) (nil part-token string 951 . 952) (nil syntax-table (15) 951 . 952) (nil font-lock-face web-mode-javascript-string-face 951 . 952) (nil part-side jsx 950 . 951) (nil jsx-depth 2 950 . 951) (nil tag-attr t 950 . 951) (nil tag-name "button" 950 . 951) (nil tag-type start 950 . 951) (nil part-token string 950 . 951) (nil font-lock-face web-mode-javascript-string-face 950 . 951) (nil part-side jsx 949 . 950) (nil jsx-depth 2 949 . 950) (nil tag-attr t 949 . 950) (nil tag-name "button" 949 . 950) (nil tag-type start 949 . 950) (nil part-token string 949 . 950) (nil syntax-table (15) 949 . 950) (nil font-lock-face web-mode-javascript-string-face 949 . 950) (nil part-side jsx 948 . 949) (nil jsx-depth 2 948 . 949) (nil tag-attr t 948 . 949) (nil tag-name "button" 948 . 949) (nil tag-type start 948 . 949) (nil part-side jsx 938 . 948) (nil jsx-depth 2 938 . 948) (nil tag-attr t 938 . 948) (nil tag-name "button" 938 . 948) (nil tag-type start 938 . 948) (nil face web-mode-function-call-face 938 . 948) (nil part-side jsx 937 . 938) (nil jsx-depth 2 937 . 938) (nil tag-attr t 937 . 938) (nil tag-name "button" 937 . 938) (nil tag-type start 937 . 938) (nil jsx-beg 2 937 . 938) (nil font-lock-face web-mode-block-delimiter-face 937 . 938) (nil part-side jsx 936 . 937) (nil jsx-depth 1 936 . 937) (nil tag-attr t 936 . 937) (nil tag-name "button" 936 . 937) (nil tag-type start 936 . 937) (nil font-lock-face web-mode-html-attr-equal-face 936 . 937) (nil part-side jsx 930 . 936) (nil jsx-depth 1 930 . 936) (nil tag-attr t 930 . 936) (nil tag-name "button" 930 . 936) (nil tag-type start 930 . 936) (nil font-lock-face web-mode-html-attr-name-face 930 . 936) (nil part-side jsx 929 . 930) (nil jsx-depth 1 929 . 930) (nil tag-attr-beg 8 929 . 930) (nil tag-attr t 929 . 930) (nil tag-name "button" 929 . 930) (nil tag-type start 929 . 930) (nil font-lock-face web-mode-html-attr-name-face 929 . 930) (nil part-side jsx 928 . 929) (nil jsx-depth 1 928 . 929) (nil tag-name "button" 928 . 929) (nil tag-type start 928 . 929) (nil part-side jsx 922 . 928) (nil jsx-depth 1 922 . 928) (nil tag-name "button" 922 . 928) (nil tag-type start 922 . 928) (nil font-lock-face web-mode-html-tag-face 922 . 928) (nil part-side jsx 921 . 922) (nil jsx-depth 1 921 . 922) (nil tag-name "button" 921 . 922) (nil tag-type start 921 . 922) (nil tag-beg 17 921 . 922) (nil font-lock-face web-mode-html-tag-bracket-face 921 . 922) (nil part-side jsx 912 . 921) (nil jsx-depth 1 912 . 921) (nil part-side jsx 911 . 912) (nil jsx-depth 1 911 . 912) (nil tag-name "button" 911 . 912) (nil tag-type end 911 . 912) (nil tag-end t 911 . 912) (nil font-lock-face web-mode-html-tag-bracket-face 911 . 912) (nil part-side jsx 905 . 911) (nil jsx-depth 1 905 . 911) (nil tag-name "button" 905 . 911) (nil tag-type end 905 . 911) (nil font-lock-face web-mode-html-tag-face 905 . 911) (nil part-side jsx 904 . 905) (nil jsx-depth 1 904 . 905) (nil tag-name "button" 904 . 905) (nil tag-type end 904 . 905) (nil font-lock-face web-mode-html-tag-bracket-face 904 . 905) (nil part-side jsx 903 . 904) (nil jsx-depth 1 903 . 904) (nil tag-name "button" 903 . 904) (nil tag-type end 903 . 904) (nil tag-beg 20 903 . 904) (nil font-lock-face web-mode-html-tag-bracket-face 903 . 904) (nil part-side jsx 902 . 903) (nil jsx-depth 1 902 . 903) (nil part-side jsx 901 . 902) (nil jsx-depth 1 901 . 902) (nil tag-name "button" 901 . 902) (nil tag-type start 901 . 902) (nil tag-end t 901 . 902) (nil font-lock-face web-mode-html-tag-bracket-face 901 . 902) (nil part-side jsx 900 . 901) (nil jsx-depth 2 900 . 901) (nil tag-attr t 900 . 901) (nil tag-attr-end 7 900 . 901) (nil tag-name "button" 900 . 901) (nil tag-type start 900 . 901) (nil jsx-end 2 900 . 901) (nil font-lock-face web-mode-block-delimiter-face 900 . 901) (nil part-side jsx 899 . 900) (nil jsx-depth 2 899 . 900) (nil tag-attr t 899 . 900) (nil tag-name "button" 899 . 900) (nil tag-type start 899 . 900) (nil part-side jsx 898 . 899) (nil jsx-depth 2 898 . 899) (nil tag-attr t 898 . 899) (nil tag-name "button" 898 . 899) (nil tag-type start 898 . 899) (nil part-token string 898 . 899) (nil syntax-table (15) 898 . 899) (nil font-lock-face web-mode-javascript-string-face 898 . 899) (nil part-side jsx 897 . 898) (nil jsx-depth 2 897 . 898) (nil tag-attr t 897 . 898) (nil tag-name "button" 897 . 898) (nil tag-type start 897 . 898) (nil part-token string 897 . 898) (nil font-lock-face web-mode-javascript-string-face 897 . 898) (nil part-side jsx 896 . 897) (nil jsx-depth 2 896 . 897) (nil tag-attr t 896 . 897) (nil tag-name "button" 896 . 897) (nil tag-type start 896 . 897) (nil part-token string 896 . 897) (nil syntax-table (15) 896 . 897) (nil font-lock-face web-mode-javascript-string-face 896 . 897) (nil part-side jsx 895 . 896) (nil jsx-depth 2 895 . 896) (nil tag-attr t 895 . 896) (nil tag-name "button" 895 . 896) (nil tag-type start 895 . 896) (nil part-side jsx 885 . 895) (nil jsx-depth 2 885 . 895) (nil tag-attr t 885 . 895) (nil tag-name "button" 885 . 895) (nil tag-type start 885 . 895) (nil face web-mode-function-call-face 885 . 895) (nil part-side jsx 884 . 885) (nil jsx-depth 2 884 . 885) (nil tag-attr t 884 . 885) (nil tag-name "button" 884 . 885) (nil tag-type start 884 . 885) (nil jsx-beg 2 884 . 885) (nil font-lock-face web-mode-block-delimiter-face 884 . 885) (nil part-side jsx 883 . 884) (nil jsx-depth 1 883 . 884) (nil tag-attr t 883 . 884) (nil tag-name "button" 883 . 884) (nil tag-type start 883 . 884) (nil font-lock-face web-mode-html-attr-equal-face 883 . 884) (nil part-side jsx 877 . 883) (nil jsx-depth 1 877 . 883) (nil tag-attr t 877 . 883) (nil tag-name "button" 877 . 883) (nil tag-type start 877 . 883) (nil font-lock-face web-mode-html-attr-name-face 877 . 883) (nil part-side jsx 876 . 877) (nil jsx-depth 1 876 . 877) (nil tag-attr-beg 8 876 . 877) (nil tag-attr t 876 . 877) (nil tag-name "button" 876 . 877) (nil tag-type start 876 . 877) (nil font-lock-face web-mode-html-attr-name-face 876 . 877) (nil part-side jsx 875 . 876) (nil jsx-depth 1 875 . 876) (nil tag-name "button" 875 . 876) (nil tag-type start 875 . 876) (nil part-side jsx 869 . 875) (nil jsx-depth 1 869 . 875) (nil tag-name "button" 869 . 875) (nil tag-type start 869 . 875) (nil font-lock-face web-mode-html-tag-face 869 . 875) (nil part-side jsx 868 . 869) (nil jsx-depth 1 868 . 869) (nil tag-name "button" 868 . 869) (nil tag-type start 868 . 869) (nil tag-beg 17 868 . 869) (nil font-lock-face web-mode-html-tag-bracket-face 868 . 869) (nil part-side jsx 859 . 868) (nil jsx-depth 1 859 . 868) (nil part-side jsx 858 . 859) (nil jsx-depth 1 858 . 859) (nil tag-name "button" 858 . 859) (nil tag-type end 858 . 859) (nil tag-end t 858 . 859) (nil font-lock-face web-mode-html-tag-bracket-face 858 . 859) (nil part-side jsx 852 . 858) (nil jsx-depth 1 852 . 858) (nil tag-name "button" 852 . 858) (nil tag-type end 852 . 858) (nil font-lock-face web-mode-html-tag-face 852 . 858) (nil part-side jsx 851 . 852) (nil jsx-depth 1 851 . 852) (nil tag-name "button" 851 . 852) (nil tag-type end 851 . 852) (nil font-lock-face web-mode-html-tag-bracket-face 851 . 852) (nil part-side jsx 850 . 851) (nil jsx-depth 1 850 . 851) (nil tag-name "button" 850 . 851) (nil tag-type end 850 . 851) (nil tag-beg 20 850 . 851) (nil font-lock-face web-mode-html-tag-bracket-face 850 . 851) (nil part-side jsx 849 . 850) (nil jsx-depth 1 849 . 850) (nil part-side jsx 848 . 849) (nil jsx-depth 1 848 . 849) (nil tag-name "button" 848 . 849) (nil tag-type start 848 . 849) (nil tag-end t 848 . 849) (nil font-lock-face web-mode-html-tag-bracket-face 848 . 849) (nil part-side jsx 847 . 848) (nil jsx-depth 2 847 . 848) (nil tag-attr t 847 . 848) (nil tag-attr-end 7 847 . 848) (nil tag-name "button" 847 . 848) (nil tag-type start 847 . 848) (nil jsx-end 2 847 . 848) (nil font-lock-face web-mode-block-delimiter-face 847 . 848) (nil part-side jsx 846 . 847) (nil jsx-depth 2 846 . 847) (nil tag-attr t 846 . 847) (nil tag-name "button" 846 . 847) (nil tag-type start 846 . 847) (nil part-side jsx 845 . 846) (nil jsx-depth 2 845 . 846) (nil tag-attr t 845 . 846) (nil tag-name "button" 845 . 846) (nil tag-type start 845 . 846) (nil part-token string 845 . 846) (nil syntax-table (15) 845 . 846) (nil font-lock-face web-mode-javascript-string-face 845 . 846) (nil part-side jsx 844 . 845) (nil jsx-depth 2 844 . 845) (nil tag-attr t 844 . 845) (nil tag-name "button" 844 . 845) (nil tag-type start 844 . 845) (nil part-token string 844 . 845) (nil font-lock-face web-mode-javascript-string-face 844 . 845) (nil part-side jsx 843 . 844) (nil jsx-depth 2 843 . 844) (nil tag-attr t 843 . 844) (nil tag-name "button" 843 . 844) (nil tag-type start 843 . 844) (nil part-token string 843 . 844) (nil syntax-table (15) 843 . 844) (nil font-lock-face web-mode-javascript-string-face 843 . 844) (nil part-side jsx 842 . 843) (nil jsx-depth 2 842 . 843) (nil tag-attr t 842 . 843) (nil tag-name "button" 842 . 843) (nil tag-type start 842 . 843) (nil part-side jsx 832 . 842) (nil jsx-depth 2 832 . 842) (nil tag-attr t 832 . 842) (nil tag-name "button" 832 . 842) (nil tag-type start 832 . 842) (nil face web-mode-function-call-face 832 . 842) (nil part-side jsx 831 . 832) (nil jsx-depth 2 831 . 832) (nil tag-attr t 831 . 832) (nil tag-name "button" 831 . 832) (nil tag-type start 831 . 832) (nil jsx-beg 2 831 . 832) (nil font-lock-face web-mode-block-delimiter-face 831 . 832) (nil part-side jsx 830 . 831) (nil jsx-depth 1 830 . 831) (nil tag-attr t 830 . 831) (nil tag-name "button" 830 . 831) (nil tag-type start 830 . 831) (nil font-lock-face web-mode-html-attr-equal-face 830 . 831) (nil part-side jsx 824 . 830) (nil jsx-depth 1 824 . 830) (nil tag-attr t 824 . 830) (nil tag-name "button" 824 . 830) (nil tag-type start 824 . 830) (nil font-lock-face web-mode-html-attr-name-face 824 . 830) (nil part-side jsx 823 . 824) (nil jsx-depth 1 823 . 824) (nil tag-attr-beg 8 823 . 824) (nil tag-attr t 823 . 824) (nil tag-name "button" 823 . 824) (nil tag-type start 823 . 824) (nil font-lock-face web-mode-html-attr-name-face 823 . 824) (nil part-side jsx 822 . 823) (nil jsx-depth 1 822 . 823) (nil tag-name "button" 822 . 823) (nil tag-type start 822 . 823) (nil part-side jsx 816 . 822) (nil jsx-depth 1 816 . 822) (nil tag-name "button" 816 . 822) (nil tag-type start 816 . 822) (nil font-lock-face web-mode-html-tag-face 816 . 822) (nil part-side jsx 815 . 816) (nil jsx-depth 1 815 . 816) (nil tag-name "button" 815 . 816) (nil tag-type start 815 . 816) (nil tag-beg 17 815 . 816) (nil font-lock-face web-mode-html-tag-bracket-face 815 . 816) (nil part-side jsx 806 . 815) (nil jsx-depth 1 806 . 815) (nil part-side jsx 805 . 806) (nil jsx-depth 1 805 . 806) (nil tag-name "div" 805 . 806) (nil tag-type start 805 . 806) (nil tag-end t 805 . 806) (nil font-lock-face web-mode-html-tag-bracket-face 805 . 806) (nil part-side jsx 804 . 805) (nil jsx-depth 2 804 . 805) (nil tag-attr t 804 . 805) (nil tag-attr-end 5 804 . 805) (nil tag-name "div" 804 . 805) (nil tag-type start 804 . 805) (nil jsx-end 2 804 . 805) (nil font-lock-face web-mode-block-delimiter-face 804 . 805) (nil part-side jsx 802 . 804) (nil jsx-depth 2 802 . 804) (nil tag-attr t 802 . 804) (nil tag-name "div" 802 . 804) (nil tag-type start 802 . 804) (nil part-side jsx 801 . 802) (nil jsx-depth 2 801 . 802) (nil tag-attr t 801 . 802) (nil tag-name "div" 801 . 802) (nil tag-type start 801 . 802) (nil part-token string 801 . 802) (nil syntax-table (15) 801 . 802) (nil font-lock-face web-mode-javascript-string-face 801 . 802) (nil part-side jsx 797 . 801) (nil jsx-depth 2 797 . 801) (nil tag-attr t 797 . 801) (nil tag-name "div" 797 . 801) (nil tag-type start 797 . 801) (nil part-token string 797 . 801) (nil font-lock-face web-mode-javascript-string-face 797 . 801) (nil part-side jsx 796 . 797) (nil jsx-depth 2 796 . 797) (nil tag-attr t 796 . 797) (nil tag-name "div" 796 . 797) (nil tag-type start 796 . 797) (nil part-token string 796 . 797) (nil syntax-table (15) 796 . 797) (nil font-lock-face web-mode-javascript-string-face 796 . 797) (nil part-side jsx 794 . 796) (nil jsx-depth 2 794 . 796) (nil tag-attr t 794 . 796) (nil tag-name "div" 794 . 796) (nil tag-type start 794 . 796) (nil part-side jsx 787 . 794) (nil jsx-depth 2 787 . 794) (nil tag-attr t 787 . 794) (nil tag-name "div" 787 . 794) (nil tag-type start 787 . 794) (nil face web-mode-variable-name-face 787 . 794) (nil part-side jsx 785 . 787) (nil jsx-depth 2 785 . 787) (nil tag-attr t 785 . 787) (nil tag-name "div" 785 . 787) (nil tag-type start 785 . 787) (nil part-side jsx 784 . 785) (nil jsx-depth 2 784 . 785) (nil tag-attr t 784 . 785) (nil tag-name "div" 784 . 785) (nil tag-type start 784 . 785) (nil jsx-beg 2 784 . 785) (nil font-lock-face web-mode-block-delimiter-face 784 . 785) (nil part-side jsx 783 . 784) (nil jsx-depth 1 783 . 784) (nil tag-attr t 783 . 784) (nil tag-name "div" 783 . 784) (nil tag-type start 783 . 784) (nil font-lock-face web-mode-html-attr-equal-face 783 . 784) (nil part-side jsx 779 . 783) (nil jsx-depth 1 779 . 783) (nil tag-attr t 779 . 783) (nil tag-name "div" 779 . 783) (nil tag-type start 779 . 783) (nil font-lock-face web-mode-html-attr-name-face 779 . 783) (nil part-side jsx 778 . 779) (nil jsx-depth 1 778 . 779) (nil tag-attr-beg 0 778 . 779) (nil tag-attr t 778 . 779) (nil tag-name "div" 778 . 779) (nil tag-type start 778 . 779) (nil font-lock-face web-mode-html-attr-name-face 778 . 779) (nil part-side jsx 777 . 778) (nil jsx-depth 1 777 . 778) (nil tag-name "div" 777 . 778) (nil tag-type start 777 . 778) (nil part-side jsx 774 . 777) (nil jsx-depth 1 774 . 777) (nil tag-name "div" 774 . 777) (nil tag-type start 774 . 777) (nil font-lock-face web-mode-html-tag-face 774 . 777) (nil part-side jsx 773 . 774) (nil jsx-depth 1 773 . 774) (nil tag-name "div" 773 . 774) (nil tag-type start 773 . 774) (nil tag-beg 17 773 . 774) (nil font-lock-face web-mode-html-tag-bracket-face 773 . 774) (nil part-side jsx 766 . 773) (nil jsx-depth 1 766 . 773) (nil part-side jsx 765 . 766) (nil jsx-depth 1 765 . 766) (nil tag-name "h1" 765 . 766) (nil tag-type end 765 . 766) (nil tag-end t 765 . 766) (nil font-lock-face web-mode-html-tag-bracket-face 765 . 766) (nil part-side jsx 763 . 765) (nil jsx-depth 1 763 . 765) (nil tag-name "h1" 763 . 765) (nil tag-type end 763 . 765) (nil font-lock-face web-mode-html-tag-face 763 . 765) (nil part-side jsx 762 . 763) (nil jsx-depth 1 762 . 763) (nil tag-name "h1" 762 . 763) (nil tag-type end 762 . 763) (nil font-lock-face web-mode-html-tag-bracket-face 762 . 763) (nil part-side jsx 761 . 762) (nil jsx-depth 1 761 . 762) (nil tag-name "h1" 761 . 762) (nil tag-type end 761 . 762) (nil tag-beg 20 761 . 762) (nil font-lock-face web-mode-html-tag-bracket-face 761 . 762) (nil part-side jsx 760 . 761) (nil jsx-depth 1 760 . 761) (nil part-side jsx 756 . 760) (nil jsx-depth 1 756 . 760) (nil part-side jsx 747 . 756) (nil jsx-depth 1 747 . 756) (nil part-side jsx 746 . 747) (nil jsx-depth 1 746 . 747) (nil tag-name "h1" 746 . 747) (nil tag-type start 746 . 747) (nil tag-end t 746 . 747) (nil font-lock-face web-mode-html-tag-bracket-face 746 . 747) (nil part-side jsx 744 . 746) (nil jsx-depth 1 744 . 746) (nil tag-name "h1" 744 . 746) (nil tag-type start 744 . 746) (nil font-lock-face web-mode-html-tag-face 744 . 746) (nil part-side jsx 743 . 744) (nil jsx-depth 1 743 . 744) (nil tag-name "h1" 743 . 744) (nil tag-type start 743 . 744) (nil tag-beg 16 743 . 744) (nil font-lock-face web-mode-html-tag-bracket-face 743 . 744) (nil part-side jsx 736 . 743) (nil jsx-depth 1 736 . 743) (nil part-side jsx 735 . 736) (nil jsx-depth 1 735 . 736) (nil tag-name "_fragment_" 735 . 736) (nil tag-type start 735 . 736) (nil tag-end t 735 . 736) (nil font-lock-face web-mode-html-tag-bracket-face 735 . 736) (nil part-side jsx 734 . 735) (nil jsx-beg 1 734 . 735) (nil jsx-depth 1 734 . 735) (nil tag-name "_fragment_" 734 . 735) (nil tag-type start 734 . 735) (nil tag-beg 16 734 . 735) (nil font-lock-face web-mode-html-tag-bracket-face 734 . 735) (nil part-side jsx 727 . 734) (nil part-side jsx 721 . 727) (nil face web-mode-keyword-face 721 . 727) (nil part-side jsx 696 . 721) (nil part-side jsx 695 . 696) (nil part-token string 695 . 696) (nil syntax-table (15) 695 . 696) (nil font-lock-face web-mode-javascript-string-face 695 . 696) (nil part-side jsx 680 . 695) (nil part-token string 680 . 695) (nil font-lock-face web-mode-javascript-string-face 680 . 695) (nil part-side jsx 679 . 680) (nil part-token string 679 . 680) (nil syntax-table (15) 679 . 680) (nil font-lock-face web-mode-javascript-string-face 679 . 680) (nil part-side jsx 678 . 679) (nil part-side jsx 673 . 678) (nil face web-mode-function-call-face 673 . 678) (nil part-side jsx 651 . 673) (nil part-side jsx 646 . 651) (nil face web-mode-function-name-face 646 . 651) (nil part-side jsx 645 . 646) (nil part-side jsx 640 . 645) (nil face web-mode-function-call-face 640 . 645) (nil part-side jsx 612 . 640) (nil part-side jsx 611 . 612) (nil part-token string 611 . 612) (nil syntax-table (15) 611 . 612) (nil font-lock-face web-mode-javascript-string-face 611 . 612) (nil part-side jsx 604 . 611) (nil part-token string 604 . 611) (nil font-lock-face web-mode-javascript-string-face 604 . 611) (nil part-side jsx 603 . 604) (nil part-token string 603 . 604) (nil syntax-table (15) 603 . 604) (nil font-lock-face web-mode-javascript-string-face 603 . 604) (nil part-side jsx 602 . 603) (nil part-side jsx 599 . 602) (nil face web-mode-function-call-face 599 . 602) (nil part-side jsx 574 . 599) (nil part-side jsx 570 . 574) (nil face web-mode-function-call-face 570 . 574) (nil part-side jsx 556 . 570) (nil part-side jsx 552 . 556) (nil face web-mode-function-call-face 552 . 556) (nil part-side jsx 527 . 552) (nil part-side jsx 523 . 527) (nil face web-mode-variable-name-face 523 . 527) (nil part-side jsx 519 . 523) (nil part-side jsx 509 . 519) (nil face web-mode-variable-name-face 509 . 519) (nil part-side jsx 508 . 509) (nil part-side jsx 503 . 508) (nil face web-mode-keyword-face 503 . 508) (nil part-side jsx 497 . 503) (nil part-side jsx 479 . 497) (nil face web-mode-function-call-face 479 . 497) (nil part-side jsx 457 . 479) (nil part-side jsx 452 . 457) (nil face web-mode-keyword-face 452 . 457) (nil part-side jsx 445 . 452) (nil part-side jsx 436 . 445) (nil face web-mode-function-name-face 436 . 445) (nil part-side jsx 435 . 436) (nil part-side jsx 427 . 435) (nil face web-mode-keyword-face 427 . 435) (nil part-side jsx 426 . 427) (nil part-side jsx 419 . 426) (nil face web-mode-keyword-face 419 . 426) (nil part-side jsx 418 . 419) (nil part-side jsx 412 . 418) (nil face web-mode-keyword-face 412 . 418) (412 . 1060)) ((#("export default function Component() {
  const [copiedText, copy] = useCopyToClipboard()

  const handleCopy = (text: string) => () => {
    copy(text)
      .then(() => {
        console.log('Copied!', { text })
      })
      .catch(error => {
        console.error('Failed to copy!', error)
      })
  }

  return (
    <>
      <h1>Click to copy:</h1>
      <div style={{ display: 'flex' }}>
        <button onClick={handleCopy('A')}>A</button>
        <button onClick={handleCopy('B')}>B</button>
        <button onClick={handleCopy('C')}>C</button>
      </div>
      <p>Copied value: {copiedText ?? 'Nothing is copied yet!'}</p>
    </>
  )
}" 0 1 (face web-mode-keyword-face part-side jsx) 1 2 (face web-mode-keyword-face part-side jsx) 2 3 (face web-mode-keyword-face part-side jsx) 3 4 (face web-mode-keyword-face part-side jsx) 4 5 (face web-mode-keyword-face part-side jsx) 5 6 (face web-mode-keyword-face part-side jsx) 6 7 (part-side jsx) 7 8 (face web-mode-keyword-face part-side jsx) 8 9 (face web-mode-keyword-face part-side jsx) 9 10 (face web-mode-keyword-face part-side jsx) 10 11 (face web-mode-keyword-face part-side jsx) 11 12 (face web-mode-keyword-face part-side jsx) 12 13 (face web-mode-keyword-face part-side jsx) 13 14 (face web-mode-keyword-face part-side jsx) 14 15 (part-side jsx) 15 16 (face web-mode-keyword-face part-side jsx) 16 23 (face web-mode-keyword-face part-side jsx) 23 24 (part-side jsx) 24 33 (face web-mode-function-name-face part-side jsx) 33 38 (part-side jsx) 38 40 (part-side jsx) 40 45 (face web-mode-keyword-face part-side jsx) 45 67 (part-side jsx) 67 85 (face web-mode-function-call-face part-side jsx) 85 91 (part-side jsx) 91 96 (face web-mode-keyword-face part-side jsx) 96 97 (part-side jsx) 97 107 (face web-mode-variable-name-face part-side jsx) 107 111 (part-side jsx) 111 115 (face web-mode-variable-name-face part-side jsx) 115 140 (part-side jsx) 140 144 (face web-mode-function-call-face part-side jsx) 144 158 (part-side jsx) 158 162 (face web-mode-function-call-face part-side jsx) 162 171 (part-side jsx) 171 187 (part-side jsx) 187 190 (face web-mode-function-call-face part-side jsx) 190 191 (part-side jsx) 191 192 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 192 199 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 199 200 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 200 212 (part-side jsx) 212 228 (part-side jsx) 228 233 (face web-mode-function-call-face part-side jsx) 233 234 (part-side jsx) 234 239 (face web-mode-function-name-face part-side jsx) 239 245 (part-side jsx) 245 261 (part-side jsx) 261 266 (face web-mode-function-call-face part-side jsx) 266 267 (part-side jsx) 267 268 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 268 283 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 283 284 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 284 293 (part-side jsx) 293 309 (part-side jsx) 309 315 (face web-mode-keyword-face part-side jsx) 315 318 (part-side jsx) 318 322 (part-side jsx) 322 323 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "_fragment_" jsx-depth 1 jsx-beg 1 part-side jsx) 323 324 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "_fragment_" jsx-depth 1 part-side jsx) 324 331 (jsx-depth 1 part-side jsx) 331 332 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 332 334 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 334 335 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1" jsx-depth 1 part-side jsx) 335 344 (jsx-depth 1 part-side jsx) 344 348 (jsx-depth 1 part-side jsx) 348 349 (jsx-depth 1 part-side jsx) 349 350 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 350 351 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 351 353 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 353 354 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1" jsx-depth 1 part-side jsx) 354 361 (jsx-depth 1 part-side jsx) 361 362 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 362 365 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 365 366 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 366 367 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 367 371 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 371 372 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 372 373 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type start tag-name "div" tag-attr t jsx-depth 2 part-side jsx) 373 375 (tag-type start tag-name "div" tag-attr t jsx-depth 2 part-side jsx) 375 382 (face web-mode-variable-name-face tag-type start tag-name "div" tag-attr t jsx-depth 2 part-side jsx) 382 384 (tag-type start tag-name "div" tag-attr t jsx-depth 2 part-side jsx) 384 385 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "div" tag-attr t jsx-depth 2 part-side jsx) 385 389 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "div" tag-attr t jsx-depth 2 part-side jsx) 389 390 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "div" tag-attr t jsx-depth 2 part-side jsx) 390 392 (tag-type start tag-name "div" tag-attr t jsx-depth 2 part-side jsx) 392 393 (font-lock-face web-mode-block-delimiter-face jsx-end 2 tag-type start tag-name "div" tag-attr-end 5 tag-attr t jsx-depth 2 part-side jsx) 393 394 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 394 403 (jsx-depth 1 part-side jsx) 403 404 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button" jsx-depth 1 part-side jsx) 404 410 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button" jsx-depth 1 part-side jsx) 410 411 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 411 412 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 8 jsx-depth 1 part-side jsx) 412 418 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 418 419 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 419 420 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 420 430 (face web-mode-function-call-face tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 430 431 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 431 432 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 432 433 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 433 434 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 434 435 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 435 436 (font-lock-face web-mode-block-delimiter-face jsx-end 2 tag-type start tag-name "button" tag-attr-end 7 tag-attr t jsx-depth 2 part-side jsx) 436 437 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button" jsx-depth 1 part-side jsx) 437 438 (jsx-depth 1 part-side jsx) 438 439 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button" jsx-depth 1 part-side jsx) 439 440 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 440 446 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 446 447 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button" jsx-depth 1 part-side jsx) 447 456 (jsx-depth 1 part-side jsx) 456 457 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button" jsx-depth 1 part-side jsx) 457 463 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button" jsx-depth 1 part-side jsx) 463 464 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 464 465 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 8 jsx-depth 1 part-side jsx) 465 471 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 471 472 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 472 473 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 473 483 (face web-mode-function-call-face tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 483 484 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 484 485 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 485 486 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 486 487 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 487 488 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 488 489 (font-lock-face web-mode-block-delimiter-face jsx-end 2 tag-type start tag-name "button" tag-attr-end 7 tag-attr t jsx-depth 2 part-side jsx) 489 490 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button" jsx-depth 1 part-side jsx) 490 491 (jsx-depth 1 part-side jsx) 491 492 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button" jsx-depth 1 part-side jsx) 492 493 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 493 499 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 499 500 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button" jsx-depth 1 part-side jsx) 500 509 (jsx-depth 1 part-side jsx) 509 510 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button" jsx-depth 1 part-side jsx) 510 516 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button" jsx-depth 1 part-side jsx) 516 517 (tag-type start tag-name "button" jsx-depth 1 part-side jsx) 517 518 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 8 jsx-depth 1 part-side jsx) 518 524 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 524 525 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t jsx-depth 1 part-side jsx) 525 526 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 526 536 (face web-mode-function-call-face tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 536 537 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 537 538 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 538 539 (font-lock-face web-mode-javascript-string-face part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 539 540 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 540 541 (tag-type start tag-name "button" tag-attr t jsx-depth 2 part-side jsx) 541 542 (font-lock-face web-mode-block-delimiter-face jsx-end 2 tag-type start tag-name "button" tag-attr-end 7 tag-attr t jsx-depth 2 part-side jsx) 542 543 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button" jsx-depth 1 part-side jsx) 543 544 (jsx-depth 1 part-side jsx) 544 545 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button" jsx-depth 1 part-side jsx) 545 546 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 546 552 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button" jsx-depth 1 part-side jsx) 552 553 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button" jsx-depth 1 part-side jsx) 553 560 (jsx-depth 1 part-side jsx) 560 561 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 561 562 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 562 565 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 565 566 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 566 573 (jsx-depth 1 part-side jsx) 573 574 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p" jsx-depth 1 part-side jsx) 574 575 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p" jsx-depth 1 part-side jsx) 575 576 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p" jsx-depth 1 part-side jsx) 576 583 (jsx-depth 1 part-side jsx) 583 588 (jsx-depth 1 part-side jsx) 588 590 (jsx-depth 1 part-side jsx) 590 591 (font-lock-face web-mode-block-delimiter-face jsx-beg 2 jsx-depth 2 part-side jsx) 591 605 (jsx-depth 2 part-side jsx) 605 606 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string jsx-depth 2 part-side jsx) 606 628 (font-lock-face web-mode-javascript-string-face part-token string jsx-depth 2 part-side jsx) 628 629 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string jsx-depth 2 part-side jsx) 629 630 (font-lock-face web-mode-block-delimiter-face jsx-end 2 jsx-depth 2 part-side jsx) 630 631 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p" jsx-depth 1 part-side jsx) 631 632 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 632 633 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p" jsx-depth 1 part-side jsx) 633 634 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p" jsx-depth 1 part-side jsx) 634 639 (jsx-depth 1 part-side jsx) 639 640 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "_fragment_" jsx-depth 1 part-side jsx) 640 641 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "_fragment_" jsx-depth 1 part-side jsx) 641 642 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "_fragment_" jsx-depth 1 jsx-end 1 part-side jsx) 642 647 (part-side jsx) 647 648 (part-side jsx rear-nonsticky nil)) . 412) (undo-tree-id1196 . 343) (undo-tree-id1197 . -305) (undo-tree-id1198 . -305) (undo-tree-id1199 . -304) (undo-tree-id1200 . -304) (nil syntax-table (15) 603 . 604) (nil syntax-table (15) 611 . 612) (nil syntax-table (15) 679 . 680) (nil syntax-table (15) 695 . 696) (nil tag-name "h1" 743 . 744) (nil tag-name "h1" 744 . 746) (nil tag-name "h1" 746 . 747) (nil tag-name "h1" 761 . 762) (nil tag-name "h1" 762 . 763) (nil tag-name "h1" 763 . 765) (nil tag-name "h1" 765 . 766) (nil tag-name "div" 773 . 774) (nil tag-name "div" 774 . 777) (nil tag-name "div" 777 . 778) (nil tag-name "div" 778 . 779) (nil tag-name "div" 779 . 783) (nil tag-name "div" 783 . 784) (nil tag-name "div" 784 . 785) (nil tag-name "div" 785 . 787) (nil tag-name "div" 787 . 794) (nil tag-name "div" 794 . 796) (nil syntax-table (15) 796 . 797) (nil tag-name "div" 796 . 797) (nil tag-name "div" 797 . 801) (nil syntax-table (15) 801 . 802) (nil tag-name "div" 801 . 802) (nil tag-name "div" 802 . 804) (nil tag-name "div" 804 . 805) (nil tag-name "div" 805 . 806) (nil tag-name "button" 815 . 816) (nil tag-name "button" 816 . 822) (nil tag-name "button" 822 . 823) (nil tag-name "button" 823 . 824) (nil tag-name "button" 824 . 830) (nil tag-name "button" 830 . 831) (nil tag-name "button" 831 . 832) (nil tag-name "button" 832 . 842) (nil tag-name "button" 842 . 843) (nil syntax-table (15) 843 . 844) (nil tag-name "button" 843 . 844) (nil tag-name "button" 844 . 845) (nil syntax-table (15) 845 . 846) (nil tag-name "button" 845 . 846) (nil tag-name "button" 846 . 847) (nil tag-name "button" 847 . 848) (nil tag-name "button" 848 . 849) (nil tag-name "button" 850 . 851) (nil tag-name "button" 851 . 852) (nil tag-name "button" 852 . 858) (nil tag-name "button" 858 . 859) (nil tag-name "button" 868 . 869) (nil tag-name "button" 869 . 875) (nil tag-name "button" 875 . 876) (nil tag-name "button" 876 . 877) (nil tag-name "button" 877 . 883) (nil tag-name "button" 883 . 884) (nil tag-name "button" 884 . 885) (nil tag-name "button" 885 . 895) (nil tag-name "button" 895 . 896) (nil syntax-table (15) 896 . 897) (nil tag-name "button" 896 . 897) (nil tag-name "button" 897 . 898) (nil syntax-table (15) 898 . 899) (nil tag-name "button" 898 . 899) (nil tag-name "button" 899 . 900) (nil tag-name "button" 900 . 901) (nil tag-name "button" 901 . 902) (nil tag-name "button" 903 . 904) (nil tag-name "button" 904 . 905) (nil tag-name "button" 905 . 911) (nil tag-name "button" 911 . 912) (nil tag-name "button" 921 . 922) (nil tag-name "button" 922 . 928) (nil tag-name "button" 928 . 929) (nil tag-name "button" 929 . 930) (nil tag-name "button" 930 . 936) (nil tag-name "button" 936 . 937) (nil tag-name "button" 937 . 938) (nil tag-name "button" 938 . 948) (nil tag-name "button" 948 . 949) (nil syntax-table (15) 949 . 950) (nil tag-name "button" 949 . 950) (nil tag-name "button" 950 . 951) (nil syntax-table (15) 951 . 952) (nil tag-name "button" 951 . 952) (nil tag-name "button" 952 . 953) (nil tag-name "button" 953 . 954) (nil tag-name "button" 954 . 955) (nil tag-name "button" 956 . 957) (nil tag-name "button" 957 . 958) (nil tag-name "button" 958 . 964) (nil tag-name "button" 964 . 965) (nil tag-name "div" 972 . 973) (nil tag-name "div" 973 . 974) (nil tag-name "div" 974 . 977) (nil tag-name "div" 977 . 978) (nil tag-name "p" 985 . 986) (nil tag-name "p" 986 . 987) (nil tag-name "p" 987 . 988) (nil syntax-table (15) 1017 . 1018) (nil syntax-table (15) 1040 . 1041) (nil tag-name "p" 1042 . 1043) (nil tag-name "p" 1043 . 1044) (nil tag-name "p" 1044 . 1045) (nil tag-name "p" 1045 . 1046) (nil rear-nonsticky t 1059 . 1060) (#("
" 0 1 (part-side jsx)) . 1060)) (26130 47763 447924 645000) 0 nil])
([nil nil ((346 . 350)) ((#("full" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 346) (undo-tree-id1084 . -4) (undo-tree-id1085 . -4) (undo-tree-id1086 . -4) (undo-tree-id1087 . -4) (undo-tree-id1088 . -3) (undo-tree-id1089 . -4) (undo-tree-id1090 . -4) (undo-tree-id1091 . -4)) (26130 37685 230069 171000) 0 nil])
([nil nil ((#(" " 0 1 (part-side jsx)) . 186) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1)) nil (26130 47780 825563 460000) 0 nil])
([nil nil ((#("f" 0 1 (face web-mode-keyword-face part-side jsx)) . 412) (#(" " 0 1 (part-side jsx)) . 412) (#("t" 0 1 (part-side jsx)) . 412) (#("l" 0 1 (part-side jsx)) . 412) (#("u" 0 1 (part-side jsx)) . 412) (#("a" 0 1 (part-side jsx)) . 412) (#("f" 0 1 (part-side jsx)) . 412) (#("e" 0 1 (part-side jsx)) . 412) (#("d" 0 1 (face web-mode-keyword-face part-side jsx)) . 412) (#(" " 0 1 (part-side jsx)) . 412) (#("t" 0 1 (part-side jsx)) . 412) (#("r" 0 1 (part-side jsx)) . 412) (#("o" 0 1 (part-side jsx)) . 412) (#("p" 0 1 (part-side jsx)) . 412) (#("x" 0 1 (part-side jsx)) . 412) (#("e" 0 1 (face web-mode-keyword-face part-side jsx)) . 412) (t 26130 47720 220155 482000)) ((412 . 413) (412 . 413) (412 . 413) (412 . 413) (412 . 413) (412 . 413) (412 . 413) (412 . 413) (412 . 413) (412 . 413) (412 . 413) (412 . 413) (412 . 413) (412 . 413) (412 . 413) (412 . 413)) (26130 47763 101207 762000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 350) (undo-tree-id1005 . 1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 350) (undo-tree-id1006 . 1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 350) (undo-tree-id1007 . 1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 350) (undo-tree-id1008 . 1) (#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . 350) (undo-tree-id1009 . 1)) ((350 . 351) (350 . 351) (350 . 351) (350 . 351) (350 . 351)) (26130 37684 780404 669000) 0 nil])
([nil nil ((#("}" 0 1 (part-side jsx)) . 205) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1)) nil (26130 47780 825561 740000) 0 nil])
([nil nil ((412 . 413)) ((#("f" 0 1 (face web-mode-keyword-face part-side jsx)) . 412) (t 26130 47739 826830 244000)) (26130 47762 958891 604000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . -343) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . -344) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . -345) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . -346) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . -347) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . -348) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx syntax-multiline t fontified t)) . -349) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) 350 (t 26130 37367 593970 755000)) ((343 . 350) (t 26130 37376 950650 440000)) (26130 37376 944504 358000) 0 nil])
([nil nil ((#(" " 0 1 (part-side jsx)) . 205) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1)) nil (26130 47780 825557 720000) 0 nil])
([nil nil ((702 . 705) (t 26130 47739 826830 244000)) ((#("uuu" 0 3 (part-side jsx)) . 702) (undo-tree-id1194 . -2) (undo-tree-id1195 . -2)) (26130 47762 957912 473000) 0 nil])
nil
([nil nil ((#("import useCopyToClipboard from 'usehooks-ts'
" 0 6 (face web-mode-keyword-face part-side jsx) 6 7 (part-side jsx) 7 25 (face web-mode-type-face part-side jsx) 25 26 (part-side jsx) 26 30 (face web-mode-keyword-face part-side jsx) 30 31 (part-side jsx) 31 32 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 32 43 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 43 44 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx rear-nonsticky t) 44 45 (syntax-table (15) part-side jsx)) . 179) (undo-tree-id1209 . -7) (undo-tree-id1210 . -44) (undo-tree-id1211 . -26) (undo-tree-id1212 . -26) (undo-tree-id1213 . -26) (undo-tree-id1214 . -26) (undo-tree-id1215 . -26) (undo-tree-id1216 . -26) (undo-tree-id1217 . -45) 205 (t 26130 47780 836847 177000)) nil (26130 48431 969128 106000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 222 . 223) (nil part-side jsx 222 . 223) (nil part-side jsx 221 . 222) (nil part-token string 221 . 222) (nil syntax-table (15) 221 . 222) (nil font-lock-face web-mode-javascript-string-face 221 . 222) (nil part-side jsx 206 . 221) (nil part-token string 206 . 221) (nil font-lock-face web-mode-javascript-string-face 206 . 221) (nil part-side jsx 205 . 206) (nil part-token string 205 . 206) (nil syntax-table (15) 205 . 206) (nil font-lock-face web-mode-javascript-string-face 205 . 206) (nil part-side jsx 204 . 205) (nil part-side jsx 200 . 204) (nil face web-mode-keyword-face 200 . 204) (nil part-side jsx 199 . 200) (nil part-side jsx 186 . 199) (nil face web-mode-type-face 186 . 199) (nil part-side jsx 185 . 186) (nil part-side jsx 179 . 185) (nil face web-mode-keyword-face 179 . 185) (179 . 223) (t 26130 48433 574 732000)) nil (26130 48631 944976 78000) 0 nil] [nil nil ((nil rear-nonsticky nil 363 . 364) (#("
" 0 1 (part-side jsx)) . -530) (363 . 531) (t 26130 47784 543515 375000)) ((#("
import CopyComponent from './CopyComponent';

const App = () => {
  return (
    <div className=\"App\">
      <CopyComponent />
    </div>
  );
};

export default App;
" 0 1 (part-side jsx rear-nonsticky nil) 1 7 (face web-mode-keyword-face part-side jsx) 7 8 (part-side jsx) 8 21 (face web-mode-type-face part-side jsx) 21 22 (part-side jsx) 22 26 (face web-mode-keyword-face part-side jsx) 26 27 (part-side jsx) 27 28 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 28 43 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 43 44 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 44 46 (part-side jsx) 46 47 (part-side jsx) 47 52 (face web-mode-keyword-face part-side jsx) 52 53 (part-side jsx) 53 56 (face web-mode-function-name-face part-side jsx) 56 67 (part-side jsx) 67 69 (part-side jsx) 69 75 (face web-mode-keyword-face part-side jsx) 75 78 (part-side jsx) 78 82 (part-side jsx) 82 83 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 83 86 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 86 87 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 87 88 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 88 96 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 96 97 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 97 101 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 101 102 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 102 103 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 103 110 (jsx-depth 1 part-side jsx) 110 111 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 111 124 (font-lock-face web-mode-html-tag-face tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 124 125 (tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 125 126 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 126 127 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 127 132 (jsx-depth 1 part-side jsx) 132 133 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 133 134 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 134 137 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 137 138 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx) 138 139 (part-side jsx) 139 144 (part-side jsx) 144 147 (part-side jsx) 147 148 (part-side jsx) 148 154 (face web-mode-keyword-face part-side jsx) 154 155 (part-side jsx) 155 162 (face web-mode-keyword-face part-side jsx) 162 167 (part-side jsx) 167 168 (part-side jsx)) . 363) (undo-tree-id1381 . -128) (undo-tree-id1382 . -128) (530 . 531) (nil rear-nonsticky t 363 . 364)) (26130 48431 674617 733000) 0 nil])
([nil nil ((223 . 224) (t 26130 48631 950781 629000) 222) nil (26130 48634 458152 377000) 0 nil])
([nil nil ((530 . 531) 363) ((#("
" 0 1 (part-side jsx)) . 530)) (26130 48431 150388 520000) 0 nil])
([nil nil ((208 . 219) (t 26130 48634 464117 576000)) nil (26130 48650 338861 518000) 0 nil])
([nil nil ((#("import CopyComponent from './CopyComponent';
" 0 6 (face web-mode-keyword-face part-side jsx) 6 7 (part-side jsx) 7 20 (face web-mode-type-face part-side jsx) 20 21 (part-side jsx) 21 25 (face web-mode-keyword-face part-side jsx) 25 26 (part-side jsx) 26 27 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 27 42 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 42 43 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 43 45 (part-side jsx)) . 364) (undo-tree-id1218 . -44) (t 26130 48330 230467 855000)) ((364 . 409)) (26130 48430 892523 125000) 0 nil])
([nil nil ((205 . 206) (#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx)) . 205) (undo-tree-id1385 . -1) (t 26130 48650 347467 427000)) nil (26130 48662 295634 650000) 0 nil])
([nil nil ((nil rear-nonsticky nil 178 . 179) (#("
" 0 1 (part-side jsx)) . -223) (178 . 224) 139) ((#("
import CopyComponent from './CopyComponent';
" 0 1 (part-side jsx rear-nonsticky nil) 1 7 (face web-mode-keyword-face part-side jsx) 7 8 (part-side jsx) 8 21 (face web-mode-type-face part-side jsx) 21 22 (part-side jsx) 22 26 (face web-mode-keyword-face part-side jsx) 26 27 (part-side jsx) 27 28 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 28 30 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 30 31 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 31 32 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 32 33 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 33 34 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 34 35 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 35 36 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 36 37 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 37 38 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 38 39 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 39 40 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 40 41 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 41 42 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 42 43 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 43 44 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 44 45 (part-side jsx) 45 46 (part-side jsx)) . 178) (undo-tree-id1376 . -30) (undo-tree-id1377 . -30) (undo-tree-id1378 . 15) (undo-tree-id1379 . -30) (undo-tree-id1380 . -30) (223 . 224) (nil rear-nonsticky t 178 . 179)) (26130 48430 624299 52000) 0 nil])
([nil nil ((232 . 233) (#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx)) . 232) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1)) nil (26130 48662 295630 860000) 0 nil])
([nil nil ((#("    <div className=\"App\">
      <CopyComponent />
    </div>
" 0 4 (part-side jsx) 4 5 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 jsx-beg 1 part-side jsx) 5 8 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 8 9 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 9 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 10 18 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 18 19 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 19 23 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 23 24 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 24 25 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 25 32 (jsx-depth 1 part-side jsx) 32 33 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 33 46 (font-lock-face web-mode-html-tag-face tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 46 47 (tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 47 48 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 48 49 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 49 54 (jsx-depth 1 part-side jsx) 54 55 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 55 56 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 56 59 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 59 60 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 jsx-end 1 part-side jsx) 60 61 (part-side jsx)) . 441) (undo-tree-id1232 . -50) (undo-tree-id1233 . -60) (undo-tree-id1234 . -50) 491 (t 26130 48337 193808 431000)) ((441 . 502)) (26130 48430 433589 243000) 0 nil])
([nil nil ((232 . 234) (t 26130 48662 304146 531000)) nil (26130 48687 135130 874000) 0 nil])
([nil nil ((nil rear-nonsticky nil 292 . 293) (#("
" 0 1 (jsx-depth 1 part-side jsx)) . -349) (288 . 350) 278) ((#("
    <div className=\"App\">
      <CopyComponent />
    </div>
" 0 1 (jsx-depth 1 part-side jsx) 1 4 (jsx-depth 1 part-side jsx) 4 5 (jsx-depth 1 part-side jsx rear-nonsticky nil) 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" jsx-depth 1 part-side jsx) 6 9 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" jsx-depth 1 part-side jsx) 9 10 (tag-type start tag-name "div" jsx-depth 1 part-side jsx) 10 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 jsx-depth 1 part-side jsx) 11 19 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 19 20 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 20 24 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx) 24 25 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 9 tag-attr t jsx-depth 1 part-side jsx) 25 26 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" jsx-depth 1 part-side jsx) 26 27 (jsx-depth 1 part-side jsx) 27 33 (jsx-depth 1 part-side jsx) 33 34 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 34 47 (font-lock-face web-mode-html-tag-face tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 47 48 (tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 48 49 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 49 50 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "copycomponent" jsx-depth 1 part-side jsx) 50 51 (jsx-depth 1 part-side jsx) 51 55 (jsx-depth 1 part-side jsx) 55 56 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" jsx-depth 1 part-side jsx) 56 57 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 57 60 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" jsx-depth 1 part-side jsx) 60 61 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" jsx-depth 1 part-side jsx) 61 62 (jsx-depth 1 part-side jsx)) . 288) (undo-tree-id1371 . 36) (undo-tree-id1372 . -26) (undo-tree-id1373 . -26) (undo-tree-id1374 . -5) (undo-tree-id1375 . -5) (349 . 350) (nil rear-nonsticky t 292 . 293)) (26130 48430 41730 857000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . -233) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) 234) nil (26130 48692 200919 176000) 0 nil])
([nil nil ((502 . 504) (489 . 491) (337 . 339) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 337) (313 . 319) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 313) (289 . 291) (#("    " 0 3 (jsx-depth 1 part-side jsx) 3 4 (jsx-depth 1 part-side jsx rear-nonsticky t)) . 289) (undo-tree-id1229 . -4) (undo-tree-id1231 . -4) 293) ((289 . 293) (#("		" 0 2 (jsx-depth 1 part-side jsx)) . 289) (313 . 319) (#("		    " 0 6 (jsx-depth 1 part-side jsx)) . 313) (337 . 341) (#("		" 0 2 (jsx-depth 1 part-side jsx)) . 337) (#("  " 0 2 (part-side jsx)) . 489) (#("  " 0 2 (part-side jsx)) . 502)) (26130 48429 828377 767000) 0 nil])
([nil nil ((219 . 220) (#("C" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 219) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1)) nil (26130 48695 290895 498000) 0 nil] [nil nil ((233 . 235)) ((#("js" 0 2 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 233) (undo-tree-id1388 . -2) (undo-tree-id1389 . -2) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (t 26130 48687 137505 688000)) (26130 48687 135119 234000) 0 nil])
([nil nil ((#("


const App = () => {
    return (
    );
};

export default App;
" 0 1 (part-side jsx) 1 2 (part-side jsx rear-nonsticky t) 2 3 (part-side jsx) 3 8 (face web-mode-keyword-face part-side jsx) 8 9 (part-side jsx) 9 12 (face web-mode-function-name-face part-side jsx) 12 23 (part-side jsx) 23 27 (part-side jsx) 27 33 (face web-mode-keyword-face part-side jsx) 33 36 (part-side jsx) 36 43 (part-side jsx) 43 46 (part-side jsx) 46 47 (part-side jsx) 47 53 (face web-mode-keyword-face part-side jsx) 53 54 (part-side jsx) 54 61 (face web-mode-keyword-face part-side jsx) 61 66 (part-side jsx) 66 67 (part-side jsx)) . 464) (undo-tree-id1220 . -67) (undo-tree-id1221 . -66) (undo-tree-id1223 . -1) (undo-tree-id1225 . -67) (undo-tree-id1227 . -67) 531) ((464 . 531)) (26130 48429 632354 749000) 0 nil])
([nil nil ((#("." 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 232) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (t 26130 48695 294180 839000)) nil (26130 48701 339213 946000) 0 nil])
nil
([nil nil ((#("C" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 208) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (t 26130 48363 420502 372000)) ((208 . 209)) (26130 48429 461238 197000) 0 nil])
([nil nil ((#("import CopyComponent from \"./components/copyComponent\";
" 0 6 (face web-mode-keyword-face part-side jsx) 6 7 (part-side jsx) 7 20 (face web-mode-type-face part-side jsx) 20 21 (part-side jsx) 21 25 (face web-mode-keyword-face part-side jsx) 25 26 (part-side jsx) 26 27 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 27 40 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 40 41 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 41 53 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 53 54 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side jsx) 54 55 (part-side jsx rear-nonsticky t) 55 56 (part-side jsx)) . 179) (undo-tree-id1400 . -53) (undo-tree-id1401 . 3) (undo-tree-id1402 . -53) (undo-tree-id1403 . -55) (undo-tree-id1404 . -29) (undo-tree-id1405 . -53) (undo-tree-id1406 . -53) (undo-tree-id1407 . -53) (undo-tree-id1408 . -53) (undo-tree-id1409 . -53) (undo-tree-id1410 . -53) (undo-tree-id1411 . -53) (undo-tree-id1412 . -53) (undo-tree-id1413 . -53) (undo-tree-id1414 . -53) (undo-tree-id1415 . -53) (undo-tree-id1416 . -53) (undo-tree-id1417 . -56) 232 (t 26130 48701 340853 794000)) nil (26130 49274 645906 214000) 0 nil])
([nil nil ((208 . 212)) ((#("wcom" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 1 2 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 2 3 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 3 4 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 208) (undo-tree-id1369 . -4) (undo-tree-id1370 . -4)) (26130 48429 292650 301000) 0 nil])
([nil nil ((254 . 261) (t 26130 49274 654781 990000) 253) nil (26130 50027 764664 412000) 0 nil])
([nil nil ((#("w" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . -208) (undo-tree-id1236 . -1) (undo-tree-id1238 . -1) (undo-tree-id1240 . -1) (undo-tree-id1242 . -1) (#("c" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . -209) (undo-tree-id1244 . -1) (undo-tree-id1246 . -1) (undo-tree-id1248 . -1) (undo-tree-id1250 . -1) (#("o" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . -210) (undo-tree-id1252 . -1) (undo-tree-id1254 . -1) (undo-tree-id1256 . -1) (#("m" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . -211) (undo-tree-id1258 . -1) (undo-tree-id1260 . -1) 212) ((208 . 212)) (26130 48429 124245 715000) 0 nil])
([nil nil ((261 . 270) (t 26130 50027 771932 23000)) nil (26130 50031 824890 929000) 0 nil])
([nil nil ((208 . 218)) ((#("component/" 0 9 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 9 10 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 208) (undo-tree-id1357 . -9) (undo-tree-id1358 . -9) (undo-tree-id1359 . -9) (undo-tree-id1360 . -9) (undo-tree-id1361 . -9) (undo-tree-id1362 . -9) (undo-tree-id1363 . -9) (undo-tree-id1364 . -9) (undo-tree-id1365 . -9) (undo-tree-id1366 . -10) (undo-tree-id1367 . -9) (undo-tree-id1368 . -10)) (26130 48428 948250 74000) 0 nil])
([nil nil ((nil rear-nonsticky nil 70 . 71) (#("
" 0 1 (part-side jsx)) . -113) (70 . 114) 69 (t 26130 50031 831934 629000)) nil (26130 50094 919011 247000) 0 nil])
([nil nil ((#("/" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . -217) (undo-tree-id1274 . -1) (undo-tree-id1276 . -1) 218 (t 26130 48397 420537 730000)) ((217 . 218)) (26130 48428 772267 294000) 0 nil])
([nil nil ((78 . 84) (#("Layout" 0 6 (face web-mode-type-face part-side jsx)) . 78) (undo-tree-id1421 . -5) (undo-tree-id1422 . -6) (undo-tree-id1423 . -6)) nil (26130 50094 919010 597000) 0 nil])
([nil nil ((217 . 219)) ((#("d/" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 1 2 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 217) (undo-tree-id1355 . -2) (undo-tree-id1356 . -2)) (26130 48428 593632 228000) 0 nil])
([nil nil ((104 . 110) (#("Layouts" 0 7 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 104) (undo-tree-id1418 . -6) (undo-tree-id1419 . -7) (undo-tree-id1420 . -7)) nil (26130 50094 919007 17000) 0 nil])
([nil nil ((#("d" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . -217) (undo-tree-id1264 . -1) (undo-tree-id1266 . -1) (undo-tree-id1268 . -1) (#("/" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . -218) (undo-tree-id1270 . -1) (undo-tree-id1272 . -1) 219) ((217 . 219)) (26130 48428 420218 512000) 0 nil])
([nil current ((93 . 99) (#("components" 0 10 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 93) (undo-tree-id1424 . -9) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -10) (undo-tree-id1430 . -10) (t 26130 50094 925308 455000)) nil (26130 50107 654725 311000) 0 nil])
([nil nil ((217 . 219)) ((#("s/" 0 2 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 217) (undo-tree-id1343 . -2) (undo-tree-id1344 . -2) (undo-tree-id1345 . -2) (undo-tree-id1346 . -2) (undo-tree-id1347 . -2) (undo-tree-id1348 . -2) (undo-tree-id1349 . -2) (undo-tree-id1350 . -2) (undo-tree-id1351 . -2) (undo-tree-id1352 . -2) (undo-tree-id1353 . -2) (undo-tree-id1354 . -2)) (26130 48428 204257 177000) 0 nil])
nil
([nil nil ((219 . 220) (t 26130 48402 973876 839000)) ((#("c" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 219) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1)) (26130 48428 6737 126000) 0 nil])
([nil nil ((220 . 223) (t 26130 48404 57211 299000)) ((#("omy" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 1 2 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 2 3 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 220) (undo-tree-id1319 . -3) (undo-tree-id1320 . -3) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -3) (undo-tree-id1329 . -1) (undo-tree-id1330 . -3)) (26130 48427 817841 731000) 0 nil])
([nil nil ((#("m" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . -221) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (#("y" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . -222) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) 223) ((221 . 223)) (26130 48427 644271 355000) 0 nil])
([nil nil ((221 . 226)) ((#("pyTol" 0 4 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx) 4 5 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 221) (undo-tree-id1309 . -5) (undo-tree-id1310 . -5) (undo-tree-id1311 . -4) (undo-tree-id1312 . -4) (undo-tree-id1313 . -4) (undo-tree-id1314 . -4) (undo-tree-id1315 . -4) (undo-tree-id1316 . -5) (undo-tree-id1317 . -4) (undo-tree-id1318 . -5)) (26130 48427 471550 381000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . -225) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) 226) ((225 . 226)) (26130 48427 236941 880000) 0 nil])
([nil nil ((225 . 229)) ((#("Clip" 0 4 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 225) (undo-tree-id1301 . -4) (undo-tree-id1302 . -4) (undo-tree-id1303 . -4) (undo-tree-id1304 . -4) (undo-tree-id1305 . -4) (undo-tree-id1306 . -4) (undo-tree-id1307 . -4) (undo-tree-id1308 . -4)) (26130 48426 937362 248000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 229) (undo-tree-id1277 . 1) (#("n" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 229) (undo-tree-id1278 . 1) (#("e" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 229) (undo-tree-id1279 . 1) (#("n" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 229) (undo-tree-id1280 . 1) (#("o" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 229) (undo-tree-id1281 . 1) (#("p" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 229) (undo-tree-id1282 . 1) (#("m" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 229) (undo-tree-id1283 . 1) (#("o" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 229) (undo-tree-id1284 . 1) (#("C" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 229) (undo-tree-id1285 . 1) (#("y" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 229) (undo-tree-id1286 . 1) (#("p" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 229) (undo-tree-id1287 . 1) (#("o" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side jsx)) . 229) (undo-tree-id1288 . 1)) ((229 . 230) (229 . 230) (229 . 230) (229 . 230) (229 . 230) (229 . 230) (229 . 230) (229 . 230) (229 . 230) (229 . 230) (229 . 230) (229 . 230) (t 26130 48411 593885 803000)) (26130 48411 590182 69000) 0 nil])
nil
